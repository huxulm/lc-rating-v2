{"title": "分享丨【题单】链表、二叉树与回溯（前后指针/快慢指针/DFS/BFS/直径/LCA/一般树）", "src": "https://leetcode.cn/circle/discuss/K0n2gO", "last_update": "2025-01-29T06:24:59.379173+00:00", "children": [{"title": "介绍", "summary": "<img src=\"https://pic.leetcode.cn/1723340796-CzPFMU-meme-tree-11.jpg\" alt=\"链表题单 二叉树题单 链表题目 二叉树题目 回溯题单 回溯题目 灵茶山艾府 灵神\" style=\"width: 100%;\"><br>", "isLeaf": false, "children": [{"title": "一、链表", "summary": "> 注：由于周赛中的链表题可以转成数组处理，难度比直接处理链表低，故不标明难度分。<br>带着问题去做下面的题目：<br>1. 在什么情况下，要用到哨兵节点（dummy node）？<br>2. 在什么情况下，循环条件要写 `while (node != null)`？什么情况下要写 `while (node.next != null)`？<br>", "isLeaf": false, "children": [{"title": "§1.1 遍历链表", "summary": "", "isLeaf": true, "children": [], "problems": [{"id": 1290, "title": "1290. 二进制链表转整数", "slug": "/convert-binary-number-in-a-linked-list-to-integer/", "src": "https://leetcode.cn/problems/convert-binary-number-in-a-linked-list-to-integer/", "solution": null, "score": 1151.3534799042, "isPremium": false}, {"id": 2058, "title": "2058. 找出临界点之间的最小和最大距离", "slug": "/find-the-minimum-and-maximum-number-of-nodes-between-critical-points/", "src": "https://leetcode.cn/problems/find-the-minimum-and-maximum-number-of-nodes-between-critical-points/", "solution": null, "score": 1310.9129840277, "isPremium": false}, {"id": 2181, "title": "2181. 合并零之间的节点", "slug": "/merge-nodes-in-between-zeros/", "src": "https://leetcode.cn/problems/merge-nodes-in-between-zeros/", "solution": null, "score": 1333.192050397, "isPremium": false}, {"id": 725, "title": "725. 分隔链表", "slug": "/split-linked-list-in-parts/", "src": "https://leetcode.cn/problems/split-linked-list-in-parts/", "solution": null, "score": null, "isPremium": false}, {"id": 817, "title": "817. 链表组件", "slug": "/linked-list-components/", "src": "https://leetcode.cn/problems/linked-list-components/", "solution": null, "score": 1428.712905903, "isPremium": false}, {"id": 3062, "title": "3062. 链表游戏的获胜者", "slug": "/winner-of-the-linked-list-game/", "src": "https://leetcode.cn/problems/winner-of-the-linked-list-game/", "solution": null, "score": null, "isPremium": true}, {"id": 3063, "title": "3063. 链表频率", "slug": "/linked-list-frequency/", "src": "https://leetcode.cn/problems/linked-list-frequency/", "solution": null, "score": null, "isPremium": true}]}, {"title": "§1.2 删除节点", "summary": "<a href=\"https://www.bilibili.com/video/BV1VP4y1Q71e/\">视频讲解【基础算法精讲 08】</a><br>", "isLeaf": true, "children": [], "problems": [{"id": 203, "title": "203. 移除链表元素", "slug": "/remove-linked-list-elements/", "src": "https://leetcode.cn/problems/remove-linked-list-elements/", "solution": null, "score": null, "isPremium": false}, {"id": 3217, "title": "3217. 从链表中移除在数组中存在的节点", "slug": "/delete-nodes-from-linked-list-present-in-array/", "src": "https://leetcode.cn/problems/delete-nodes-from-linked-list-present-in-array/", "solution": null, "score": 1341.7231008143, "isPremium": false}, {"id": 83, "title": "83. 删除排序链表中的重复元素", "slug": "/remove-duplicates-from-sorted-list/", "src": "https://leetcode.cn/problems/remove-duplicates-from-sorted-list/", "solution": null, "score": null, "isPremium": false}, {"id": 82, "title": "82. 删除排序链表中的重复元素 II", "slug": "/remove-duplicates-from-sorted-list-ii/", "src": "https://leetcode.cn/problems/remove-duplicates-from-sorted-list-ii/", "solution": null, "score": null, "isPremium": false}, {"id": 237, "title": "237. 删除链表中的节点", "slug": "/delete-node-in-a-linked-list/", "src": "https://leetcode.cn/problems/delete-node-in-a-linked-list/", "solution": null, "score": null, "isPremium": false}, {"id": 1669, "title": "1669. 合并两个链表", "slug": "/merge-in-between-linked-lists/", "src": "https://leetcode.cn/problems/merge-in-between-linked-lists/", "solution": null, "score": 1428.1443796872, "isPremium": false}, {"id": 2487, "title": "2487. 从链表中移除节点", "slug": "/remove-nodes-from-linked-list/", "src": "https://leetcode.cn/problems/remove-nodes-from-linked-list/", "solution": null, "score": 1454.5942017003, "isPremium": false}, {"id": 1836, "title": "1836. 从未排序的链表中移除重复元素", "slug": "/remove-duplicates-from-an-unsorted-linked-list/", "src": "https://leetcode.cn/problems/remove-duplicates-from-an-unsorted-linked-list/", "solution": null, "score": null, "isPremium": true}]}, {"title": "§1.3 插入节点", "summary": "", "isLeaf": true, "children": [], "problems": [{"id": 2807, "title": "2807. 在链表中插入最大公约数", "slug": "/insert-greatest-common-divisors-in-linked-list/", "src": "https://leetcode.cn/problems/insert-greatest-common-divisors-in-linked-list/", "solution": null, "score": 1279.0301521682, "isPremium": false}, {"id": 147, "title": "147. 对链表进行插入排序", "slug": "/insertion-sort-list/", "src": "https://leetcode.cn/problems/insertion-sort-list/", "solution": null, "score": null, "isPremium": false}, {"id": "LCR 029", "title": "LCR 029. 循环有序列表的插入", "slug": "/4ueAj6/", "src": "https://leetcode.cn/problems/4ueAj6/", "solution": null, "score": null, "isPremium": false}, {"id": 708, "title": "708. 循环有序列表的插入", "slug": "/insert-into-a-sorted-circular-linked-list/", "src": "https://leetcode.cn/problems/insert-into-a-sorted-circular-linked-list/", "solution": null, "score": null, "isPremium": true}, {"id": 2046, "title": "2046. 给按照绝对值排序的链表排序", "slug": "/sort-linked-list-already-sorted-using-absolute-values/", "src": "https://leetcode.cn/problems/sort-linked-list-already-sorted-using-absolute-values/", "solution": null, "score": null, "isPremium": true}]}, {"title": "§1.4 反转链表", "summary": "<a href=\"https://www.bilibili.com/video/BV1sd4y1x7KN/\">视频讲解【基础算法精讲 06】</a><br>", "isLeaf": true, "children": [], "problems": [{"id": 206, "title": "206. 反转链表", "slug": "/reverse-linked-list/", "src": "https://leetcode.cn/problems/reverse-linked-list/", "solution": null, "score": null, "isPremium": false}, {"id": 92, "title": "92. 反转链表 II", "slug": "/reverse-linked-list-ii/", "src": "https://leetcode.cn/problems/reverse-linked-list-ii/", "solution": null, "score": null, "isPremium": false}, {"id": 24, "title": "24. 两两交换链表中的节点", "slug": "/swap-nodes-in-pairs/", "src": "https://leetcode.cn/problems/swap-nodes-in-pairs/", "solution": null, "score": null, "isPremium": false}, {"id": 25, "title": "25. K 个一组翻转链表", "slug": "/reverse-nodes-in-k-group/", "src": "https://leetcode.cn/problems/reverse-nodes-in-k-group/", "solution": null, "score": null, "isPremium": false}, {"id": 2074, "title": "2074. 反转偶数长度组的节点", "slug": "/reverse-nodes-in-even-length-groups/", "src": "https://leetcode.cn/problems/reverse-nodes-in-even-length-groups/", "solution": null, "score": 1685.3599641299, "isPremium": false}]}, {"title": "§1.5 前后指针", "summary": "<a href=\"https://www.bilibili.com/video/BV1VP4y1Q71e/\">视频讲解【基础算法精讲 08】</a><br>", "isLeaf": true, "children": [], "problems": [{"id": 19, "title": "19. 删除链表的倒数第 N 个结点", "slug": "/remove-nth-node-from-end-of-list/", "src": "https://leetcode.cn/problems/remove-nth-node-from-end-of-list/", "solution": null, "score": null, "isPremium": false}, {"id": 61, "title": "61. 旋转链表", "slug": "/rotate-list/", "src": "https://leetcode.cn/problems/rotate-list/", "solution": null, "score": null, "isPremium": false}, {"id": 1721, "title": "1721. 交换链表中的节点", "slug": "/swapping-nodes-in-a-linked-list/", "src": "https://leetcode.cn/problems/swapping-nodes-in-a-linked-list/", "solution": null, "score": 1386.9203620297, "isPremium": false}, {"id": 1474, "title": "1474. 删除链表 M 个节点之后的 N 个节点", "slug": "/delete-n-nodes-after-m-nodes-of-a-linked-list/", "src": "https://leetcode.cn/problems/delete-n-nodes-after-m-nodes-of-a-linked-list/", "solution": null, "score": null, "isPremium": true}]}, {"title": "§1.6 快慢指针", "summary": "<a href=\"https://www.bilibili.com/video/BV1KG4y1G7cu/\">视频讲解【基础算法精讲 07】</a><br>", "isLeaf": true, "children": [], "problems": [{"id": 876, "title": "876. 链表的中间结点", "slug": "/middle-of-the-linked-list/", "src": "https://leetcode.cn/problems/middle-of-the-linked-list/", "solution": null, "score": 1231.6157956848, "isPremium": false}, {"id": 2095, "title": "2095. 删除链表的中间节点", "slug": "/delete-the-middle-node-of-a-linked-list/", "src": "https://leetcode.cn/problems/delete-the-middle-node-of-a-linked-list/", "solution": null, "score": 1324.3520304377, "isPremium": false}, {"id": 234, "title": "234. 回文链表", "slug": "/palindrome-linked-list/", "src": "https://leetcode.cn/problems/palindrome-linked-list/", "solution": null, "score": null, "isPremium": false}, {"id": 2130, "title": "2130. 链表最大孪生和", "slug": "/maximum-twin-sum-of-a-linked-list/", "src": "https://leetcode.cn/problems/maximum-twin-sum-of-a-linked-list/", "solution": null, "score": 1317.9207508583, "isPremium": false}, {"id": 143, "title": "143. 重排链表", "slug": "/reorder-list/", "src": "https://leetcode.cn/problems/reorder-list/", "solution": null, "score": null, "isPremium": false}, {"id": 141, "title": "141. 环形链表", "slug": "/linked-list-cycle/", "src": "https://leetcode.cn/problems/linked-list-cycle/", "solution": null, "score": null, "isPremium": false}, {"id": 142, "title": "142. 环形链表 II", "slug": "/linked-list-cycle-ii/", "src": "https://leetcode.cn/problems/linked-list-cycle-ii/", "solution": null, "score": null, "isPremium": false}, {"id": 457, "title": "457. 环形数组是否存在循环", "slug": "/circular-array-loop/", "src": "https://leetcode.cn/problems/circular-array-loop/", "solution": null, "score": null, "isPremium": false}, {"id": 2674, "title": "2674. 拆分循环链表", "slug": "/split-a-circular-linked-list/", "src": "https://leetcode.cn/problems/split-a-circular-linked-list/", "solution": null, "score": null, "isPremium": true}]}, {"title": "§1.7 双指针", "summary": "", "isLeaf": true, "children": [], "problems": [{"id": 328, "title": "328. 奇偶链表", "slug": "/odd-even-linked-list/", "src": "https://leetcode.cn/problems/odd-even-linked-list/", "solution": null, "score": null, "isPremium": false}, {"id": 86, "title": "86. 分隔链表", "slug": "/partition-list/", "src": "https://leetcode.cn/problems/partition-list/", "solution": null, "score": null, "isPremium": false}, {"id": 160, "title": "160. 相交链表", "slug": "/intersection-of-two-linked-lists/", "src": "https://leetcode.cn/problems/intersection-of-two-linked-lists/", "solution": null, "score": null, "isPremium": false}]}, {"title": "§1.8 合并链表", "summary": "", "isLeaf": true, "children": [], "problems": [{"id": 2, "title": "2. 两数相加", "slug": "/add-two-numbers/", "src": "https://leetcode.cn/problems/add-two-numbers/", "solution": null, "score": null, "isPremium": false}, {"id": 445, "title": "445. 两数相加 II", "slug": "/add-two-numbers-ii/", "src": "https://leetcode.cn/problems/add-two-numbers-ii/", "solution": null, "score": null, "isPremium": false}, {"id": 2816, "title": "2816. 翻倍以链表形式表示的数字", "slug": "/double-a-number-represented-as-a-linked-list/", "src": "https://leetcode.cn/problems/double-a-number-represented-as-a-linked-list/", "solution": null, "score": 1393.7857353048, "isPremium": false}, {"id": 21, "title": "21. 合并两个有序链表", "slug": "/merge-two-sorted-lists/", "src": "https://leetcode.cn/problems/merge-two-sorted-lists/", "solution": null, "score": null, "isPremium": false}, {"id": 369, "title": "369. 给单链表加一", "slug": "/plus-one-linked-list/", "src": "https://leetcode.cn/problems/plus-one-linked-list/", "solution": null, "score": null, "isPremium": true}, {"id": 1634, "title": "1634. 求两个多项式链表的和", "slug": "/add-two-polynomials-represented-as-linked-lists/", "src": "https://leetcode.cn/problems/add-two-polynomials-represented-as-linked-lists/", "solution": null, "score": null, "isPremium": true}]}, {"title": "§1.9 分治", "summary": "", "isLeaf": true, "children": [], "problems": [{"id": 23, "title": "23. 合并 K 个升序链表", "slug": "/merge-k-sorted-lists/", "src": "https://leetcode.cn/problems/merge-k-sorted-lists/", "solution": null, "score": null, "isPremium": false}, {"id": 148, "title": "148. 排序链表", "slug": "/sort-list/", "src": "https://leetcode.cn/problems/sort-list/", "solution": null, "score": null, "isPremium": false}]}, {"title": "§1.10 综合应用", "summary": "", "isLeaf": true, "children": [], "problems": [{"id": 1019, "title": "1019. 链表中的下一个更大节点", "slug": "/next-greater-node-in-linked-list/", "src": "https://leetcode.cn/problems/next-greater-node-in-linked-list/", "solution": null, "score": 1570.8347522104, "isPremium": false}, {"id": 1171, "title": "1171. 从链表中删去总和值为零的连续节点", "slug": "/remove-zero-sum-consecutive-nodes-from-linked-list/", "src": "https://leetcode.cn/problems/remove-zero-sum-consecutive-nodes-from-linked-list/", "solution": null, "score": 1782.3312212058, "isPremium": false}, {"id": 707, "title": "707. 设计链表", "slug": "/design-linked-list/", "src": "https://leetcode.cn/problems/design-linked-list/", "solution": null, "score": null, "isPremium": false}, {"id": 146, "title": "146. LRU 缓存", "slug": "/lru-cache/", "src": "https://leetcode.cn/problems/lru-cache/", "solution": null, "score": null, "isPremium": false}, {"id": 460, "title": "460. LFU 缓存", "slug": "/lfu-cache/", "src": "https://leetcode.cn/problems/lfu-cache/", "solution": null, "score": null, "isPremium": false}, {"id": 432, "title": "432. 全 O(1) 的数据结构", "slug": "/all-oone-data-structure/", "src": "https://leetcode.cn/problems/all-oone-data-structure/", "solution": null, "score": null, "isPremium": false}, {"id": 1206, "title": "1206. 设计跳表", "slug": "/design-skiplist/", "src": "https://leetcode.cn/problems/design-skiplist/", "solution": null, "score": null, "isPremium": false}]}, {"title": "§1.11 其他", "summary": "", "isLeaf": true, "children": [], "problems": [{"id": 138, "title": "138. 随机链表的复制", "slug": "/copy-list-with-random-pointer/", "src": "https://leetcode.cn/problems/copy-list-with-random-pointer/", "solution": null, "score": null, "isPremium": false}, {"id": 382, "title": "382. 链表随机节点", "slug": "/linked-list-random-node/", "src": "https://leetcode.cn/problems/linked-list-random-node/", "solution": null, "score": null, "isPremium": false}, {"id": 430, "title": "430. 扁平化多级双向链表", "slug": "/flatten-a-multilevel-doubly-linked-list/", "src": "https://leetcode.cn/problems/flatten-a-multilevel-doubly-linked-list/", "solution": null, "score": null, "isPremium": false}, {"id": 1265, "title": "1265. 逆序打印不可变链表", "slug": "/print-immutable-linked-list-in-reverse/", "src": "https://leetcode.cn/problems/print-immutable-linked-list-in-reverse/", "solution": null, "score": null, "isPremium": true}]}], "problems": []}, {"title": "二、二叉树", "summary": "<img src=\"https://pic.leetcode.cn/1724824379-UOsXIV-dfsbfsnew-c.png\" alt=\"DFS BFS\" style=\"width: 100%;\"><br>**学习递归，从二叉树开始。**<br>晕递归的同学，请先看视频讲解<a href=\"https://www.bilibili.com/video/BV1UD4y1Y769/\">【基础算法精讲 09】</a>，欢迎点赞~<br>带着问题去做下面的题目：<br>1. 一般来说，DFS 的递归边界是空节点。在什么情况下，要额外把**叶子节点**作为递归边界？<br>2. 在什么情况下，DFS 需要有返回值？什么情况下不需要有返回值？<br>3. 在什么情况下，题目更适合用**自顶向下**的方法解决？什么情况下更适合用**自底向上**的方法解决？<br>", "isLeaf": false, "children": [{"title": "§2.1 遍历二叉树", "summary": "", "isLeaf": true, "children": [], "problems": [{"id": 144, "title": "144. 二叉树的前序遍历", "slug": "/binary-tree-preorder-traversal/", "src": "https://leetcode.cn/problems/binary-tree-preorder-traversal/", "solution": null, "score": null, "isPremium": false}, {"id": 94, "title": "94. 二叉树的中序遍历", "slug": "/binary-tree-inorder-traversal/", "src": "https://leetcode.cn/problems/binary-tree-inorder-traversal/", "solution": null, "score": null, "isPremium": false}, {"id": 145, "title": "145. 二叉树的后序遍历", "slug": "/binary-tree-postorder-traversal/", "src": "https://leetcode.cn/problems/binary-tree-postorder-traversal/", "solution": null, "score": null, "isPremium": false}, {"id": 872, "title": "872. 叶子相似的树", "slug": "/leaf-similar-trees/", "src": "https://leetcode.cn/problems/leaf-similar-trees/", "solution": null, "score": 1287.8970301681, "isPremium": false}, {"id": "LCP 44", "title": "LCP 44. 开幕式焰火", "slug": "/sZ59z6/", "src": "https://leetcode.cn/problems/sZ59z6/", "solution": null, "score": null, "isPremium": false}, {"id": 404, "title": "404. 左叶子之和", "slug": "/sum-of-left-leaves/", "src": "https://leetcode.cn/problems/sum-of-left-leaves/", "solution": null, "score": null, "isPremium": false}, {"id": 671, "title": "671. 二叉树中第二小的节点", "slug": "/second-minimum-node-in-a-binary-tree/", "src": "https://leetcode.cn/problems/second-minimum-node-in-a-binary-tree/", "solution": null, "score": null, "isPremium": false}, {"id": 1469, "title": "1469. 寻找所有的独生节点", "slug": "/find-all-the-lonely-nodes/", "src": "https://leetcode.cn/problems/find-all-the-lonely-nodes/", "solution": null, "score": null, "isPremium": true}, {"id": 1214, "title": "1214. 查找两棵二叉搜索树之和", "slug": "/two-sum-bsts/", "src": "https://leetcode.cn/problems/two-sum-bsts/", "solution": null, "score": 1389.0328392117, "isPremium": true}, {"id": 2764, "title": "2764. 数组是否表示某二叉树的前序遍历", "slug": "/is-array-a-preorder-of-some-binary-tree/", "src": "https://leetcode.cn/problems/is-array-a-preorder-of-some-binary-tree/", "solution": null, "score": null, "isPremium": true}]}, {"title": "§2.2 自顶向下 DFS", "summary": "在「递」的过程中维护值。<br>> 有些题目自顶向下和自底向上都可以做。有些题目也可以用 BFS 做。<br>", "isLeaf": true, "children": [], "problems": [{"id": 104, "title": "104. 二叉树的最大深度", "slug": "/maximum-depth-of-binary-tree/", "src": "https://leetcode.cn/problems/maximum-depth-of-binary-tree/", "solution": null, "score": null, "isPremium": false}, {"id": 111, "title": "111. 二叉树的最小深度", "slug": "/minimum-depth-of-binary-tree/", "src": "https://leetcode.cn/problems/minimum-depth-of-binary-tree/", "solution": null, "score": null, "isPremium": false}, {"id": 112, "title": "112. 路径总和", "slug": "/path-sum/", "src": "https://leetcode.cn/problems/path-sum/", "solution": null, "score": null, "isPremium": false}, {"id": 129, "title": "129. 求根节点到叶节点数字之和", "slug": "/sum-root-to-leaf-numbers/", "src": "https://leetcode.cn/problems/sum-root-to-leaf-numbers/", "solution": null, "score": null, "isPremium": false}, {"id": 199, "title": "199. 二叉树的右视图", "slug": "/binary-tree-right-side-view/", "src": "https://leetcode.cn/problems/binary-tree-right-side-view/", "solution": null, "score": null, "isPremium": false}, {"id": 1448, "title": "1448. 统计二叉树中好节点的数目", "slug": "/count-good-nodes-in-binary-tree/", "src": "https://leetcode.cn/problems/count-good-nodes-in-binary-tree/", "solution": null, "score": 1360.2184128413, "isPremium": false}, {"id": 1457, "title": "1457. 二叉树中的伪回文路径", "slug": "/pseudo-palindromic-paths-in-a-binary-tree/", "src": "https://leetcode.cn/problems/pseudo-palindromic-paths-in-a-binary-tree/", "solution": null, "score": 1405.0021415178, "isPremium": false}, {"id": 1315, "title": "1315. 祖父节点值为偶数的节点和", "slug": "/sum-of-nodes-with-even-valued-grandparent/", "src": "https://leetcode.cn/problems/sum-of-nodes-with-even-valued-grandparent/", "solution": null, "score": 1426.948379305, "isPremium": false}, {"id": 988, "title": "988. 从叶结点开始的最小字符串", "slug": "/smallest-string-starting-from-leaf/", "src": "https://leetcode.cn/problems/smallest-string-starting-from-leaf/", "solution": null, "score": 1429.1878389249, "isPremium": false}, {"id": 1026, "title": "1026. 节点与其祖先之间的最大差值", "slug": "/maximum-difference-between-node-and-ancestor/", "src": "https://leetcode.cn/problems/maximum-difference-between-node-and-ancestor/", "solution": null, "score": 1446.4280778775, "isPremium": false}, {"id": 1022, "title": "1022. 从根到叶的二进制数之和", "slug": "/sum-of-root-to-leaf-binary-numbers/", "src": "https://leetcode.cn/problems/sum-of-root-to-leaf-binary-numbers/", "solution": null, "score": 1462.4423844498, "isPremium": false}, {"id": 623, "title": "623. 在二叉树中增加一行", "slug": "/add-one-row-to-tree/", "src": "https://leetcode.cn/problems/add-one-row-to-tree/", "solution": null, "score": null, "isPremium": false}, {"id": 1372, "title": "1372. 二叉树中的最长交错路径", "slug": "/longest-zigzag-path-in-a-binary-tree/", "src": "https://leetcode.cn/problems/longest-zigzag-path-in-a-binary-tree/", "solution": null, "score": 1713.2768268466, "isPremium": false}, {"id": 971, "title": "971. 翻转二叉树以匹配先序遍历", "slug": "/flip-binary-tree-to-match-preorder-traversal/", "src": "https://leetcode.cn/problems/flip-binary-tree-to-match-preorder-traversal/", "solution": null, "score": 1786.5491561897, "isPremium": false}, {"id": 2689, "title": "2689. 从 Rope 树中提取第 K 个字符", "slug": "/extract-kth-character-from-the-rope-tree/", "src": "https://leetcode.cn/problems/extract-kth-character-from-the-rope-tree/", "solution": null, "score": null, "isPremium": true}, {"id": 298, "title": "298. 二叉树最长连续序列", "slug": "/binary-tree-longest-consecutive-sequence/", "src": "https://leetcode.cn/problems/binary-tree-longest-consecutive-sequence/", "solution": null, "score": null, "isPremium": true}, {"id": 1430, "title": "1430. 判断给定的序列是否是二叉树从根到叶的路径", "slug": "/check-if-a-string-is-a-valid-sequence-from-root-to-leaves-path-in-a-binary-tree/", "src": "https://leetcode.cn/problems/check-if-a-string-is-a-valid-sequence-from-root-to-leaves-path-in-a-binary-tree/", "solution": null, "score": null, "isPremium": true}, {"id": 545, "title": "545. 二叉树的边界", "slug": "/boundary-of-binary-tree/", "src": "https://leetcode.cn/problems/boundary-of-binary-tree/", "solution": null, "score": null, "isPremium": true}]}, {"title": "§2.3 自底向上 DFS", "summary": "在「归」的过程中计算。<br><a href=\"https://www.bilibili.com/video/BV18M411z7bb/\">如何灵活运用递归？【基础算法精讲 10】</a><br>", "isLeaf": true, "children": [], "problems": [{"id": 104, "title": "104. 二叉树的最大深度", "slug": "/maximum-depth-of-binary-tree/", "src": "https://leetcode.cn/problems/maximum-depth-of-binary-tree/", "solution": null, "score": null, "isPremium": false}, {"id": 111, "title": "111. 二叉树的最小深度", "slug": "/minimum-depth-of-binary-tree/", "src": "https://leetcode.cn/problems/minimum-depth-of-binary-tree/", "solution": null, "score": null, "isPremium": false}, {"id": 965, "title": "965. 单值二叉树", "slug": "/univalued-binary-tree/", "src": "https://leetcode.cn/problems/univalued-binary-tree/", "solution": null, "score": 1177.5660617941, "isPremium": false}, {"id": 100, "title": "100. 相同的树", "slug": "/same-tree/", "src": "https://leetcode.cn/problems/same-tree/", "solution": null, "score": null, "isPremium": false}, {"id": 101, "title": "101. 对称二叉树", "slug": "/symmetric-tree/", "src": "https://leetcode.cn/problems/symmetric-tree/", "solution": null, "score": null, "isPremium": false}, {"id": 951, "title": "951. 翻转等价二叉树", "slug": "/flip-equivalent-binary-trees/", "src": "https://leetcode.cn/problems/flip-equivalent-binary-trees/", "solution": null, "score": 1477.4844514104, "isPremium": false}, {"id": 1379, "title": "1379. 找出克隆二叉树中的相同节点", "slug": "/find-a-corresponding-node-of-a-binary-tree-in-a-clone-of-that-tree/", "src": "https://leetcode.cn/problems/find-a-corresponding-node-of-a-binary-tree-in-a-clone-of-that-tree/", "solution": null, "score": null, "isPremium": false}, {"id": 110, "title": "110. 平衡二叉树", "slug": "/balanced-binary-tree/", "src": "https://leetcode.cn/problems/balanced-binary-tree/", "solution": null, "score": null, "isPremium": false}, {"id": 226, "title": "226. 翻转二叉树", "slug": "/invert-binary-tree/", "src": "https://leetcode.cn/problems/invert-binary-tree/", "solution": null, "score": null, "isPremium": false}, {"id": 617, "title": "617. 合并二叉树", "slug": "/merge-two-binary-trees/", "src": "https://leetcode.cn/problems/merge-two-binary-trees/", "solution": null, "score": null, "isPremium": false}, {"id": 2331, "title": "2331. 计算布尔二叉树的值", "slug": "/evaluate-boolean-binary-tree/", "src": "https://leetcode.cn/problems/evaluate-boolean-binary-tree/", "solution": null, "score": 1303.5594588137, "isPremium": false}, {"id": 508, "title": "508. 出现次数最多的子树元素和", "slug": "/most-frequent-subtree-sum/", "src": "https://leetcode.cn/problems/most-frequent-subtree-sum/", "solution": null, "score": null, "isPremium": false}, {"id": 563, "title": "563. 二叉树的坡度", "slug": "/binary-tree-tilt/", "src": "https://leetcode.cn/problems/binary-tree-tilt/", "solution": null, "score": null, "isPremium": false}, {"id": 606, "title": "606. 根据二叉树创建字符串", "slug": "/construct-string-from-binary-tree/", "src": "https://leetcode.cn/problems/construct-string-from-binary-tree/", "solution": null, "score": null, "isPremium": false}, {"id": 2265, "title": "2265. 统计值等于子树平均值的节点数", "slug": "/count-nodes-equal-to-average-of-subtree/", "src": "https://leetcode.cn/problems/count-nodes-equal-to-average-of-subtree/", "solution": null, "score": 1472.7864965062, "isPremium": false}, {"id": 1026, "title": "1026. 节点与其祖先之间的最大差值", "slug": "/maximum-difference-between-node-and-ancestor/", "src": "https://leetcode.cn/problems/maximum-difference-between-node-and-ancestor/", "solution": null, "score": 1446.4280778775, "isPremium": false}, {"id": 3319, "title": "3319. 第 K 大的完美二叉子树的大小", "slug": "/k-th-largest-perfect-subtree-size-in-binary-tree/", "src": "https://leetcode.cn/problems/k-th-largest-perfect-subtree-size-in-binary-tree/", "solution": null, "score": 1603.252304506, "isPremium": false}, {"id": 1339, "title": "1339. 分裂二叉树的最大乘积", "slug": "/maximum-product-of-splitted-binary-tree/", "src": "https://leetcode.cn/problems/maximum-product-of-splitted-binary-tree/", "solution": null, "score": 1674.9985842835, "isPremium": false}, {"id": 1372, "title": "1372. 二叉树中的最长交错路径", "slug": "/longest-zigzag-path-in-a-binary-tree/", "src": "https://leetcode.cn/problems/longest-zigzag-path-in-a-binary-tree/", "solution": null, "score": 1713.2768268466, "isPremium": false}, {"id": 1145, "title": "1145. 二叉树着色游戏", "slug": "/binary-tree-coloring-game/", "src": "https://leetcode.cn/problems/binary-tree-coloring-game/", "solution": null, "score": 1741.4527995252, "isPremium": false}, {"id": 572, "title": "572. 另一棵树的子树", "slug": "/subtree-of-another-tree/", "src": "https://leetcode.cn/problems/subtree-of-another-tree/", "solution": null, "score": null, "isPremium": false}, {"id": 1530, "title": "1530. 好叶子节点对的数量", "slug": "/number-of-good-leaf-nodes-pairs/", "src": "https://leetcode.cn/problems/number-of-good-leaf-nodes-pairs/", "solution": null, "score": 1745.6580748712, "isPremium": false}, {"id": "LCP 67", "title": "LCP 67. 装饰树", "slug": "/KnLfVT/", "src": "https://leetcode.cn/problems/KnLfVT/", "solution": null, "score": null, "isPremium": false}, {"id": 298, "title": "298. 二叉树最长连续序列", "slug": "/binary-tree-longest-consecutive-sequence/", "src": "https://leetcode.cn/problems/binary-tree-longest-consecutive-sequence/", "solution": null, "score": null, "isPremium": true}, {"id": 250, "title": "250. 统计同值子树", "slug": "/count-univalue-subtrees/", "src": "https://leetcode.cn/problems/count-univalue-subtrees/", "solution": null, "score": null, "isPremium": true}, {"id": 1973, "title": "1973. 值等于子节点值之和的节点数量", "slug": "/count-nodes-equal-to-sum-of-descendants/", "src": "https://leetcode.cn/problems/count-nodes-equal-to-sum-of-descendants/", "solution": null, "score": null, "isPremium": true}, {"id": 663, "title": "663. 均匀树划分", "slug": "/equal-tree-partition/", "src": "https://leetcode.cn/problems/equal-tree-partition/", "solution": null, "score": null, "isPremium": true}, {"id": 1120, "title": "1120. 子树的最大平均值", "slug": "/maximum-average-subtree/", "src": "https://leetcode.cn/problems/maximum-average-subtree/", "solution": null, "score": 1361.8801013336, "isPremium": true}, {"id": 2792, "title": "2792. 计算足够大的节点数", "slug": "/count-nodes-that-are-great-enough/", "src": "https://leetcode.cn/problems/count-nodes-that-are-great-enough/", "solution": null, "score": null, "isPremium": true}, {"id": 333, "title": "333. 最大二叉搜索子树", "slug": "/largest-bst-subtree/", "src": "https://leetcode.cn/problems/largest-bst-subtree/", "solution": null, "score": null, "isPremium": true}, {"id": 366, "title": "366. 寻找二叉树的叶子节点", "slug": "/find-leaves-of-binary-tree/", "src": "https://leetcode.cn/problems/find-leaves-of-binary-tree/", "solution": null, "score": null, "isPremium": true}, {"id": 156, "title": "156. 上下翻转二叉树", "slug": "/binary-tree-upside-down/", "src": "https://leetcode.cn/problems/binary-tree-upside-down/", "solution": null, "score": null, "isPremium": true}, {"id": 1612, "title": "1612. 检查两棵二叉表达式树是否等价", "slug": "/check-if-two-expression-trees-are-equivalent/", "src": "https://leetcode.cn/problems/check-if-two-expression-trees-are-equivalent/", "solution": null, "score": null, "isPremium": true}]}, {"title": "§2.4 自底向上 DFS：删点", "summary": "", "isLeaf": true, "children": [], "problems": [{"id": 814, "title": "814. 二叉树剪枝", "slug": "/binary-tree-pruning/", "src": "https://leetcode.cn/problems/binary-tree-pruning/", "solution": null, "score": 1380.1541980647, "isPremium": false}, {"id": 1325, "title": "1325. 删除给定值的叶子节点", "slug": "/delete-leaves-with-a-given-value/", "src": "https://leetcode.cn/problems/delete-leaves-with-a-given-value/", "solution": null, "score": 1407.1322366299, "isPremium": false}, {"id": 1110, "title": "1110. 删点成林", "slug": "/delete-nodes-and-return-forest/", "src": "https://leetcode.cn/problems/delete-nodes-and-return-forest/", "solution": null, "score": 1511.3725353467, "isPremium": false}]}, {"title": "§2.5 有递有归", "summary": "", "isLeaf": true, "children": [], "problems": [{"id": 538, "title": "538. 把二叉搜索树转换为累加树", "slug": "/convert-bst-to-greater-tree/", "src": "https://leetcode.cn/problems/convert-bst-to-greater-tree/", "solution": null, "score": null, "isPremium": false}, {"id": 1038, "title": "1038. 从二叉搜索树到更大和树", "slug": "/binary-search-tree-to-greater-sum-tree/", "src": "https://leetcode.cn/problems/binary-search-tree-to-greater-sum-tree/", "solution": null, "score": 1374.6755455786, "isPremium": false}, {"id": 865, "title": "865. 具有所有最深节点的最小子树", "slug": "/smallest-subtree-with-all-the-deepest-nodes/", "src": "https://leetcode.cn/problems/smallest-subtree-with-all-the-deepest-nodes/", "solution": null, "score": 1534.325005151, "isPremium": false}, {"id": 1080, "title": "1080. 根到叶路径上的不足节点", "slug": "/insufficient-nodes-in-root-to-leaf-paths/", "src": "https://leetcode.cn/problems/insufficient-nodes-in-root-to-leaf-paths/", "solution": null, "score": 1804.5783242151, "isPremium": false}]}, {"title": "§2.6 直径", "summary": "<a href=\"https://www.bilibili.com/video/BV17o4y187h1/\">视频讲解【基础算法精讲 23】</a><br>另见下文：一般树的直径。<br>", "isLeaf": true, "children": [], "problems": [{"id": 543, "title": "543. 二叉树的直径", "slug": "/diameter-of-binary-tree/", "src": "https://leetcode.cn/problems/diameter-of-binary-tree/", "solution": null, "score": null, "isPremium": false}, {"id": 687, "title": "687. 最长同值路径", "slug": "/longest-univalue-path/", "src": "https://leetcode.cn/problems/longest-univalue-path/", "solution": null, "score": null, "isPremium": false}, {"id": 124, "title": "124. 二叉树中的最大路径和", "slug": "/binary-tree-maximum-path-sum/", "src": "https://leetcode.cn/problems/binary-tree-maximum-path-sum/", "solution": null, "score": null, "isPremium": false}, {"id": 2385, "title": "2385. 感染二叉树需要的总时间", "slug": "/amount-of-time-for-binary-tree-to-be-infected/", "src": "https://leetcode.cn/problems/amount-of-time-for-binary-tree-to-be-infected/", "solution": null, "score": 1711.4873176824, "isPremium": false}, {"id": 549, "title": "549. 二叉树最长连续序列 II", "slug": "/binary-tree-longest-consecutive-sequence-ii/", "src": "https://leetcode.cn/problems/binary-tree-longest-consecutive-sequence-ii/", "solution": null, "score": null, "isPremium": true}]}, {"title": "§2.7 回溯", "summary": "", "isLeaf": true, "children": [], "problems": [{"id": 257, "title": "257. 二叉树的所有路径", "slug": "/binary-tree-paths/", "src": "https://leetcode.cn/problems/binary-tree-paths/", "solution": null, "score": null, "isPremium": false}, {"id": 113, "title": "113. 路径总和 II", "slug": "/path-sum-ii/", "src": "https://leetcode.cn/problems/path-sum-ii/", "solution": null, "score": null, "isPremium": false}, {"id": 437, "title": "437. 路径总和 III", "slug": "/path-sum-iii/", "src": "https://leetcode.cn/problems/path-sum-iii/", "solution": null, "score": null, "isPremium": false}]}, {"title": "§2.8 最近公共祖先", "summary": "<a href=\"https://www.bilibili.com/video/BV1W44y1Z7AR/\">视频讲解【基础算法精讲 12】</a><br>", "isLeaf": true, "children": [], "problems": [{"id": 235, "title": "235. 二叉搜索树的最近公共祖先", "slug": "/lowest-common-ancestor-of-a-binary-search-tree/", "src": "https://leetcode.cn/problems/lowest-common-ancestor-of-a-binary-search-tree/", "solution": null, "score": null, "isPremium": false}, {"id": 236, "title": "236. 二叉树的最近公共祖先", "slug": "/lowest-common-ancestor-of-a-binary-tree/", "src": "https://leetcode.cn/problems/lowest-common-ancestor-of-a-binary-tree/", "solution": null, "score": null, "isPremium": false}, {"id": 1123, "title": "1123. 最深叶节点的最近公共祖先", "slug": "/lowest-common-ancestor-of-deepest-leaves/", "src": "https://leetcode.cn/problems/lowest-common-ancestor-of-deepest-leaves/", "solution": null, "score": 1607.0005715974, "isPremium": false}, {"id": 2096, "title": "2096. 从二叉树一个节点到另一个节点每一步的方向", "slug": "/step-by-step-directions-from-a-binary-tree-node-to-another/", "src": "https://leetcode.cn/problems/step-by-step-directions-from-a-binary-tree-node-to-another/", "solution": null, "score": 1804.5283324227, "isPremium": false}, {"id": 1740, "title": "1740. 找到二叉树中的距离", "slug": "/find-distance-in-a-binary-tree/", "src": "https://leetcode.cn/problems/find-distance-in-a-binary-tree/", "solution": null, "score": null, "isPremium": true}, {"id": 1644, "title": "1644. 二叉树的最近公共祖先 II", "slug": "/lowest-common-ancestor-of-a-binary-tree-ii/", "src": "https://leetcode.cn/problems/lowest-common-ancestor-of-a-binary-tree-ii/", "solution": null, "score": null, "isPremium": true}, {"id": 1650, "title": "1650. 二叉树的最近公共祖先 III", "slug": "/lowest-common-ancestor-of-a-binary-tree-iii/", "src": "https://leetcode.cn/problems/lowest-common-ancestor-of-a-binary-tree-iii/", "solution": null, "score": null, "isPremium": true}, {"id": 1676, "title": "1676. 二叉树的最近公共祖先 IV", "slug": "/lowest-common-ancestor-of-a-binary-tree-iv/", "src": "https://leetcode.cn/problems/lowest-common-ancestor-of-a-binary-tree-iv/", "solution": null, "score": null, "isPremium": true}]}, {"title": "§2.9 二叉搜索树", "summary": "<a href=\"https://www.bilibili.com/video/BV14G411P7C1/\">视频讲解【基础算法精讲 11】</a><br>", "isLeaf": true, "children": [], "problems": [{"id": 98, "title": "98. 验证二叉搜索树", "slug": "/validate-binary-search-tree/", "src": "https://leetcode.cn/problems/validate-binary-search-tree/", "solution": null, "score": null, "isPremium": false}, {"id": 230, "title": "230. 二叉搜索树中第 K 小的元素", "slug": "/kth-smallest-element-in-a-bst/", "src": "https://leetcode.cn/problems/kth-smallest-element-in-a-bst/", "solution": null, "score": null, "isPremium": false}, {"id": 501, "title": "501. 二叉搜索树中的众数", "slug": "/find-mode-in-binary-search-tree/", "src": "https://leetcode.cn/problems/find-mode-in-binary-search-tree/", "solution": null, "score": null, "isPremium": false}, {"id": 99, "title": "99. 恢复二叉搜索树", "slug": "/recover-binary-search-tree/", "src": "https://leetcode.cn/problems/recover-binary-search-tree/", "solution": null, "score": null, "isPremium": false}, {"id": 700, "title": "700. 二叉搜索树中的搜索", "slug": "/search-in-a-binary-search-tree/", "src": "https://leetcode.cn/problems/search-in-a-binary-search-tree/", "solution": null, "score": null, "isPremium": false}, {"id": 530, "title": "530. 二叉搜索树的最小绝对差", "slug": "/minimum-absolute-difference-in-bst/", "src": "https://leetcode.cn/problems/minimum-absolute-difference-in-bst/", "solution": null, "score": null, "isPremium": false}, {"id": 783, "title": "783. 二叉搜索树节点最小距离", "slug": "/minimum-distance-between-bst-nodes/", "src": "https://leetcode.cn/problems/minimum-distance-between-bst-nodes/", "solution": null, "score": 1303.3201984827, "isPremium": false}, {"id": 1305, "title": "1305. 两棵二叉搜索树中的所有元素", "slug": "/all-elements-in-two-binary-search-trees/", "src": "https://leetcode.cn/problems/all-elements-in-two-binary-search-trees/", "solution": null, "score": 1260.1755576607, "isPremium": false}, {"id": 938, "title": "938. 二叉搜索树的范围和", "slug": "/range-sum-of-bst/", "src": "https://leetcode.cn/problems/range-sum-of-bst/", "solution": null, "score": 1335.0295688697, "isPremium": false}, {"id": 897, "title": "897. 递增顺序搜索树", "slug": "/increasing-order-search-tree/", "src": "https://leetcode.cn/problems/increasing-order-search-tree/", "solution": null, "score": 1473.2523136772, "isPremium": false}, {"id": 2476, "title": "2476. 二叉搜索树最近节点查询", "slug": "/closest-nodes-queries-in-a-binary-search-tree/", "src": "https://leetcode.cn/problems/closest-nodes-queries-in-a-binary-search-tree/", "solution": null, "score": 1596.9852244916, "isPremium": false}, {"id": 653, "title": "653. 两数之和 IV - 输入二叉搜索树", "slug": "/two-sum-iv-input-is-a-bst/", "src": "https://leetcode.cn/problems/two-sum-iv-input-is-a-bst/", "solution": null, "score": null, "isPremium": false}, {"id": 1373, "title": "1373. 二叉搜索子树的最大键值和", "slug": "/maximum-sum-bst-in-binary-tree/", "src": "https://leetcode.cn/problems/maximum-sum-bst-in-binary-tree/", "solution": null, "score": 1913.6704728453, "isPremium": false}, {"id": 1932, "title": "1932. 合并多棵二叉搜索树", "slug": "/merge-bsts-to-create-single-bst/", "src": "https://leetcode.cn/problems/merge-bsts-to-create-single-bst/", "solution": null, "score": 2483.9435767299, "isPremium": false}, {"id": 285, "title": "285. 二叉搜索树中的中序后继", "slug": "/inorder-successor-in-bst/", "src": "https://leetcode.cn/problems/inorder-successor-in-bst/", "solution": null, "score": null, "isPremium": true}, {"id": 510, "title": "510. 二叉搜索树中的中序后继 II", "slug": "/inorder-successor-in-bst-ii/", "src": "https://leetcode.cn/problems/inorder-successor-in-bst-ii/", "solution": null, "score": null, "isPremium": true}, {"id": 270, "title": "270. 最接近的二叉搜索树值", "slug": "/closest-binary-search-tree-value/", "src": "https://leetcode.cn/problems/closest-binary-search-tree-value/", "solution": null, "score": null, "isPremium": true}, {"id": 272, "title": "272. 最接近的二叉搜索树值 II", "slug": "/closest-binary-search-tree-value-ii/", "src": "https://leetcode.cn/problems/closest-binary-search-tree-value-ii/", "solution": null, "score": null, "isPremium": true}, {"id": 255, "title": "255. 验证二叉搜索树的前序遍历序列", "slug": "/verify-preorder-sequence-in-binary-search-tree/", "src": "https://leetcode.cn/problems/verify-preorder-sequence-in-binary-search-tree/", "solution": null, "score": null, "isPremium": true}, {"id": 1902, "title": "1902. 给定二叉搜索树的插入顺序求深度", "slug": "/depth-of-bst-given-insertion-order/", "src": "https://leetcode.cn/problems/depth-of-bst-given-insertion-order/", "solution": null, "score": null, "isPremium": true}]}, {"title": "§2.10 创建二叉树", "summary": "", "isLeaf": true, "children": [], "problems": [{"id": 108, "title": "108. 将有序数组转换为二叉搜索树", "slug": "/convert-sorted-array-to-binary-search-tree/", "src": "https://leetcode.cn/problems/convert-sorted-array-to-binary-search-tree/", "solution": null, "score": null, "isPremium": false}, {"id": 654, "title": "654. 最大二叉树", "slug": "/maximum-binary-tree/", "src": "https://leetcode.cn/problems/maximum-binary-tree/", "solution": null, "score": null, "isPremium": false}, {"id": 998, "title": "998. 最大二叉树 II", "slug": "/maximum-binary-tree-ii/", "src": "https://leetcode.cn/problems/maximum-binary-tree-ii/", "solution": null, "score": 1497.8880991093, "isPremium": false}, {"id": 1008, "title": "1008. 前序遍历构造二叉搜索树", "slug": "/construct-binary-search-tree-from-preorder-traversal/", "src": "https://leetcode.cn/problems/construct-binary-search-tree-from-preorder-traversal/", "solution": null, "score": 1562.9802666517, "isPremium": false}, {"id": 1382, "title": "1382. 将二叉搜索树变平衡", "slug": "/balance-a-binary-search-tree/", "src": "https://leetcode.cn/problems/balance-a-binary-search-tree/", "solution": null, "score": 1540.5750839091, "isPremium": false}, {"id": 2196, "title": "2196. 根据描述创建二叉树", "slug": "/create-binary-tree-from-descriptions/", "src": "https://leetcode.cn/problems/create-binary-tree-from-descriptions/", "solution": null, "score": 1643.5283095007, "isPremium": false}, {"id": 105, "title": "105. 从前序与中序遍历序列构造二叉树", "slug": "/construct-binary-tree-from-preorder-and-inorder-traversal/", "src": "https://leetcode.cn/problems/construct-binary-tree-from-preorder-and-inorder-traversal/", "solution": null, "score": null, "isPremium": false}, {"id": 106, "title": "106. 从中序与后序遍历序列构造二叉树", "slug": "/construct-binary-tree-from-inorder-and-postorder-traversal/", "src": "https://leetcode.cn/problems/construct-binary-tree-from-inorder-and-postorder-traversal/", "solution": null, "score": null, "isPremium": false}, {"id": 889, "title": "889. 根据前序和后序遍历构造二叉树", "slug": "/construct-binary-tree-from-preorder-and-postorder-traversal/", "src": "https://leetcode.cn/problems/construct-binary-tree-from-preorder-and-postorder-traversal/", "solution": null, "score": 1731.5555445321, "isPremium": false}, {"id": 1028, "title": "1028. 从先序遍历还原二叉树", "slug": "/recover-a-tree-from-preorder-traversal/", "src": "https://leetcode.cn/problems/recover-a-tree-from-preorder-traversal/", "solution": null, "score": 1797.4917663632, "isPremium": false}, {"id": 536, "title": "536. 从字符串生成二叉树", "slug": "/construct-binary-tree-from-string/", "src": "https://leetcode.cn/problems/construct-binary-tree-from-string/", "solution": null, "score": null, "isPremium": true}, {"id": 1628, "title": "1628. 设计带解析函数的表达式树", "slug": "/design-an-expression-tree-with-evaluate-function/", "src": "https://leetcode.cn/problems/design-an-expression-tree-with-evaluate-function/", "solution": null, "score": null, "isPremium": true}, {"id": 1597, "title": "1597. 根据中缀表达式构造二叉表达式树", "slug": "/build-binary-expression-tree-from-infix-expression/", "src": "https://leetcode.cn/problems/build-binary-expression-tree-from-infix-expression/", "solution": null, "score": null, "isPremium": true}]}, {"title": "§2.11 插入/删除节点", "summary": "", "isLeaf": true, "children": [], "problems": [{"id": 701, "title": "701. 二叉搜索树中的插入操作", "slug": "/insert-into-a-binary-search-tree/", "src": "https://leetcode.cn/problems/insert-into-a-binary-search-tree/", "solution": null, "score": null, "isPremium": false}, {"id": 450, "title": "450. 删除二叉搜索树中的节点", "slug": "/delete-node-in-a-bst/", "src": "https://leetcode.cn/problems/delete-node-in-a-bst/", "solution": null, "score": null, "isPremium": false}, {"id": 669, "title": "669. 修剪二叉搜索树", "slug": "/trim-a-binary-search-tree/", "src": "https://leetcode.cn/problems/trim-a-binary-search-tree/", "solution": null, "score": null, "isPremium": false}, {"id": 776, "title": "776. 拆分二叉搜索树", "slug": "/split-bst/", "src": "https://leetcode.cn/problems/split-bst/", "solution": null, "score": 1809.5579156134, "isPremium": true}, {"id": 1666, "title": "1666. 改变二叉树的根节点", "slug": "/change-the-root-of-a-binary-tree/", "src": "https://leetcode.cn/problems/change-the-root-of-a-binary-tree/", "solution": null, "score": null, "isPremium": true}]}, {"title": "§2.12 树形 DP", "summary": "更多树形 DP，见 <a href=\"/lc-rating/list/dynamic_programming\">动态规划题单</a> 中的「树形 DP」。<br>", "isLeaf": true, "children": [], "problems": [{"id": 337, "title": "337. 打家劫舍 III", "slug": "/house-robber-iii/", "src": "https://leetcode.cn/problems/house-robber-iii/", "solution": null, "score": null, "isPremium": false}, {"id": 968, "title": "968. 监控二叉树", "slug": "/binary-tree-cameras/", "src": "https://leetcode.cn/problems/binary-tree-cameras/", "solution": null, "score": 2124.1329592058, "isPremium": false}, {"id": "LCP 10", "title": "LCP 10. 二叉树任务调度", "slug": "/er-cha-shu-ren-wu-diao-du/", "src": "https://leetcode.cn/problems/er-cha-shu-ren-wu-diao-du/", "solution": null, "score": null, "isPremium": false}, {"id": "LCP 34", "title": "LCP 34. 二叉树染色", "slug": "/er-cha-shu-ran-se-UGC/", "src": "https://leetcode.cn/problems/er-cha-shu-ran-se-UGC/", "solution": null, "score": null, "isPremium": false}, {"id": "LCP 64", "title": "LCP 64. 二叉树灯饰", "slug": "/U7WvvU/", "src": "https://leetcode.cn/problems/U7WvvU/", "solution": null, "score": null, "isPremium": false}, {"id": 2313, "title": "2313. 二叉树中得到结果所需的最少翻转次数", "slug": "/minimum-flips-in-binary-tree-to-get-result/", "src": "https://leetcode.cn/problems/minimum-flips-in-binary-tree-to-get-result/", "solution": null, "score": null, "isPremium": true}]}, {"title": "§2.13 BFS", "summary": "<a href=\"https://www.bilibili.com/video/BV1hG4y1277i/\">视频讲解【基础算法精讲 13】</a><br>", "isLeaf": true, "children": [], "problems": [{"id": 102, "title": "102. 二叉树的层序遍历", "slug": "/binary-tree-level-order-traversal/", "src": "https://leetcode.cn/problems/binary-tree-level-order-traversal/", "solution": null, "score": null, "isPremium": false}, {"id": 103, "title": "103. 二叉树的锯齿形层序遍历", "slug": "/binary-tree-zigzag-level-order-traversal/", "src": "https://leetcode.cn/problems/binary-tree-zigzag-level-order-traversal/", "solution": null, "score": null, "isPremium": false}, {"id": 107, "title": "107. 二叉树的层序遍历 II", "slug": "/binary-tree-level-order-traversal-ii/", "src": "https://leetcode.cn/problems/binary-tree-level-order-traversal-ii/", "solution": null, "score": null, "isPremium": false}, {"id": 199, "title": "199. 二叉树的右视图", "slug": "/binary-tree-right-side-view/", "src": "https://leetcode.cn/problems/binary-tree-right-side-view/", "solution": null, "score": null, "isPremium": false}, {"id": 513, "title": "513. 找树左下角的值", "slug": "/find-bottom-left-tree-value/", "src": "https://leetcode.cn/problems/find-bottom-left-tree-value/", "solution": null, "score": null, "isPremium": false}, {"id": 515, "title": "515. 在每个树行中找最大值", "slug": "/find-largest-value-in-each-tree-row/", "src": "https://leetcode.cn/problems/find-largest-value-in-each-tree-row/", "solution": null, "score": null, "isPremium": false}, {"id": 637, "title": "637. 二叉树的层平均值", "slug": "/average-of-levels-in-binary-tree/", "src": "https://leetcode.cn/problems/average-of-levels-in-binary-tree/", "solution": null, "score": null, "isPremium": false}, {"id": 1161, "title": "1161. 最大层内元素和", "slug": "/maximum-level-sum-of-a-binary-tree/", "src": "https://leetcode.cn/problems/maximum-level-sum-of-a-binary-tree/", "solution": null, "score": 1249.9086403595, "isPremium": false}, {"id": 993, "title": "993. 二叉树的堂兄弟节点", "slug": "/cousins-in-binary-tree/", "src": "https://leetcode.cn/problems/cousins-in-binary-tree/", "solution": null, "score": 1287.9002757199, "isPremium": false}, {"id": 2583, "title": "2583. 二叉树中的第 K 大层和", "slug": "/kth-largest-sum-in-a-binary-tree/", "src": "https://leetcode.cn/problems/kth-largest-sum-in-a-binary-tree/", "solution": null, "score": 1374.3527967199, "isPremium": false}, {"id": 1302, "title": "1302. 层数最深叶子节点的和", "slug": "/deepest-leaves-sum/", "src": "https://leetcode.cn/problems/deepest-leaves-sum/", "solution": null, "score": 1387.9431104106, "isPremium": false}, {"id": 2415, "title": "2415. 反转二叉树的奇数层", "slug": "/reverse-odd-levels-of-binary-tree/", "src": "https://leetcode.cn/problems/reverse-odd-levels-of-binary-tree/", "solution": null, "score": 1431.0523656241, "isPremium": false}, {"id": 1609, "title": "1609. 奇偶树", "slug": "/even-odd-tree/", "src": "https://leetcode.cn/problems/even-odd-tree/", "solution": null, "score": 1438.223135905, "isPremium": false}, {"id": 623, "title": "623. 在二叉树中增加一行", "slug": "/add-one-row-to-tree/", "src": "https://leetcode.cn/problems/add-one-row-to-tree/", "solution": null, "score": null, "isPremium": false}, {"id": 2471, "title": "2471. 逐层排序二叉树所需的最少操作数目", "slug": "/minimum-number-of-operations-to-sort-a-binary-tree-by-level/", "src": "https://leetcode.cn/problems/minimum-number-of-operations-to-sort-a-binary-tree-by-level/", "solution": null, "score": 1635.1520858279, "isPremium": false}, {"id": 863, "title": "863. 二叉树中所有距离为 K 的结点", "slug": "/all-nodes-distance-k-in-binary-tree/", "src": "https://leetcode.cn/problems/all-nodes-distance-k-in-binary-tree/", "solution": null, "score": 1663.1853149056, "isPremium": false}, {"id": 2641, "title": "2641. 二叉树的堂兄弟节点 II", "slug": "/cousins-in-binary-tree-ii/", "src": "https://leetcode.cn/problems/cousins-in-binary-tree-ii/", "solution": null, "score": 1676.5007365375, "isPremium": false}, {"id": 919, "title": "919. 完全二叉树插入器", "slug": "/complete-binary-tree-inserter/", "src": "https://leetcode.cn/problems/complete-binary-tree-inserter/", "solution": null, "score": 1690.9043557462, "isPremium": false}, {"id": 331, "title": "331. 验证二叉树的前序序列化", "slug": "/verify-preorder-serialization-of-a-binary-tree/", "src": "https://leetcode.cn/problems/verify-preorder-serialization-of-a-binary-tree/", "solution": null, "score": null, "isPremium": false}, {"id": 958, "title": "958. 二叉树的完全性检验", "slug": "/check-completeness-of-a-binary-tree/", "src": "https://leetcode.cn/problems/check-completeness-of-a-binary-tree/", "solution": null, "score": 1702.8035923458, "isPremium": false}, {"id": 662, "title": "662. 二叉树最大宽度", "slug": "/maximum-width-of-binary-tree/", "src": "https://leetcode.cn/problems/maximum-width-of-binary-tree/", "solution": null, "score": null, "isPremium": false}, {"id": 3157, "title": "3157. 找到具有最小和的树的层数", "slug": "/find-the-level-of-tree-with-minimum-sum/", "src": "https://leetcode.cn/problems/find-the-level-of-tree-with-minimum-sum/", "solution": null, "score": null, "isPremium": true}, {"id": 1602, "title": "1602. 找到二叉树中最近的右侧节点", "slug": "/find-nearest-right-node-in-binary-tree/", "src": "https://leetcode.cn/problems/find-nearest-right-node-in-binary-tree/", "solution": null, "score": null, "isPremium": true}, {"id": 742, "title": "742. 二叉树最近的叶节点", "slug": "/closest-leaf-in-a-binary-tree/", "src": "https://leetcode.cn/problems/closest-leaf-in-a-binary-tree/", "solution": null, "score": null, "isPremium": true}, {"id": 1660, "title": "1660. 纠正二叉树", "slug": "/correct-a-binary-tree/", "src": "https://leetcode.cn/problems/correct-a-binary-tree/", "solution": null, "score": null, "isPremium": true}]}, {"title": "§2.14 链表+二叉树", "summary": "", "isLeaf": true, "children": [], "problems": [{"id": 114, "title": "114. 二叉树展开为链表", "slug": "/flatten-binary-tree-to-linked-list/", "src": "https://leetcode.cn/problems/flatten-binary-tree-to-linked-list/", "solution": null, "score": null, "isPremium": false}, {"id": 1367, "title": "1367. 二叉树中的链表", "slug": "/linked-list-in-binary-tree/", "src": "https://leetcode.cn/problems/linked-list-in-binary-tree/", "solution": null, "score": 1649.9728054796, "isPremium": false}, {"id": 109, "title": "109. 有序链表转换二叉搜索树", "slug": "/convert-sorted-list-to-binary-search-tree/", "src": "https://leetcode.cn/problems/convert-sorted-list-to-binary-search-tree/", "solution": null, "score": null, "isPremium": false}, {"id": 116, "title": "116. 填充每个节点的下一个右侧节点指针", "slug": "/populating-next-right-pointers-in-each-node/", "src": "https://leetcode.cn/problems/populating-next-right-pointers-in-each-node/", "solution": null, "score": null, "isPremium": false}, {"id": 117, "title": "117. 填充每个节点的下一个右侧节点指针 II", "slug": "/populating-next-right-pointers-in-each-node-ii/", "src": "https://leetcode.cn/problems/populating-next-right-pointers-in-each-node-ii/", "solution": null, "score": null, "isPremium": false}, {"id": 426, "title": "426. 将二叉搜索树转化为排序的双向链表", "slug": "/convert-binary-search-tree-to-sorted-doubly-linked-list/", "src": "https://leetcode.cn/problems/convert-binary-search-tree-to-sorted-doubly-linked-list/", "solution": null, "score": null, "isPremium": true}]}, {"title": "§2.15 N 叉树", "summary": "", "isLeaf": true, "children": [], "problems": [{"id": 589, "title": "589. N 叉树的前序遍历", "slug": "/n-ary-tree-preorder-traversal/", "src": "https://leetcode.cn/problems/n-ary-tree-preorder-traversal/", "solution": null, "score": null, "isPremium": false}, {"id": 590, "title": "590. N 叉树的后序遍历", "slug": "/n-ary-tree-postorder-traversal/", "src": "https://leetcode.cn/problems/n-ary-tree-postorder-traversal/", "solution": null, "score": null, "isPremium": false}, {"id": 559, "title": "559. N 叉树的最大深度", "slug": "/maximum-depth-of-n-ary-tree/", "src": "https://leetcode.cn/problems/maximum-depth-of-n-ary-tree/", "solution": null, "score": null, "isPremium": false}, {"id": 429, "title": "429. N 叉树的层序遍历", "slug": "/n-ary-tree-level-order-traversal/", "src": "https://leetcode.cn/problems/n-ary-tree-level-order-traversal/", "solution": null, "score": null, "isPremium": false}, {"id": 427, "title": "427. 建立四叉树", "slug": "/construct-quad-tree/", "src": "https://leetcode.cn/problems/construct-quad-tree/", "solution": null, "score": null, "isPremium": false}, {"id": 558, "title": "558. 四叉树交集", "slug": "/logical-or-of-two-binary-grids-represented-as-quad-trees/", "src": "https://leetcode.cn/problems/logical-or-of-two-binary-grids-represented-as-quad-trees/", "solution": null, "score": null, "isPremium": false}, {"id": 428, "title": "428. 序列化和反序列化 N 叉树", "slug": "/serialize-and-deserialize-n-ary-tree/", "src": "https://leetcode.cn/problems/serialize-and-deserialize-n-ary-tree/", "solution": null, "score": null, "isPremium": true}, {"id": 1490, "title": "1490. 克隆 N 叉树", "slug": "/clone-n-ary-tree/", "src": "https://leetcode.cn/problems/clone-n-ary-tree/", "solution": null, "score": null, "isPremium": true}, {"id": 1506, "title": "1506. 找到 N 叉树的根节点", "slug": "/find-root-of-n-ary-tree/", "src": "https://leetcode.cn/problems/find-root-of-n-ary-tree/", "solution": null, "score": null, "isPremium": true}, {"id": 1522, "title": "1522. N 叉树的直径", "slug": "/diameter-of-n-ary-tree/", "src": "https://leetcode.cn/problems/diameter-of-n-ary-tree/", "solution": null, "score": null, "isPremium": true}, {"id": 1516, "title": "1516. 移动 N 叉树的子树", "slug": "/move-sub-tree-of-n-ary-tree/", "src": "https://leetcode.cn/problems/move-sub-tree-of-n-ary-tree/", "solution": null, "score": null, "isPremium": true}]}, {"title": "§2.16 其他", "summary": "", "isLeaf": true, "children": [], "problems": [{"id": 297, "title": "297. 二叉树的序列化与反序列化", "slug": "/serialize-and-deserialize-binary-tree/", "src": "https://leetcode.cn/problems/serialize-and-deserialize-binary-tree/", "solution": null, "score": null, "isPremium": false}, {"id": 449, "title": "449. 序列化和反序列化二叉搜索树", "slug": "/serialize-and-deserialize-bst/", "src": "https://leetcode.cn/problems/serialize-and-deserialize-bst/", "solution": null, "score": null, "isPremium": false}, {"id": 652, "title": "652. 寻找重复的子树", "slug": "/find-duplicate-subtrees/", "src": "https://leetcode.cn/problems/find-duplicate-subtrees/", "solution": null, "score": null, "isPremium": false}, {"id": 173, "title": "173. 二叉搜索树迭代器", "slug": "/binary-search-tree-iterator/", "src": "https://leetcode.cn/problems/binary-search-tree-iterator/", "solution": null, "score": null, "isPremium": false}, {"id": 1261, "title": "1261. 在受污染的二叉树中查找元素", "slug": "/find-elements-in-a-contaminated-binary-tree/", "src": "https://leetcode.cn/problems/find-elements-in-a-contaminated-binary-tree/", "solution": null, "score": 1439.5656079032, "isPremium": false}, {"id": 1104, "title": "1104. 二叉树寻路", "slug": "/path-in-zigzag-labelled-binary-tree/", "src": "https://leetcode.cn/problems/path-in-zigzag-labelled-binary-tree/", "solution": null, "score": 1544.8391626032, "isPremium": false}, {"id": 987, "title": "987. 二叉树的垂序遍历", "slug": "/vertical-order-traversal-of-a-binary-tree/", "src": "https://leetcode.cn/problems/vertical-order-traversal-of-a-binary-tree/", "solution": null, "score": 1675.9610355975, "isPremium": false}, {"id": 655, "title": "655. 输出二叉树", "slug": "/print-binary-tree/", "src": "https://leetcode.cn/problems/print-binary-tree/", "solution": null, "score": null, "isPremium": false}, {"id": 979, "title": "979. 在二叉树中分配硬币", "slug": "/distribute-coins-in-binary-tree/", "src": "https://leetcode.cn/problems/distribute-coins-in-binary-tree/", "solution": null, "score": 1709.1461451873, "isPremium": false}, {"id": 222, "title": "222. 完全二叉树的节点个数", "slug": "/count-complete-tree-nodes/", "src": "https://leetcode.cn/problems/count-complete-tree-nodes/", "solution": null, "score": null, "isPremium": false}, {"id": 2049, "title": "2049. 统计最高分的节点数目", "slug": "/count-nodes-with-the-highest-score/", "src": "https://leetcode.cn/problems/count-nodes-with-the-highest-score/", "solution": null, "score": 1911.7063530593, "isPremium": false}, {"id": 2673, "title": "2673. 使二叉树所有路径值相等的最小代价", "slug": "/make-costs-of-paths-equal-in-a-binary-tree/", "src": "https://leetcode.cn/problems/make-costs-of-paths-equal-in-a-binary-tree/", "solution": null, "score": 1917.1049672432, "isPremium": false}, {"id": 2509, "title": "2509. 查询树中环的长度", "slug": "/cycle-length-queries-in-a-tree/", "src": "https://leetcode.cn/problems/cycle-length-queries-in-a-tree/", "solution": null, "score": 1948.489500779, "isPremium": false}, {"id": 2458, "title": "2458. 移除子树后的二叉树高度", "slug": "/height-of-binary-tree-after-subtree-removal-queries/", "src": "https://leetcode.cn/problems/height-of-binary-tree-after-subtree-removal-queries/", "solution": null, "score": 2298.6242048519, "isPremium": false}, {"id": "LCP 26", "title": "LCP 26. 导航装置", "slug": "/hSRGyL/", "src": "https://leetcode.cn/problems/hSRGyL/", "solution": null, "score": null, "isPremium": false}, {"id": "LCP 52", "title": "LCP 52. 二叉搜索树染色", "slug": "/QO5KpG/", "src": "https://leetcode.cn/problems/QO5KpG/", "solution": null, "score": null, "isPremium": false}, {"id": "LCP 60", "title": "LCP 60. 力扣泡泡龙", "slug": "/WInSav/", "src": "https://leetcode.cn/problems/WInSav/", "solution": null, "score": null, "isPremium": false}, {"id": 314, "title": "314. 二叉树的垂直遍历", "slug": "/binary-tree-vertical-order-traversal/", "src": "https://leetcode.cn/problems/binary-tree-vertical-order-traversal/", "solution": null, "score": null, "isPremium": true}, {"id": 666, "title": "666. 路径总和 IV", "slug": "/path-sum-iv/", "src": "https://leetcode.cn/problems/path-sum-iv/", "solution": null, "score": null, "isPremium": true}, {"id": 1586, "title": "1586. 二叉搜索树迭代器 II", "slug": "/binary-search-tree-iterator-ii/", "src": "https://leetcode.cn/problems/binary-search-tree-iterator-ii/", "solution": null, "score": null, "isPremium": true}, {"id": 2773, "title": "2773. 特殊二叉树的高度", "slug": "/height-of-special-binary-tree/", "src": "https://leetcode.cn/problems/height-of-special-binary-tree/", "solution": null, "score": null, "isPremium": true}, {"id": 1485, "title": "1485. 克隆含随机指针的二叉树", "slug": "/clone-binary-tree-with-random-pointer/", "src": "https://leetcode.cn/problems/clone-binary-tree-with-random-pointer/", "solution": null, "score": null, "isPremium": true}, {"id": 2445, "title": "2445. 值为 1 的节点数", "slug": "/number-of-nodes-with-value-one/", "src": "https://leetcode.cn/problems/number-of-nodes-with-value-one/", "solution": null, "score": null, "isPremium": true}, {"id": 431, "title": "431. 将 N 叉树编码为二叉树", "slug": "/encode-n-ary-tree-to-binary-tree/", "src": "https://leetcode.cn/problems/encode-n-ary-tree-to-binary-tree/", "solution": null, "score": null, "isPremium": true}, {"id": 2005, "title": "2005. 斐波那契树的移除子树游戏", "slug": "/subtree-removal-game-with-fibonacci-tree/", "src": "https://leetcode.cn/problems/subtree-removal-game-with-fibonacci-tree/", "solution": null, "score": null, "isPremium": true}]}], "problems": []}, {"title": "三、一般树", "summary": "", "isLeaf": false, "children": [{"title": "§3.1 遍历", "summary": "", "isLeaf": true, "children": [], "problems": [{"id": 2368, "title": "2368. 受限条件下可到达节点的数目", "slug": "/reachable-nodes-with-restrictions/", "src": "https://leetcode.cn/problems/reachable-nodes-with-restrictions/", "solution": null, "score": 1476.9118898539, "isPremium": false}, {"id": 1466, "title": "1466. 重新规划路线", "slug": "/reorder-routes-to-make-all-paths-lead-to-the-city-zero/", "src": "https://leetcode.cn/problems/reorder-routes-to-make-all-paths-lead-to-the-city-zero/", "solution": null, "score": 1633.6202302555, "isPremium": false}, {"id": 582, "title": "582. 杀掉进程", "slug": "/kill-process/", "src": "https://leetcode.cn/problems/kill-process/", "solution": null, "score": null, "isPremium": true}]}, {"title": "§3.2 自顶向下 DFS", "summary": "", "isLeaf": true, "children": [], "problems": [{"id": 1376, "title": "1376. 通知所有员工所需的时间", "slug": "/time-needed-to-inform-all-employees/", "src": "https://leetcode.cn/problems/time-needed-to-inform-all-employees/", "solution": null, "score": 1561.0553908973, "isPremium": false}, {"id": 1443, "title": "1443. 收集树上所有苹果的最少时间", "slug": "/minimum-time-to-collect-all-apples-in-a-tree/", "src": "https://leetcode.cn/problems/minimum-time-to-collect-all-apples-in-a-tree/", "solution": null, "score": 1682.8882177724, "isPremium": false}, {"id": 1377, "title": "1377. T 秒后青蛙的位置", "slug": "/frog-position-after-t-seconds/", "src": "https://leetcode.cn/problems/frog-position-after-t-seconds/", "solution": null, "score": 1823.8779711373, "isPremium": false}, {"id": 3067, "title": "3067. 在带权树网络中统计可连接服务器对数目", "slug": "/count-pairs-of-connectable-servers-in-a-weighted-tree-network/", "src": "https://leetcode.cn/problems/count-pairs-of-connectable-servers-in-a-weighted-tree-network/", "solution": null, "score": 1908.9411092109, "isPremium": false}, {"id": 3372, "title": "3372. 连接两棵树后最大目标节点数目 I", "slug": "/maximize-the-number-of-target-nodes-after-connecting-trees-i/", "src": "https://leetcode.cn/problems/maximize-the-number-of-target-nodes-after-connecting-trees-i/", "solution": null, "score": 1926.7598451706, "isPremium": false}, {"id": 2467, "title": "2467. 树上最大得分和路径", "slug": "/most-profitable-path-in-a-tree/", "src": "https://leetcode.cn/problems/most-profitable-path-in-a-tree/", "solution": null, "score": 2053.354609292, "isPremium": false}, {"id": 3373, "title": "3373. 连接两棵树后最大目标节点数目 II", "slug": "/maximize-the-number-of-target-nodes-after-connecting-trees-ii/", "src": "https://leetcode.cn/problems/maximize-the-number-of-target-nodes-after-connecting-trees-ii/", "solution": null, "score": 2161.6248796745, "isPremium": false}, {"id": 1766, "title": "1766. 互质树", "slug": "/tree-of-coprimes/", "src": "https://leetcode.cn/problems/tree-of-coprimes/", "solution": null, "score": 2231.8099102949, "isPremium": false}, {"id": 3425, "title": "3425. 最长特殊路径", "slug": "/longest-special-path/", "src": "https://leetcode.cn/problems/longest-special-path/", "solution": null, "score": 2434.6549114916, "isPremium": false}, {"id": 2791, "title": "2791. 树中可以形成回文的路径数", "slug": "/count-paths-that-can-form-a-palindrome-in-a-tree/", "src": "https://leetcode.cn/problems/count-paths-that-can-form-a-palindrome-in-a-tree/", "solution": null, "score": 2677.1682592316, "isPremium": false}]}, {"title": "§3.3 自底向上 DFS", "summary": "", "isLeaf": true, "children": [], "problems": [{"id": 3249, "title": "3249. 统计好节点的数目", "slug": "/count-the-number-of-good-nodes/", "src": "https://leetcode.cn/problems/count-the-number-of-good-nodes/", "solution": null, "score": 1565.8040286471, "isPremium": false}, {"id": 1519, "title": "1519. 子树中标签相同的节点数", "slug": "/number-of-nodes-in-the-sub-tree-with-the-same-label/", "src": "https://leetcode.cn/problems/number-of-nodes-in-the-sub-tree-with-the-same-label/", "solution": null, "score": 1808.787108831, "isPremium": false}, {"id": 2872, "title": "2872. 可以被 K 整除连通块的最大数目", "slug": "/maximum-number-of-k-divisible-components/", "src": "https://leetcode.cn/problems/maximum-number-of-k-divisible-components/", "solution": null, "score": 1967.5589835406, "isPremium": false}, {"id": 2477, "title": "2477. 到达首都的最少油耗", "slug": "/minimum-fuel-cost-to-report-to-the-capital/", "src": "https://leetcode.cn/problems/minimum-fuel-cost-to-report-to-the-capital/", "solution": null, "score": 2011.9703133514, "isPremium": false}, {"id": 2973, "title": "2973. 树中每个节点放置的金币数目", "slug": "/find-number-of-coins-to-place-in-tree-nodes/", "src": "https://leetcode.cn/problems/find-number-of-coins-to-place-in-tree-nodes/", "solution": null, "score": 2276.9256951751, "isPremium": false}, {"id": 2440, "title": "2440. 创建价值相同的连通块", "slug": "/create-components-with-same-value/", "src": "https://leetcode.cn/problems/create-components-with-same-value/", "solution": null, "score": 2460.3152437576, "isPremium": false}, {"id": 1273, "title": "1273. 删除树节点", "slug": "/delete-tree-nodes/", "src": "https://leetcode.cn/problems/delete-tree-nodes/", "solution": null, "score": 1732.7813534239, "isPremium": true}, {"id": 3004, "title": "3004. 相同颜色的最大子树", "slug": "/maximum-subtree-of-the-same-color/", "src": "https://leetcode.cn/problems/maximum-subtree-of-the-same-color/", "solution": null, "score": null, "isPremium": true}]}, {"title": "§3.4 有递有归", "summary": "", "isLeaf": true, "children": [], "problems": [{"id": 3331, "title": "3331. 修改后子树的大小", "slug": "/find-subtree-sizes-after-changes/", "src": "https://leetcode.cn/problems/find-subtree-sizes-after-changes/", "solution": null, "score": 2045.9921455749, "isPremium": false}]}, {"title": "§3.5 直径", "summary": "<a href=\"https://www.bilibili.com/video/BV17o4y187h1/\">视频讲解【基础算法精讲 23】</a><br>", "isLeaf": true, "children": [], "problems": [{"id": 2246, "title": "2246. 相邻字符不同的最长路径", "slug": "/longest-path-with-different-adjacent-characters/", "src": "https://leetcode.cn/problems/longest-path-with-different-adjacent-characters/", "solution": null, "score": 2126.3922279277, "isPremium": false}, {"id": 3203, "title": "3203. 合并两棵树后的最小直径", "slug": "/find-minimum-diameter-after-merging-two-trees/", "src": "https://leetcode.cn/problems/find-minimum-diameter-after-merging-two-trees/", "solution": null, "score": 2266.0997671519, "isPremium": false}, {"id": 1617, "title": "1617. 统计子树中城市之间最大距离", "slug": "/count-subtrees-with-max-distance-between-cities/", "src": "https://leetcode.cn/problems/count-subtrees-with-max-distance-between-cities/", "solution": null, "score": 2308.6545905335, "isPremium": false}, {"id": 2538, "title": "2538. 最大价值和与最小价值和的差值", "slug": "/difference-between-maximum-and-minimum-price-sum/", "src": "https://leetcode.cn/problems/difference-between-maximum-and-minimum-price-sum/", "solution": null, "score": 2397.9722495587, "isPremium": false}, {"id": 1245, "title": "1245. 树的直径", "slug": "/tree-diameter/", "src": "https://leetcode.cn/problems/tree-diameter/", "solution": null, "score": 1792.076794537, "isPremium": true}, {"id": 3313, "title": "3313. 查找树中最后标记的节点", "slug": "/find-the-last-marked-nodes-in-tree/", "src": "https://leetcode.cn/problems/find-the-last-marked-nodes-in-tree/", "solution": null, "score": null, "isPremium": true}]}, {"title": "§3.6 DFS 时间戳", "summary": "", "isLeaf": true, "children": [], "problems": [{"id": 2322, "title": "2322. 从树中删除边的最小分数", "slug": "/minimum-score-after-removals-on-a-tree/", "src": "https://leetcode.cn/problems/minimum-score-after-removals-on-a-tree/", "solution": null, "score": 2391.657270733, "isPremium": false}, {"id": 3327, "title": "3327. 判断 DFS 字符串是否是回文串", "slug": "/check-if-dfs-strings-are-palindromes/", "src": "https://leetcode.cn/problems/check-if-dfs-strings-are-palindromes/", "solution": null, "score": 2454.1900261902, "isPremium": false}]}, {"title": "§3.7 拓扑排序", "summary": "", "isLeaf": true, "children": [], "problems": [{"id": 310, "title": "310. 最小高度树", "slug": "/minimum-height-trees/", "src": "https://leetcode.cn/problems/minimum-height-trees/", "solution": null, "score": null, "isPremium": false}, {"id": 2603, "title": "2603. 收集树中金币", "slug": "/collect-coins-in-a-tree/", "src": "https://leetcode.cn/problems/collect-coins-in-a-tree/", "solution": null, "score": 2711.8717381409, "isPremium": false}]}, {"title": "§3.8 最近公共祖先（LCA）", "summary": "<a href=\"https://leetcode.cn/problems/kth-ancestor-of-a-tree-node/solution/mo-ban-jiang-jie-shu-shang-bei-zeng-suan-v3rw/\">讲解</a><br>", "isLeaf": true, "children": [], "problems": [{"id": 1483, "title": "1483. 树节点的第 K 个祖先", "slug": "/kth-ancestor-of-a-tree-node/", "src": "https://leetcode.cn/problems/kth-ancestor-of-a-tree-node/", "solution": null, "score": 2115.0911494487, "isPremium": false}, {"id": 2846, "title": "2846. 边权重均等查询", "slug": "/minimum-edge-weight-equilibrium-queries-in-a-tree/", "src": "https://leetcode.cn/problems/minimum-edge-weight-equilibrium-queries-in-a-tree/", "solution": null, "score": 2507.9960044659, "isPremium": false}, {"id": 2277, "title": "2277. 树中最接近路径的节点", "slug": "/closest-node-to-path-in-tree/", "src": "https://leetcode.cn/problems/closest-node-to-path-in-tree/", "solution": null, "score": null, "isPremium": true}]}, {"title": "§3.9 其他", "summary": "另见 <a href=\"/lc-rating/list/dynamic_programming\">动态规划题单</a> 中的「树形 DP」。<br>", "isLeaf": true, "children": [], "problems": [{"id": 2003, "title": "2003. 每棵子树内缺失的最小基因值", "slug": "/smallest-missing-genetic-value-in-each-subtree/", "src": "https://leetcode.cn/problems/smallest-missing-genetic-value-in-each-subtree/", "solution": null, "score": 2415.0089731911, "isPremium": false}, {"id": 2867, "title": "2867. 统计树中的合法路径数目", "slug": "/count-valid-paths-in-a-tree/", "src": "https://leetcode.cn/problems/count-valid-paths-in-a-tree/", "solution": null, "score": 2428.3242593838, "isPremium": false}, {"id": 2421, "title": "2421. 好路径的数目", "slug": "/number-of-good-paths/", "src": "https://leetcode.cn/problems/number-of-good-paths/", "solution": null, "score": 2444.6660756903, "isPremium": false}, {"id": 1719, "title": "1719. 重构一棵树的方案数", "slug": "/number-of-ways-to-reconstruct-a-tree/", "src": "https://leetcode.cn/problems/number-of-ways-to-reconstruct-a-tree/", "solution": null, "score": 3018.4940165727, "isPremium": false}, {"id": 2479, "title": "2479. 两个不重叠子树的最大异或值", "slug": "/maximum-xor-of-two-non-overlapping-subtrees/", "src": "https://leetcode.cn/problems/maximum-xor-of-two-non-overlapping-subtrees/", "solution": null, "score": null, "isPremium": true}]}], "problems": []}, {"title": "四、回溯", "summary": "本质是搜索树上的 DFS。<br>推荐先完成 **§2.7** 节。先理解二叉树上的回溯，再来学习一般情况下的回溯。<br>", "isLeaf": false, "children": [{"title": "§4.1 入门回溯", "summary": "<a href=\"https://www.bilibili.com/video/BV1mG4y1A7Gu/\">视频讲解【基础算法精讲 14】</a><br>", "isLeaf": true, "children": [], "problems": [{"id": 17, "title": "17. 电话号码的字母组合", "slug": "/letter-combinations-of-a-phone-number/", "src": "https://leetcode.cn/problems/letter-combinations-of-a-phone-number/", "solution": null, "score": null, "isPremium": false}]}, {"title": "§4.2 子集型回溯", "summary": "<a href=\"https://www.bilibili.com/video/BV1mG4y1A7Gu/\">视频讲解【基础算法精讲 14】</a><br>有「**选或不选**」和「**枚举选哪个**」两种写法。<br>也可以用**二进制枚举**做。<br>**思维扩展**：<br>", "isLeaf": true, "children": [], "problems": [{"id": 78, "title": "78. 子集", "slug": "/subsets/", "src": "https://leetcode.cn/problems/subsets/", "solution": null, "score": null, "isPremium": false}, {"id": 784, "title": "784. 字母大小写全排列", "slug": "/letter-case-permutation/", "src": "https://leetcode.cn/problems/letter-case-permutation/", "solution": null, "score": 1341.5076441361, "isPremium": false}, {"id": 1286, "title": "1286. 字母组合迭代器", "slug": "/iterator-for-combination/", "src": "https://leetcode.cn/problems/iterator-for-combination/", "solution": null, "score": 1591.4725328821, "isPremium": false}, {"id": 494, "title": "494. 目标和", "slug": "/target-sum/", "src": "https://leetcode.cn/problems/target-sum/", "solution": null, "score": null, "isPremium": false}, {"id": "LCP 51", "title": "LCP 51. 烹饪料理", "slug": "/UEcfPD/", "src": "https://leetcode.cn/problems/UEcfPD/", "solution": null, "score": null, "isPremium": false}, {"id": 2397, "title": "2397. 被列覆盖的最多行数", "slug": "/maximum-rows-covered-by-columns/", "src": "https://leetcode.cn/problems/maximum-rows-covered-by-columns/", "solution": null, "score": 1718.8256321624, "isPremium": false}, {"id": 1239, "title": "1239. 串联字符串的最大长度", "slug": "/maximum-length-of-a-concatenated-string-with-unique-characters/", "src": "https://leetcode.cn/problems/maximum-length-of-a-concatenated-string-with-unique-characters/", "solution": null, "score": 1719.945199874, "isPremium": false}, {"id": 2212, "title": "2212. 射箭比赛中的最大得分", "slug": "/maximum-points-in-an-archery-competition/", "src": "https://leetcode.cn/problems/maximum-points-in-an-archery-competition/", "solution": null, "score": 1868.9864493463, "isPremium": false}, {"id": 1255, "title": "1255. 得分最高的单词集合", "slug": "/maximum-score-words-formed-by-letters/", "src": "https://leetcode.cn/problems/maximum-score-words-formed-by-letters/", "solution": null, "score": 1881.6810367589, "isPremium": false}, {"id": 2151, "title": "2151. 基于陈述统计最多好人数", "slug": "/maximum-good-people-based-on-statements/", "src": "https://leetcode.cn/problems/maximum-good-people-based-on-statements/", "solution": null, "score": 1979.9454101467, "isPremium": false}, {"id": 2597, "title": "2597. 美丽子集的数目", "slug": "/the-number-of-beautiful-subsets/", "src": "https://leetcode.cn/problems/the-number-of-beautiful-subsets/", "solution": null, "score": 2023.4303440211, "isPremium": false}, {"id": 2959, "title": "2959. 关闭分部的可行集合数目", "slug": "/number-of-possible-sets-of-closing-branches/", "src": "https://leetcode.cn/problems/number-of-possible-sets-of-closing-branches/", "solution": null, "score": 2077.4738459704, "isPremium": false}, {"id": 1601, "title": "1601. 最多可达成的换楼请求数目", "slug": "/maximum-number-of-achievable-transfer-requests/", "src": "https://leetcode.cn/problems/maximum-number-of-achievable-transfer-requests/", "solution": null, "score": 2118.7923652824, "isPremium": false}, {"id": 1617, "title": "1617. 统计子树中城市之间最大距离", "slug": "/count-subtrees-with-max-distance-between-cities/", "src": "https://leetcode.cn/problems/count-subtrees-with-max-distance-between-cities/", "solution": null, "score": 2308.6545905335, "isPremium": false}, {"id": 320, "title": "320. 列举单词的全部缩写", "slug": "/generalized-abbreviation/", "src": "https://leetcode.cn/problems/generalized-abbreviation/", "solution": null, "score": null, "isPremium": true}, {"id": 254, "title": "254. 因子的组合", "slug": "/factor-combinations/", "src": "https://leetcode.cn/problems/factor-combinations/", "solution": null, "score": null, "isPremium": true}, {"id": 39, "title": "39. 组合总和", "slug": "/combination-sum/", "src": "https://leetcode.cn/problems/combination-sum/", "solution": null, "score": null, "isPremium": false}]}, {"title": "§4.3 划分型回溯", "summary": "<a href=\"https://www.bilibili.com/video/BV1mG4y1A7Gu/\">视频讲解【基础算法精讲 14】</a><br>把分割线（逗号）看成是可以「选或不选」的东西，本质是子集型回溯。<br>", "isLeaf": true, "children": [], "problems": [{"id": 131, "title": "131. 分割回文串", "slug": "/palindrome-partitioning/", "src": "https://leetcode.cn/problems/palindrome-partitioning/", "solution": null, "score": null, "isPremium": false}, {"id": 2698, "title": "2698. 求一个整数的惩罚数", "slug": "/find-the-punishment-number-of-an-integer/", "src": "https://leetcode.cn/problems/find-the-punishment-number-of-an-integer/", "solution": null, "score": 1678.6245760413, "isPremium": false}, {"id": 1593, "title": "1593. 拆分字符串使唯一子字符串的数目最大", "slug": "/split-a-string-into-the-max-number-of-unique-substrings/", "src": "https://leetcode.cn/problems/split-a-string-into-the-max-number-of-unique-substrings/", "solution": null, "score": 1739.5831401172, "isPremium": false}, {"id": 1849, "title": "1849. 将字符串拆分为递减的连续值", "slug": "/splitting-a-string-into-descending-consecutive-values/", "src": "https://leetcode.cn/problems/splitting-a-string-into-descending-consecutive-values/", "solution": null, "score": 1746.8757919578, "isPremium": false}, {"id": 306, "title": "306. 累加数", "slug": "/additive-number/", "src": "https://leetcode.cn/problems/additive-number/", "solution": null, "score": null, "isPremium": false}, {"id": 842, "title": "842. 将数组拆分成斐波那契序列", "slug": "/split-array-into-fibonacci-sequence/", "src": "https://leetcode.cn/problems/split-array-into-fibonacci-sequence/", "solution": null, "score": 1779.9495819318, "isPremium": false}, {"id": 93, "title": "93. 复原 IP 地址", "slug": "/restore-ip-addresses/", "src": "https://leetcode.cn/problems/restore-ip-addresses/", "solution": null, "score": null, "isPremium": false}, {"id": 816, "title": "816. 模糊坐标", "slug": "/ambiguous-coordinates/", "src": "https://leetcode.cn/problems/ambiguous-coordinates/", "solution": null, "score": 1707.8992927609, "isPremium": false}, {"id": 140, "title": "140. 单词拆分 II", "slug": "/word-break-ii/", "src": "https://leetcode.cn/problems/word-break-ii/", "solution": null, "score": null, "isPremium": false}, {"id": 291, "title": "291. 单词规律 II", "slug": "/word-pattern-ii/", "src": "https://leetcode.cn/problems/word-pattern-ii/", "solution": null, "score": null, "isPremium": true}]}, {"title": "§4.4 组合型回溯", "summary": "<a href=\"https://www.bilibili.com/video/BV1xG4y1F7nC/\">视频讲解【基础算法精讲 15】</a><br>有个数上的约束。也算作子集型回溯。<br>", "isLeaf": true, "children": [], "problems": [{"id": 77, "title": "77. 组合", "slug": "/combinations/", "src": "https://leetcode.cn/problems/combinations/", "solution": null, "score": null, "isPremium": false}, {"id": 216, "title": "216. 组合总和 III", "slug": "/combination-sum-iii/", "src": "https://leetcode.cn/problems/combination-sum-iii/", "solution": null, "score": null, "isPremium": false}, {"id": 22, "title": "22. 括号生成", "slug": "/generate-parentheses/", "src": "https://leetcode.cn/problems/generate-parentheses/", "solution": null, "score": null, "isPremium": false}, {"id": 301, "title": "301. 删除无效的括号", "slug": "/remove-invalid-parentheses/", "src": "https://leetcode.cn/problems/remove-invalid-parentheses/", "solution": null, "score": null, "isPremium": false}]}, {"title": "§4.5 排列型回溯", "summary": "<a href=\"https://www.bilibili.com/video/BV1mY411D7f6/\">视频讲解【基础算法精讲 16】</a><br>部分题目也可以用状压 DP 做。<br>", "isLeaf": true, "children": [], "problems": [{"id": 46, "title": "46. 全排列", "slug": "/permutations/", "src": "https://leetcode.cn/problems/permutations/", "solution": null, "score": null, "isPremium": false}, {"id": 3376, "title": "3376. 破解锁的最少时间 I", "slug": "/minimum-time-to-break-locks-i/", "src": "https://leetcode.cn/problems/minimum-time-to-break-locks-i/", "solution": null, "score": 1793.2112436729, "isPremium": false}, {"id": 51, "title": "51. N 皇后", "slug": "/n-queens/", "src": "https://leetcode.cn/problems/n-queens/", "solution": null, "score": null, "isPremium": false}, {"id": 52, "title": "52. N 皇后 II", "slug": "/n-queens-ii/", "src": "https://leetcode.cn/problems/n-queens-ii/", "solution": null, "score": null, "isPremium": false}, {"id": 2850, "title": "2850. 将石头分散到网格图的最少移动次数", "slug": "/minimum-moves-to-spread-stones-over-grid/", "src": "https://leetcode.cn/problems/minimum-moves-to-spread-stones-over-grid/", "solution": null, "score": 2001.4515854273, "isPremium": false}, {"id": 1718, "title": "1718. 构建字典序最大的可行序列", "slug": "/construct-the-lexicographically-largest-valid-sequence/", "src": "https://leetcode.cn/problems/construct-the-lexicographically-largest-valid-sequence/", "solution": null, "score": 2080.0425875741, "isPremium": false}, {"id": 1307, "title": "1307. 口算难题", "slug": "/verbal-arithmetic-puzzle/", "src": "https://leetcode.cn/problems/verbal-arithmetic-puzzle/", "solution": null, "score": 2250.0454791316, "isPremium": false}, {"id": 2014, "title": "2014. 重复 K 次的最长子序列", "slug": "/longest-subsequence-repeated-k-times/", "src": "https://leetcode.cn/problems/longest-subsequence-repeated-k-times/", "solution": null, "score": 2558.3297484354, "isPremium": false}, {"id": 267, "title": "267. 回文排列 II", "slug": "/palindrome-permutation-ii/", "src": "https://leetcode.cn/problems/palindrome-permutation-ii/", "solution": null, "score": null, "isPremium": true}]}, {"title": "§4.6 爆搜+剪枝", "summary": "", "isLeaf": true, "children": [], "problems": [{"id": 3211, "title": "3211. 生成不含相邻零的二进制字符串", "slug": "/generate-binary-strings-without-adjacent-zeros/", "src": "https://leetcode.cn/problems/generate-binary-strings-without-adjacent-zeros/", "solution": null, "score": 1352.5455214631, "isPremium": false}, {"id": 967, "title": "967. 连续差相同的数字", "slug": "/numbers-with-same-consecutive-differences/", "src": "https://leetcode.cn/problems/numbers-with-same-consecutive-differences/", "solution": null, "score": 1432.9593207076, "isPremium": false}, {"id": 1415, "title": "1415. 长度为 n 的开心字符串中字典序第 k 小的字符串", "slug": "/the-k-th-lexicographical-string-of-all-happy-strings-of-length-n/", "src": "https://leetcode.cn/problems/the-k-th-lexicographical-string-of-all-happy-strings-of-length-n/", "solution": null, "score": 1575.6324598387, "isPremium": false}, {"id": 1219, "title": "1219. 黄金矿工", "slug": "/path-with-maximum-gold/", "src": "https://leetcode.cn/problems/path-with-maximum-gold/", "solution": null, "score": 1663.2612318917, "isPremium": false}, {"id": 79, "title": "79. 单词搜索", "slug": "/word-search/", "src": "https://leetcode.cn/problems/word-search/", "solution": null, "score": null, "isPremium": false}, {"id": 980, "title": "980. 不同路径 III", "slug": "/unique-paths-iii/", "src": "https://leetcode.cn/problems/unique-paths-iii/", "solution": null, "score": 1830.3165569278, "isPremium": false}, {"id": 1255, "title": "1255. 得分最高的单词集合", "slug": "/maximum-score-words-formed-by-letters/", "src": "https://leetcode.cn/problems/maximum-score-words-formed-by-letters/", "solution": null, "score": 1881.6810367589, "isPremium": false}, {"id": 473, "title": "473. 火柴拼正方形", "slug": "/matchsticks-to-square/", "src": "https://leetcode.cn/problems/matchsticks-to-square/", "solution": null, "score": null, "isPremium": false}, {"id": 212, "title": "212. 单词搜索 II", "slug": "/word-search-ii/", "src": "https://leetcode.cn/problems/word-search-ii/", "solution": null, "score": null, "isPremium": false}, {"id": 37, "title": "37. 解数独", "slug": "/sudoku-solver/", "src": "https://leetcode.cn/problems/sudoku-solver/", "solution": null, "score": null, "isPremium": false}, {"id": 638, "title": "638. 大礼包", "slug": "/shopping-offers/", "src": "https://leetcode.cn/problems/shopping-offers/", "solution": null, "score": null, "isPremium": false}, {"id": 1240, "title": "1240. 铺瓷砖", "slug": "/tiling-a-rectangle-with-the-fewest-squares/", "src": "https://leetcode.cn/problems/tiling-a-rectangle-with-the-fewest-squares/", "solution": null, "score": 2241.5199974312, "isPremium": false}, {"id": 679, "title": "679. 24 点游戏", "slug": "/24-game/", "src": "https://leetcode.cn/problems/24-game/", "solution": null, "score": null, "isPremium": false}, {"id": 282, "title": "282. 给表达式添加运算符", "slug": "/expression-add-operators/", "src": "https://leetcode.cn/problems/expression-add-operators/", "solution": null, "score": null, "isPremium": false}, {"id": 126, "title": "126. 单词接龙 II", "slug": "/word-ladder-ii/", "src": "https://leetcode.cn/problems/word-ladder-ii/", "solution": null, "score": null, "isPremium": false}, {"id": 691, "title": "691. 贴纸拼词", "slug": "/stickers-to-spell-word/", "src": "https://leetcode.cn/problems/stickers-to-spell-word/", "solution": null, "score": null, "isPremium": false}, {"id": 2056, "title": "2056. 棋盘上有效移动组合的数目", "slug": "/number-of-valid-move-combinations-on-chessboard/", "src": "https://leetcode.cn/problems/number-of-valid-move-combinations-on-chessboard/", "solution": null, "score": 2610.9906730644, "isPremium": false}, {"id": 2386, "title": "2386. 找出数组的第 K 大和", "slug": "/find-the-k-sum-of-an-array/", "src": "https://leetcode.cn/problems/find-the-k-sum-of-an-array/", "solution": null, "score": 2647.8258771458, "isPremium": false}, {"id": 488, "title": "488. 祖玛游戏", "slug": "/zuma-game/", "src": "https://leetcode.cn/problems/zuma-game/", "solution": null, "score": null, "isPremium": false}, {"id": "LCP 58", "title": "LCP 58. 积木拼接", "slug": "/De4qBB/", "src": "https://leetcode.cn/problems/De4qBB/", "solution": null, "score": null, "isPremium": false}, {"id": "面试题 17.25", "title": "面试题 17.25. 单词矩阵", "slug": "/word-rectangle-lcci/", "src": "https://leetcode.cn/problems/word-rectangle-lcci/", "solution": null, "score": null, "isPremium": false}, {"id": 2664, "title": "2664. 巡逻的骑士", "slug": "/the-knights-tour/", "src": "https://leetcode.cn/problems/the-knights-tour/", "solution": null, "score": null, "isPremium": true}, {"id": 247, "title": "247. 中心对称数 II", "slug": "/strobogrammatic-number-ii/", "src": "https://leetcode.cn/problems/strobogrammatic-number-ii/", "solution": null, "score": null, "isPremium": true}, {"id": 248, "title": "248. 中心对称数 III", "slug": "/strobogrammatic-number-iii/", "src": "https://leetcode.cn/problems/strobogrammatic-number-iii/", "solution": null, "score": null, "isPremium": true}, {"id": 411, "title": "411. 最短独占单词缩写", "slug": "/minimum-unique-word-abbreviation/", "src": "https://leetcode.cn/problems/minimum-unique-word-abbreviation/", "solution": null, "score": null, "isPremium": true}, {"id": 1088, "title": "1088. 易混淆数 II", "slug": "/confusing-number-ii/", "src": "https://leetcode.cn/problems/confusing-number-ii/", "solution": null, "score": 2076.8975497986, "isPremium": true}]}, {"title": "§4.7 有重复元素的回溯", "summary": "", "isLeaf": true, "children": [], "problems": [{"id": 90, "title": "90. 子集 II", "slug": "/subsets-ii/", "src": "https://leetcode.cn/problems/subsets-ii/", "solution": null, "score": null, "isPremium": false}, {"id": 40, "title": "40. 组合总和 II", "slug": "/combination-sum-ii/", "src": "https://leetcode.cn/problems/combination-sum-ii/", "solution": null, "score": null, "isPremium": false}, {"id": 491, "title": "491. 非递减子序列", "slug": "/non-decreasing-subsequences/", "src": "https://leetcode.cn/problems/non-decreasing-subsequences/", "solution": null, "score": null, "isPremium": false}, {"id": 47, "title": "47. 全排列 II", "slug": "/permutations-ii/", "src": "https://leetcode.cn/problems/permutations-ii/", "solution": null, "score": null, "isPremium": false}, {"id": 1079, "title": "1079. 活字印刷", "slug": "/letter-tile-possibilities/", "src": "https://leetcode.cn/problems/letter-tile-possibilities/", "solution": null, "score": 1740.5014205942, "isPremium": false}]}], "problems": []}], "problems": []}]}