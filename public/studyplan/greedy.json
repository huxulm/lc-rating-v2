{"title": "分享丨【题单】贪心算法（基本贪心策略/反悔/区间/字典序/数学/思维/构造）", "src": "https://leetcode.cn/circle/discuss/g6KTKL", "last_update": "2025-03-05T03:04:24.174296+00:00", "children": [{"title": "介绍", "summary": "<img src=\"https://pic.leetcode.cn/1719584528-kEceMX-greedy-vs-dp-c.jpg\" alt=\"贪心算法题贪心题单贪心题目力扣贪心题单leetcode贪心 greedy 灵茶山艾府 灵神\" style=\"width: 100%;\"><br>> 有时候，很难一眼看出一道题是贪心还是 DP。<br>", "isLeaf": false, "children": [{"title": "前言", "summary": "为方便大家练习，我把比较套路的贪心题目放在前面，更灵活的思维题和构造题放在后面。每个小节的题目均按照从易到难的顺序排列。<br>**如果做题时没有思路，推荐看看本文第五章的「思考清单」。**<br>", "isLeaf": false, "children": [], "problems": []}, {"title": "一、贪心策略", "summary": "有两种**基本贪心策略**：<br>1. 从**最小/最大**开始贪心，优先考虑最小/最大的数，从小到大/从大到小贪心。在此基础上，衍生出了**反悔贪心**。<br>2. 从**最左/最右**开始贪心，思考第一个数/最后一个数的贪心策略，把 $n$ 个数的原问题转换成 $n-1$ 个数（或更少）的子问题。<br>", "isLeaf": false, "children": [{"title": "§1.1 从最小/最大开始贪心", "summary": "优先考虑最小/最大的数，从小到大/从大到小贪心。<br>如果答案与数组元素顺序无关，一般需要**排序**。排序后，可以遍历计算。<br>**思维扩展**：<br>", "isLeaf": true, "children": [], "problems": [{"id": 3074, "title": "3074. 重新分装苹果", "slug": "/apple-redistribution-into-boxes/", "src": "https://leetcode.cn/problems/apple-redistribution-into-boxes/", "solution": null, "score": 1197.5462481787, "isPremium": false}, {"id": 2279, "title": "2279. 装满石头的背包的最大数量", "slug": "/maximum-bags-with-full-capacity-of-rocks/", "src": "https://leetcode.cn/problems/maximum-bags-with-full-capacity-of-rocks/", "solution": null, "score": 1249.2572200035, "isPremium": false}, {"id": 1833, "title": "1833. 雪糕的最大数量", "slug": "/maximum-ice-cream-bars/", "src": "https://leetcode.cn/problems/maximum-ice-cream-bars/", "solution": null, "score": 1252.7479413966, "isPremium": false}, {"id": 1005, "title": "1005. K 次取反后最大化的数组和", "slug": "/maximize-sum-of-array-after-k-negations/", "src": "https://leetcode.cn/problems/maximize-sum-of-array-after-k-negations/", "solution": null, "score": 1274.6742564805, "isPremium": false}, {"id": 1481, "title": "1481. 不同整数的最少数目", "slug": "/least-number-of-unique-integers-after-k-removals/", "src": "https://leetcode.cn/problems/least-number-of-unique-integers-after-k-removals/", "solution": null, "score": 1284.3625733813, "isPremium": false}, {"id": 1403, "title": "1403. 非递增顺序的最小子序列", "slug": "/minimum-subsequence-in-non-increasing-order/", "src": "https://leetcode.cn/problems/minimum-subsequence-in-non-increasing-order/", "solution": null, "score": 1288.1970048184, "isPremium": false}, {"id": 3010, "title": "3010. 将数组分成最小总代价的子数组 I", "slug": "/divide-an-array-into-subarrays-with-minimum-cost-i/", "src": "https://leetcode.cn/problems/divide-an-array-into-subarrays-with-minimum-cost-i/", "solution": null, "score": 1291.744935731, "isPremium": false}, {"id": 1338, "title": "1338. 数组大小减半", "slug": "/reduce-array-size-to-the-half/", "src": "https://leetcode.cn/problems/reduce-array-size-to-the-half/", "solution": null, "score": 1303.022570497, "isPremium": false}, {"id": 1710, "title": "1710. 卡车上的最大单元数", "slug": "/maximum-units-on-a-truck/", "src": "https://leetcode.cn/problems/maximum-units-on-a-truck/", "solution": null, "score": 1309.8100518373, "isPremium": false}, {"id": 3075, "title": "3075. 幸福值最大化的选择方案", "slug": "/maximize-happiness-of-selected-children/", "src": "https://leetcode.cn/problems/maximize-happiness-of-selected-children/", "solution": null, "score": 1325.805380292, "isPremium": false}, {"id": 2554, "title": "2554. 从一个范围内选择最多整数 I", "slug": "/maximum-number-of-integers-to-choose-from-a-range-i/", "src": "https://leetcode.cn/problems/maximum-number-of-integers-to-choose-from-a-range-i/", "solution": null, "score": 1333.2008827592, "isPremium": false}, {"id": 2126, "title": "2126. 摧毁小行星", "slug": "/destroying-asteroids/", "src": "https://leetcode.cn/problems/destroying-asteroids/", "solution": null, "score": 1334.5708444649, "isPremium": false}, {"id": 2587, "title": "2587. 重排数组以得到最大前缀分数", "slug": "/rearrange-array-to-maximize-prefix-score/", "src": "https://leetcode.cn/problems/rearrange-array-to-maximize-prefix-score/", "solution": null, "score": 1336.7830451625, "isPremium": false}, {"id": 976, "title": "976. 三角形的最大周长", "slug": "/largest-perimeter-triangle/", "src": "https://leetcode.cn/problems/largest-perimeter-triangle/", "solution": null, "score": 1340.5559417151, "isPremium": false}, {"id": 1561, "title": "1561. 你可以获得的最大硬币数目", "slug": "/maximum-number-of-coins-you-can-get/", "src": "https://leetcode.cn/problems/maximum-number-of-coins-you-can-get/", "solution": null, "score": 1405.5786892723, "isPremium": false}, {"id": 3301, "title": "3301. 高度互不相同的最大塔高和", "slug": "/maximize-the-total-height-of-unique-towers/", "src": "https://leetcode.cn/problems/maximize-the-total-height-of-unique-towers/", "solution": null, "score": 1448.2251797153, "isPremium": false}, {"id": 945, "title": "945. 使数组唯一的最小增量", "slug": "/minimum-increment-to-make-array-unique/", "src": "https://leetcode.cn/problems/minimum-increment-to-make-array-unique/", "solution": null, "score": 1448.1207963663, "isPremium": false}, {"id": 1846, "title": "1846. 减小和重新排列数组后的最大元素", "slug": "/maximum-element-after-decreasing-and-rearranging/", "src": "https://leetcode.cn/problems/maximum-element-after-decreasing-and-rearranging/", "solution": null, "score": 1454.3901912166, "isPremium": false}, {"id": 3462, "title": "3462. 提取至多 K 个元素的最大总和", "slug": "/maximum-sum-with-at-most-k-elements/", "src": "https://leetcode.cn/problems/maximum-sum-with-at-most-k-elements/", "solution": null, "score": null, "isPremium": false}, {"id": 1647, "title": "1647. 字符频次唯一的最小删除次数", "slug": "/minimum-deletions-to-make-character-frequencies-unique/", "src": "https://leetcode.cn/problems/minimum-deletions-to-make-character-frequencies-unique/", "solution": null, "score": 1509.5432131875, "isPremium": false}, {"id": 2971, "title": "2971. 找到最大周长的多边形", "slug": "/find-polygon-with-the-largest-perimeter/", "src": "https://leetcode.cn/problems/find-polygon-with-the-largest-perimeter/", "solution": null, "score": 1521.1616133347, "isPremium": false}, {"id": 2178, "title": "2178. 拆分成最多数目的正偶数之和", "slug": "/maximum-split-of-positive-even-integers/", "src": "https://leetcode.cn/problems/maximum-split-of-positive-even-integers/", "solution": null, "score": 1538.233149704, "isPremium": false}, {"id": 2567, "title": "2567. 修改两个元素的最小分数", "slug": "/minimum-score-by-changing-two-elements/", "src": "https://leetcode.cn/problems/minimum-score-by-changing-two-elements/", "solution": null, "score": 1608.577875807, "isPremium": false}, {"id": 1509, "title": "1509. 三次操作后最大值与最小值的最小差", "slug": "/minimum-difference-between-largest-and-smallest-value-in-three-moves/", "src": "https://leetcode.cn/problems/minimum-difference-between-largest-and-smallest-value-in-three-moves/", "solution": null, "score": 1653.0356626499, "isPremium": false}, {"id": 3397, "title": "3397. 执行操作后不同元素的最大数量", "slug": "/maximum-number-of-distinct-elements-after-operations/", "src": "https://leetcode.cn/problems/maximum-number-of-distinct-elements-after-operations/", "solution": null, "score": 1687.0611664517, "isPremium": false}, {"id": 3457, "title": "3457. 吃披萨", "slug": "/eat-pizzas/", "src": "https://leetcode.cn/problems/eat-pizzas/", "solution": null, "score": null, "isPremium": false}, {"id": "LCP 40", "title": "LCP 40. 心算挑战", "slug": "/uOAnQW/", "src": "https://leetcode.cn/problems/uOAnQW/", "solution": null, "score": null, "isPremium": false}, {"id": 1262, "title": "1262. 可被三整除的最大和", "slug": "/greatest-sum-divisible-by-three/", "src": "https://leetcode.cn/problems/greatest-sum-divisible-by-three/", "solution": null, "score": 1762.0307532652, "isPremium": false}, {"id": 948, "title": "948. 令牌放置", "slug": "/bag-of-tokens/", "src": "https://leetcode.cn/problems/bag-of-tokens/", "solution": null, "score": 1762.3115124143, "isPremium": false}, {"id": 1775, "title": "1775. 通过最少操作次数使数组的和相等", "slug": "/equal-sum-arrays-with-minimum-number-of-operations/", "src": "https://leetcode.cn/problems/equal-sum-arrays-with-minimum-number-of-operations/", "solution": null, "score": 1850.4091449367, "isPremium": false}, {"id": 2333, "title": "2333. 最小差值平方和", "slug": "/minimum-sum-of-squared-difference/", "src": "https://leetcode.cn/problems/minimum-sum-of-squared-difference/", "solution": null, "score": 2011.0496162515, "isPremium": false}, {"id": 3440, "title": "3440. 重新安排会议得到最多空余时间 II", "slug": "/reschedule-meetings-for-maximum-free-time-ii/", "src": "https://leetcode.cn/problems/reschedule-meetings-for-maximum-free-time-ii/", "solution": null, "score": null, "isPremium": false}, {"id": 2141, "title": "2141. 同时运行 N 台电脑的最长时间", "slug": "/maximum-running-time-of-n-computers/", "src": "https://leetcode.cn/problems/maximum-running-time-of-n-computers/", "solution": null, "score": 2265.2118886972, "isPremium": false}, {"id": 1196, "title": "1196. 最多可以买到的苹果数量", "slug": "/how-many-apples-can-you-put-into-the-basket/", "src": "https://leetcode.cn/problems/how-many-apples-can-you-put-into-the-basket/", "solution": null, "score": 1248.8026990632, "isPremium": true}, {"id": 2214, "title": "2214. 通关游戏所需的最低生命值", "slug": "/minimum-health-to-beat-game/", "src": "https://leetcode.cn/problems/minimum-health-to-beat-game/", "solution": null, "score": null, "isPremium": true}, {"id": 2098, "title": "2098. 长度为 K 的最大偶数和子序列", "slug": "/subsequence-of-size-k-with-the-largest-even-sum/", "src": "https://leetcode.cn/problems/subsequence-of-size-k-with-the-largest-even-sum/", "solution": null, "score": null, "isPremium": true}, {"id": 2548, "title": "2548. 填满背包的最大价格", "slug": "/maximum-price-to-fill-a-bag/", "src": "https://leetcode.cn/problems/maximum-price-to-fill-a-bag/", "solution": null, "score": null, "isPremium": true}, {"id": 3119, "title": "3119. 最大数量的可修复坑洼", "slug": "/maximum-number-of-potholes-that-can-be-fixed/", "src": "https://leetcode.cn/problems/maximum-number-of-potholes-that-can-be-fixed/", "solution": null, "score": null, "isPremium": true}, {"id": 2557, "title": "2557. 从一个范围内选择最多整数 II", "slug": "/maximum-number-of-integers-to-choose-from-a-range-ii/", "src": "https://leetcode.cn/problems/maximum-number-of-integers-to-choose-from-a-range-ii/", "solution": null, "score": null, "isPremium": true}, {"id": 624, "title": "624. 数组列表中的最大距离", "slug": "/maximum-distance-in-arrays/", "src": "https://leetcode.cn/problems/maximum-distance-in-arrays/", "solution": null, "score": null, "isPremium": false}, {"id": 910, "title": "910. 最小差值 II", "slug": "/smallest-range-ii/", "src": "https://leetcode.cn/problems/smallest-range-ii/", "solution": null, "score": 2134.5448970405, "isPremium": false}, {"id": 2835, "title": "2835. 使子序列的和等于目标的最少操作次数", "slug": "/minimum-operations-to-form-subsequence-with-target-sum/", "src": "https://leetcode.cn/problems/minimum-operations-to-form-subsequence-with-target-sum/", "solution": null, "score": 2207.4917475411, "isPremium": false}, {"id": 3366, "title": "3366. 最小数组和", "slug": "/minimum-array-sum/", "src": "https://leetcode.cn/problems/minimum-array-sum/", "solution": null, "score": 2040.219381217, "isPremium": false}]}, {"title": "§1.2 单序列配对", "summary": "同上，从最小/最大的元素开始贪心。<br>", "isLeaf": true, "children": [], "problems": [{"id": 2144, "title": "2144. 打折购买糖果的最小开销", "slug": "/minimum-cost-of-buying-candies-with-discount/", "src": "https://leetcode.cn/problems/minimum-cost-of-buying-candies-with-discount/", "solution": null, "score": 1260.9112824221, "isPremium": false}, {"id": 561, "title": "561. 数组拆分", "slug": "/array-partition/", "src": "https://leetcode.cn/problems/array-partition/", "solution": null, "score": null, "isPremium": false}, {"id": 1877, "title": "1877. 数组中最大数对和的最小值", "slug": "/minimize-maximum-pair-sum-in-array/", "src": "https://leetcode.cn/problems/minimize-maximum-pair-sum-in-array/", "solution": null, "score": 1301.381757401, "isPremium": false}, {"id": 881, "title": "881. 救生艇", "slug": "/boats-to-save-people/", "src": "https://leetcode.cn/problems/boats-to-save-people/", "solution": null, "score": 1529.7617243868, "isPremium": false}, {"id": 2592, "title": "2592. 最大化数组的伟大值", "slug": "/maximize-greatness-of-an-array/", "src": "https://leetcode.cn/problems/maximize-greatness-of-an-array/", "solution": null, "score": 1569.1579260438, "isPremium": false}, {"id": 2576, "title": "2576. 求出最多标记下标", "slug": "/find-the-maximum-number-of-marked-indices/", "src": "https://leetcode.cn/problems/find-the-maximum-number-of-marked-indices/", "solution": null, "score": 1843.2383664194, "isPremium": false}]}, {"title": "§1.3 双序列配对", "summary": "同上，从最小/最大的元素开始贪心。<br>", "isLeaf": true, "children": [], "problems": [{"id": 2037, "title": "2037. 使每位学生都有座位的最少移动次数", "slug": "/minimum-number-of-moves-to-seat-everyone/", "src": "https://leetcode.cn/problems/minimum-number-of-moves-to-seat-everyone/", "solution": null, "score": 1356.6925765299, "isPremium": false}, {"id": 455, "title": "455. 分发饼干", "slug": "/assign-cookies/", "src": "https://leetcode.cn/problems/assign-cookies/", "solution": null, "score": null, "isPremium": false}, {"id": 2410, "title": "2410. 运动员和训练师的最大匹配数", "slug": "/maximum-matching-of-players-with-trainers/", "src": "https://leetcode.cn/problems/maximum-matching-of-players-with-trainers/", "solution": null, "score": 1381.0888968455, "isPremium": false}, {"id": 1433, "title": "1433. 检查一个字符串是否可以打破另一个字符串", "slug": "/check-if-a-string-can-break-another-string/", "src": "https://leetcode.cn/problems/check-if-a-string-can-break-another-string/", "solution": null, "score": 1436.1125054038, "isPremium": false}, {"id": 870, "title": "870. 优势洗牌", "slug": "/advantage-shuffle/", "src": "https://leetcode.cn/problems/advantage-shuffle/", "solution": null, "score": 1648.341757882, "isPremium": false}, {"id": 826, "title": "826. 安排工作以达到最大收益", "slug": "/most-profit-assigning-work/", "src": "https://leetcode.cn/problems/most-profit-assigning-work/", "solution": null, "score": 1708.812923679, "isPremium": false}, {"id": 2449, "title": "2449. 使数组相似的最少操作次数", "slug": "/minimum-number-of-operations-to-make-arrays-similar/", "src": "https://leetcode.cn/problems/minimum-number-of-operations-to-make-arrays-similar/", "solution": null, "score": 2076.0155978787, "isPremium": false}, {"id": 1889, "title": "1889. 装包裹的最小浪费空间", "slug": "/minimum-space-wasted-from-packaging/", "src": "https://leetcode.cn/problems/minimum-space-wasted-from-packaging/", "solution": null, "score": 2214.4798747386, "isPremium": false}, {"id": 2561, "title": "2561. 重排水果", "slug": "/rearranging-fruits/", "src": "https://leetcode.cn/problems/rearranging-fruits/", "solution": null, "score": 2221.793185714, "isPremium": false}, {"id": 2323, "title": "2323. 完成所有工作的最短时间 II", "slug": "/find-minimum-time-to-finish-all-jobs-ii/", "src": "https://leetcode.cn/problems/find-minimum-time-to-finish-all-jobs-ii/", "solution": null, "score": null, "isPremium": true}]}, {"title": "§1.4 从最左/最右开始贪心", "summary": "对于无法排序的题目，尝试从左到右/从右到左贪心。思考第一个数/最后一个数的贪心策略，把 $n$ 个数的原问题转换成 $n-1$ 个数（或更少）的子问题。<br>读者可以对比下面的题目和 <a href=\"/lc-rating/list/dynamic_programming\">动态规划题单</a> 中的线性 DP、状态机 DP 的区别，思考什么情况下只能 DP 不能贪心，从而加深对「局部最优」和「全局最优」的理解。<br>", "isLeaf": true, "children": [], "problems": [{"id": 3402, "title": "3402. 使每一列严格递增的最少操作次数", "slug": "/minimum-operations-to-make-columns-strictly-increasing/", "src": "https://leetcode.cn/problems/minimum-operations-to-make-columns-strictly-increasing/", "solution": null, "score": 1245.8337430135, "isPremium": false}, {"id": 3191, "title": "3191. 使二进制数组全部等于 1 的最少操作次数 I", "slug": "/minimum-operations-to-make-binary-array-elements-equal-to-one-i/", "src": "https://leetcode.cn/problems/minimum-operations-to-make-binary-array-elements-equal-to-one-i/", "solution": null, "score": 1311.979717243, "isPremium": false}, {"id": 1827, "title": "1827. 最少操作使数组递增", "slug": "/minimum-operations-to-make-the-array-increasing/", "src": "https://leetcode.cn/problems/minimum-operations-to-make-the-array-increasing/", "solution": null, "score": 1314.8600143277, "isPremium": false}, {"id": 2027, "title": "2027. 转换字符串的最少操作次数", "slug": "/minimum-moves-to-convert-string/", "src": "https://leetcode.cn/problems/minimum-moves-to-convert-string/", "solution": null, "score": 1346.3556309143, "isPremium": false}, {"id": 605, "title": "605. 种花问题", "slug": "/can-place-flowers/", "src": "https://leetcode.cn/problems/can-place-flowers/", "solution": null, "score": null, "isPremium": false}, {"id": 3111, "title": "3111. 覆盖所有点的最少矩形数目", "slug": "/minimum-rectangles-to-cover-points/", "src": "https://leetcode.cn/problems/minimum-rectangles-to-cover-points/", "solution": null, "score": 1401.2732392084, "isPremium": false}, {"id": 2957, "title": "2957. 消除相邻近似相等字符", "slug": "/remove-adjacent-almost-equal-characters/", "src": "https://leetcode.cn/problems/remove-adjacent-almost-equal-characters/", "solution": null, "score": 1429.9599761889, "isPremium": false}, {"id": 3192, "title": "3192. 使二进制数组全部等于 1 的最少操作次数 II", "slug": "/minimum-operations-to-make-binary-array-elements-equal-to-one-ii/", "src": "https://leetcode.cn/problems/minimum-operations-to-make-binary-array-elements-equal-to-one-ii/", "solution": null, "score": 1432.7805314078, "isPremium": false}, {"id": 2789, "title": "2789. 合并后数组中的最大元素", "slug": "/largest-element-in-an-array-after-merge-operations/", "src": "https://leetcode.cn/problems/largest-element-in-an-array-after-merge-operations/", "solution": null, "score": 1484.8385256564, "isPremium": false}, {"id": 1529, "title": "1529. 最少的后缀翻转次数", "slug": "/minimum-suffix-flips/", "src": "https://leetcode.cn/problems/minimum-suffix-flips/", "solution": null, "score": 1392.6601629182, "isPremium": false}, {"id": 1144, "title": "1144. 递减元素使数组呈锯齿状", "slug": "/decrease-elements-to-make-array-zigzag/", "src": "https://leetcode.cn/problems/decrease-elements-to-make-array-zigzag/", "solution": null, "score": 1558.7188539503, "isPremium": false}, {"id": 3228, "title": "3228. 将 1 移动到末尾的最大操作次数", "slug": "/maximum-number-of-operations-to-move-ones-to-the-end/", "src": "https://leetcode.cn/problems/maximum-number-of-operations-to-move-ones-to-the-end/", "solution": null, "score": 1593.301573479, "isPremium": false}, {"id": 2086, "title": "2086. 喂食仓鼠的最小食物桶数", "slug": "/minimum-number-of-food-buckets-to-feed-the-hamsters/", "src": "https://leetcode.cn/problems/minimum-number-of-food-buckets-to-feed-the-hamsters/", "solution": null, "score": 1622.8414025136, "isPremium": false}, {"id": 2571, "title": "2571. 将整数减少到零需要的最少操作数", "slug": "/minimum-operations-to-reduce-an-integer-to-0/", "src": "https://leetcode.cn/problems/minimum-operations-to-reduce-an-integer-to-0/", "solution": null, "score": 1649.2000410344, "isPremium": false}, {"id": 2712, "title": "2712. 使所有字符相等的最小成本", "slug": "/minimum-cost-to-make-all-characters-equal/", "src": "https://leetcode.cn/problems/minimum-cost-to-make-all-characters-equal/", "solution": null, "score": 1791.0336923305, "isPremium": false}, {"id": 3326, "title": "3326. 使数组非递减的最少除法操作次数", "slug": "/minimum-division-operations-to-make-array-non-decreasing/", "src": "https://leetcode.cn/problems/minimum-division-operations-to-make-array-non-decreasing/", "solution": null, "score": 1864.4526192193, "isPremium": false}, {"id": 1536, "title": "1536. 排布二进制网格的最少交换次数", "slug": "/minimum-swaps-to-arrange-a-binary-grid/", "src": "https://leetcode.cn/problems/minimum-swaps-to-arrange-a-binary-grid/", "solution": null, "score": 1880.5909929633, "isPremium": false}, {"id": 2673, "title": "2673. 使二叉树所有路径值相等的最小代价", "slug": "/make-costs-of-paths-equal-in-a-binary-tree/", "src": "https://leetcode.cn/problems/make-costs-of-paths-equal-in-a-binary-tree/", "solution": null, "score": 1917.1049672432, "isPremium": false}, {"id": 861, "title": "861. 翻转矩阵后的得分", "slug": "/score-after-flipping-matrix/", "src": "https://leetcode.cn/problems/score-after-flipping-matrix/", "solution": null, "score": 1818.0024504436, "isPremium": false}, {"id": 955, "title": "955. 删列造序 II", "slug": "/delete-columns-to-make-sorted-ii/", "src": "https://leetcode.cn/problems/delete-columns-to-make-sorted-ii/", "solution": null, "score": 1876.3854625677, "isPremium": false}, {"id": 2366, "title": "2366. 将数组排序的最少替换次数", "slug": "/minimum-replacements-to-sort-the-array/", "src": "https://leetcode.cn/problems/minimum-replacements-to-sort-the-array/", "solution": null, "score": 2060.379991517, "isPremium": false}, {"id": 2193, "title": "2193. 得到回文串的最少操作次数", "slug": "/minimum-number-of-moves-to-make-palindrome/", "src": "https://leetcode.cn/problems/minimum-number-of-moves-to-make-palindrome/", "solution": null, "score": 2090.6800569319, "isPremium": false}, {"id": 2528, "title": "2528. 最大化城市的最小电量", "slug": "/maximize-the-minimum-powered-city/", "src": "https://leetcode.cn/problems/maximize-the-minimum-powered-city/", "solution": null, "score": 2235.5784618885, "isPremium": false}, {"id": 3449, "title": "3449. 最大化游戏分数的最小值", "slug": "/maximize-the-minimum-game-score/", "src": "https://leetcode.cn/problems/maximize-the-minimum-game-score/", "solution": null, "score": null, "isPremium": false}, {"id": 2422, "title": "2422. 使用合并操作将数组转换为回文序列", "slug": "/merge-operations-to-turn-array-into-a-palindrome/", "src": "https://leetcode.cn/problems/merge-operations-to-turn-array-into-a-palindrome/", "solution": null, "score": null, "isPremium": true}]}, {"title": "§1.5 划分型贪心", "summary": "把数组/字符串划分成满足要求的若干段，最小化/最大化划分的段数。<br>思考方法同上，尝试从左到右/从右到左贪心。<br>读者可以对比下面的题目和 <a href=\"/lc-rating/list/dynamic_programming\">动态规划题单</a> 中的划分型 DP 的区别，思考什么情况下只能 DP 不能贪心，从而加深对「局部最优」和「全局最优」的理解。<br>", "isLeaf": true, "children": [], "problems": [{"id": 1221, "title": "1221. 分割平衡字符串", "slug": "/split-a-string-in-balanced-strings/", "src": "https://leetcode.cn/problems/split-a-string-in-balanced-strings/", "solution": null, "score": 1219.5284561367, "isPremium": false}, {"id": 2405, "title": "2405. 子字符串的最优划分", "slug": "/optimal-partition-of-string/", "src": "https://leetcode.cn/problems/optimal-partition-of-string/", "solution": null, "score": 1355.3956434989, "isPremium": false}, {"id": 2294, "title": "2294. 划分数组使最大差为 K", "slug": "/partition-array-such-that-maximum-difference-is-k/", "src": "https://leetcode.cn/problems/partition-array-such-that-maximum-difference-is-k/", "solution": null, "score": 1416.4124723866, "isPremium": false}, {"id": 2358, "title": "2358. 分组的最大数量", "slug": "/maximum-number-of-groups-entering-a-competition/", "src": "https://leetcode.cn/problems/maximum-number-of-groups-entering-a-competition/", "solution": null, "score": 1502.5363677723, "isPremium": false}, {"id": 2522, "title": "2522. 将字符串分割成值不超过 K 的子字符串", "slug": "/partition-string-into-substrings-with-values-at-most-k/", "src": "https://leetcode.cn/problems/partition-string-into-substrings-with-values-at-most-k/", "solution": null, "score": 1604.5128423093, "isPremium": false}, {"id": 1546, "title": "1546. 和为目标值且不重叠的非空子数组的最大数目", "slug": "/maximum-number-of-non-overlapping-subarrays-with-sum-equals-target/", "src": "https://leetcode.cn/problems/maximum-number-of-non-overlapping-subarrays-with-sum-equals-target/", "solution": null, "score": 1855.377046154, "isPremium": false}, {"id": 2436, "title": "2436. 使子数组最大公约数大于一的最小分割数", "slug": "/minimum-split-into-subarrays-with-gcd-greater-than-one/", "src": "https://leetcode.cn/problems/minimum-split-into-subarrays-with-gcd-greater-than-one/", "solution": null, "score": null, "isPremium": true}, {"id": 2892, "title": "2892. 将相邻元素相乘后得到最小化数组", "slug": "/minimizing-array-after-replacing-pairs-with-their-product/", "src": "https://leetcode.cn/problems/minimizing-array-after-replacing-pairs-with-their-product/", "solution": null, "score": null, "isPremium": true}]}, {"title": "§1.6 先枚举，再贪心", "summary": "枚举题目的其中一个变量，将其视作已知条件，然后在此基础上贪心。<br>也可以枚举答案，检查是否可以满足要求。（类似二分答案）<br>", "isLeaf": true, "children": [], "problems": [{"id": 2171, "title": "2171. 拿出最少数目的魔法豆", "slug": "/removing-minimum-number-of-magic-beans/", "src": "https://leetcode.cn/problems/removing-minimum-number-of-magic-beans/", "solution": null, "score": 1748.1339100823, "isPremium": false}, {"id": 3085, "title": "3085. 成为 K 特殊字符串需要删除的最少字符数", "slug": "/minimum-deletions-to-make-string-k-special/", "src": "https://leetcode.cn/problems/minimum-deletions-to-make-string-k-special/", "solution": null, "score": 1764.7072848367, "isPremium": false}, {"id": 1727, "title": "1727. 重新排列后的最大子矩阵", "slug": "/largest-submatrix-with-rearrangements/", "src": "https://leetcode.cn/problems/largest-submatrix-with-rearrangements/", "solution": null, "score": 1926.7059583253, "isPremium": false}, {"id": 2749, "title": "2749. 得到整数零需要执行的最少操作数", "slug": "/minimum-operations-to-make-the-integer-zero/", "src": "https://leetcode.cn/problems/minimum-operations-to-make-the-integer-zero/", "solution": null, "score": 2132.06233459, "isPremium": false}, {"id": 2910, "title": "2910. 合法分组的最少组数", "slug": "/minimum-number-of-groups-to-create-a-valid-assignment/", "src": "https://leetcode.cn/problems/minimum-number-of-groups-to-create-a-valid-assignment/", "solution": null, "score": 2132.1944636902, "isPremium": false}, {"id": 2234, "title": "2234. 花园的最大总美丽值", "slug": "/maximum-total-beauty-of-the-gardens/", "src": "https://leetcode.cn/problems/maximum-total-beauty-of-the-gardens/", "solution": null, "score": 2561.508149216, "isPremium": false}]}, {"title": "§1.7 交换论证法", "summary": "交换论证法（exchange argument）用于证明一类贪心算法的正确性，也可以用来启发思考。做法如下：<br>1. 对于题目，猜想按照「某种顺序」处理数据，可以得到最优解。<br>2. 交换顺序中的两个元素 $a_i$ 和 $a_j$，计算交换后的答案。<br>3. 对比交换前后的答案。如果交换后，答案没有变得更优，则说明猜想成立。<br>也可以不用猜想，而是计算「先 $a_i$ 后 $a_j$」和「先 $a_j$ 后 $a_i$」对应的答案，通过比较两个答案谁更优，来确定按照何种顺序处理数据。<br><a href=\"https://leetcode.cn/problems/minimum-processing-time/solution/tan-xin-pythonjavacgo-by-endlesscheng-8fzf/\">讲解（以 2895 题为例）</a><br>补充：<br>", "isLeaf": true, "children": [], "problems": [{"id": 2895, "title": "2895. 最小处理时间", "slug": "/minimum-processing-time/", "src": "https://leetcode.cn/problems/minimum-processing-time/", "solution": null, "score": 1351.6909336495, "isPremium": false}, {"id": 3457, "title": "3457. 吃披萨", "slug": "/eat-pizzas/", "src": "https://leetcode.cn/problems/eat-pizzas/", "solution": null, "score": null, "isPremium": false}, {"id": 1665, "title": "1665. 完成所有任务的最少初始能量", "slug": "/minimum-initial-energy-to-finish-tasks/", "src": "https://leetcode.cn/problems/minimum-initial-energy-to-finish-tasks/", "solution": null, "score": 1900.8434122725, "isPremium": false}, {"id": 3273, "title": "3273. 对 Bob 造成的最少伤害", "slug": "/minimum-amount-of-damage-dealt-to-bob/", "src": "https://leetcode.cn/problems/minimum-amount-of-damage-dealt-to-bob/", "solution": null, "score": 2012.8694334235, "isPremium": false}, {"id": 2136, "title": "2136. 全部开花的最早一天", "slug": "/earliest-possible-day-of-full-bloom/", "src": "https://leetcode.cn/problems/earliest-possible-day-of-full-bloom/", "solution": null, "score": 2033.4597721985, "isPremium": false}, {"id": 179, "title": "179. 最大数", "slug": "/largest-number/", "src": "https://leetcode.cn/problems/largest-number/", "solution": null, "score": null, "isPremium": false}, {"id": 3309, "title": "3309. 连接二进制表示可形成的最大数值", "slug": "/maximum-possible-number-by-binary-concatenation/", "src": "https://leetcode.cn/problems/maximum-possible-number-by-binary-concatenation/", "solution": null, "score": 1363.7443380057, "isPremium": false}]}, {"title": "§1.8 相邻不同", "summary": "给定正整数数组，每次操作，把数组中的两个数各减少一，并去掉变成 $0$ 的数。目标：使最后剩下的数最小，或者最大化操作次数。<br>由于每次操作的都是两个下标不同的数，把这些下标按顺序拼接，可以构造出一个相邻元素不同的序列。例如 $(1,2),(2,3),(3,4)$ 这三个操作，可以拼接成 $[1,2,3,2,3,4]$。<br><a href=\"https://leetcode.cn/problems/reorganize-string/solution/tan-xin-gou-zao-pai-xu-bu-pai-xu-liang-c-h9jg/\">证明/构造方案</a><br>**扩展**：<br>", "isLeaf": true, "children": [], "problems": [{"id": 2335, "title": "2335. 装满杯子需要的最短总时长", "slug": "/minimum-amount-of-time-to-fill-cups/", "src": "https://leetcode.cn/problems/minimum-amount-of-time-to-fill-cups/", "solution": null, "score": 1360.421258727, "isPremium": false}, {"id": 1753, "title": "1753. 移除石子的最大得分", "slug": "/maximum-score-from-removing-stones/", "src": "https://leetcode.cn/problems/maximum-score-from-removing-stones/", "solution": null, "score": 1487.5826663483, "isPremium": false}, {"id": 1054, "title": "1054. 距离相等的条形码", "slug": "/distant-barcodes/", "src": "https://leetcode.cn/problems/distant-barcodes/", "solution": null, "score": 1701.5735371897, "isPremium": false}, {"id": 2856, "title": "2856. 删除数对后的最小数组长度", "slug": "/minimum-array-length-after-pair-removals/", "src": "https://leetcode.cn/problems/minimum-array-length-after-pair-removals/", "solution": null, "score": 1749.9743684275, "isPremium": false}, {"id": 1953, "title": "1953. 你可以工作的最大周数", "slug": "/maximum-number-of-weeks-for-which-you-can-work/", "src": "https://leetcode.cn/problems/maximum-number-of-weeks-for-which-you-can-work/", "solution": null, "score": 1803.7518552874, "isPremium": false}, {"id": 767, "title": "767. 重构字符串", "slug": "/reorganize-string/", "src": "https://leetcode.cn/problems/reorganize-string/", "solution": null, "score": 1681.3263732456, "isPremium": false}, {"id": 3139, "title": "3139. 使数组中所有元素相等的最小开销", "slug": "/minimum-cost-to-equalize-array/", "src": "https://leetcode.cn/problems/minimum-cost-to-equalize-array/", "solution": null, "score": 2666.1303987257, "isPremium": false}, {"id": 621, "title": "621. 任务调度器", "slug": "/task-scheduler/", "src": "https://leetcode.cn/problems/task-scheduler/", "solution": null, "score": null, "isPremium": false}, {"id": 358, "title": "358. K 距离间隔重排字符串", "slug": "/rearrange-string-k-distance-apart/", "src": "https://leetcode.cn/problems/rearrange-string-k-distance-apart/", "solution": null, "score": null, "isPremium": true}, {"id": 984, "title": "984. 不含 AAA 或 BBB 的字符串", "slug": "/string-without-aaa-or-bbb/", "src": "https://leetcode.cn/problems/string-without-aaa-or-bbb/", "solution": null, "score": 1474.0150725665, "isPremium": false}, {"id": 1405, "title": "1405. 最长快乐字符串", "slug": "/longest-happy-string/", "src": "https://leetcode.cn/problems/longest-happy-string/", "solution": null, "score": 1820.58557644, "isPremium": false}]}, {"title": "§1.9 反悔贪心", "summary": "一般要用到**堆**。<br><a href=\"https://leetcode.cn/problems/p0NxJO/solution/fan-hui-tan-xin-fu-ti-dan-pythonjavacgoj-hxup/\">讲解</a><br>", "isLeaf": true, "children": [], "problems": [{"id": "LCP 30", "title": "LCP 30. 魔塔游戏", "slug": "/p0NxJO/", "src": "https://leetcode.cn/problems/p0NxJO/", "solution": null, "score": null, "isPremium": false}, {"id": 1642, "title": "1642. 可以到达的最远建筑", "slug": "/furthest-building-you-can-reach/", "src": "https://leetcode.cn/problems/furthest-building-you-can-reach/", "solution": null, "score": 1962.2005269503, "isPremium": false}, {"id": 630, "title": "630. 课程表 III", "slug": "/course-schedule-iii/", "src": "https://leetcode.cn/problems/course-schedule-iii/", "solution": null, "score": null, "isPremium": false}, {"id": 871, "title": "871. 最低加油次数", "slug": "/minimum-number-of-refueling-stops/", "src": "https://leetcode.cn/problems/minimum-number-of-refueling-stops/", "solution": null, "score": 2074.4120526679, "isPremium": false}, {"id": 3362, "title": "3362. 零数组变换 III", "slug": "/zero-array-transformation-iii/", "src": "https://leetcode.cn/problems/zero-array-transformation-iii/", "solution": null, "score": 2423.8553548566, "isPremium": false}, {"id": 2813, "title": "2813. 子序列最大优雅度", "slug": "/maximum-elegance-of-a-k-length-subsequence/", "src": "https://leetcode.cn/problems/maximum-elegance-of-a-k-length-subsequence/", "solution": null, "score": 2582.0814855506, "isPremium": false}, {"id": 3049, "title": "3049. 标记所有下标的最早秒数 II", "slug": "/earliest-second-to-mark-indices-ii/", "src": "https://leetcode.cn/problems/earliest-second-to-mark-indices-ii/", "solution": null, "score": 3111.1274320356, "isPremium": false}, {"id": 2599, "title": "2599. 使前缀和数组非负", "slug": "/make-the-prefix-sum-non-negative/", "src": "https://leetcode.cn/problems/make-the-prefix-sum-non-negative/", "solution": null, "score": null, "isPremium": true}]}], "problems": []}, {"title": "二、区间贪心", "summary": "区间贪心有如下经典问题：<br>- **不相交区间**（单机器调度/活动安排）：给定一些区间，从中选出尽量多的两两互不相交的区间。<br>- **区间分组**（任务调度/会议室）：给定一些区间，把这些区间分成最少的组，使得每组内的区间互不相交。<br>- **区间选点**（射气球，Interval Stabbing）：给定一些区间，在数轴上放置最少的点，使得每个区间都包含至少一个点。最少要放置多少个点？<br>- **区间覆盖**（灌溉花园）：给定一些区间，从中选出尽量少的区间，覆盖一条指定线段 $[s,t]$。<br>**任务**：总结上述四种区间贪心问题的解法，尤其是排序的规则和理由，什么时候要按照左端点排序？什么时候要按照右端点排序？排序的目的是什么？欢迎在评论区分享你的总结笔记。<br>", "isLeaf": false, "children": [{"title": "§2.1 不相交区间", "summary": "**变形**：每个区间有各自的分数，从中选一些两两互不相交的区间，最大化得分之和。详见 <a href=\"/lc-rating/list/dynamic_programming\">动态规划题单</a> 中的「§6.4 不相交区间」。<br>", "isLeaf": true, "children": [], "problems": [{"id": 435, "title": "435. 无重叠区间", "slug": "/non-overlapping-intervals/", "src": "https://leetcode.cn/problems/non-overlapping-intervals/", "solution": null, "score": null, "isPremium": false}, {"id": 646, "title": "646. 最长数对链", "slug": "/maximum-length-of-pair-chain/", "src": "https://leetcode.cn/problems/maximum-length-of-pair-chain/", "solution": null, "score": null, "isPremium": false}, {"id": 1520, "title": "1520. 最多的不重叠子字符串", "slug": "/maximum-number-of-non-overlapping-substrings/", "src": "https://leetcode.cn/problems/maximum-number-of-non-overlapping-substrings/", "solution": null, "score": 2362.6480880348, "isPremium": false}, {"id": 3458, "title": "3458. 选择 K 个互不重叠的特殊子字符串", "slug": "/select-k-disjoint-special-substrings/", "src": "https://leetcode.cn/problems/select-k-disjoint-special-substrings/", "solution": null, "score": null, "isPremium": false}]}, {"title": "§2.2 区间分组", "summary": "", "isLeaf": true, "children": [], "problems": [{"id": 2406, "title": "2406. 将区间分为最少组数", "slug": "/divide-intervals-into-minimum-number-of-groups/", "src": "https://leetcode.cn/problems/divide-intervals-into-minimum-number-of-groups/", "solution": null, "score": 1713.3954468582, "isPremium": false}, {"id": 253, "title": "253. 会议室 II", "slug": "/meeting-rooms-ii/", "src": "https://leetcode.cn/problems/meeting-rooms-ii/", "solution": null, "score": null, "isPremium": true}]}, {"title": "§2.3 区间选点", "summary": "本质上和不相交区间是一样的。<br>", "isLeaf": true, "children": [], "problems": [{"id": 452, "title": "452. 用最少数量的箭引爆气球", "slug": "/minimum-number-of-arrows-to-burst-balloons/", "src": "https://leetcode.cn/problems/minimum-number-of-arrows-to-burst-balloons/", "solution": null, "score": null, "isPremium": false}, {"id": 757, "title": "757. 设置交集大小至少为2", "slug": "/set-intersection-size-at-least-two/", "src": "https://leetcode.cn/problems/set-intersection-size-at-least-two/", "solution": null, "score": 2378.6234112504, "isPremium": false}]}, {"title": "§2.4 区间覆盖", "summary": "<a href=\"https://leetcode.cn/problems/jump-game-ii/solutions/2926993/tu-jie-yi-zhang-tu-miao-dong-tiao-yue-yo-h2d4/\">图解</a><br>", "isLeaf": true, "children": [], "problems": [{"id": 45, "title": "45. 跳跃游戏 II", "slug": "/jump-game-ii/", "src": "https://leetcode.cn/problems/jump-game-ii/", "solution": null, "score": null, "isPremium": false}, {"id": 1024, "title": "1024. 视频拼接", "slug": "/video-stitching/", "src": "https://leetcode.cn/problems/video-stitching/", "solution": null, "score": 1746.135917977, "isPremium": false}, {"id": 1326, "title": "1326. 灌溉花园的最少水龙头数目", "slug": "/minimum-number-of-taps-to-open-to-water-a-garden/", "src": "https://leetcode.cn/problems/minimum-number-of-taps-to-open-to-water-a-garden/", "solution": null, "score": 1885.0178370385, "isPremium": false}]}, {"title": "§2.5 合并区间", "summary": "> 可能算不上贪心，但为了题单的完整性，也放到这个分类中。<br>", "isLeaf": true, "children": [], "problems": [{"id": 56, "title": "56. 合并区间", "slug": "/merge-intervals/", "src": "https://leetcode.cn/problems/merge-intervals/", "solution": null, "score": null, "isPremium": false}, {"id": 57, "title": "57. 插入区间", "slug": "/insert-interval/", "src": "https://leetcode.cn/problems/insert-interval/", "solution": null, "score": null, "isPremium": false}, {"id": 55, "title": "55. 跳跃游戏", "slug": "/jump-game/", "src": "https://leetcode.cn/problems/jump-game/", "solution": null, "score": null, "isPremium": false}, {"id": 763, "title": "763. 划分字母区间", "slug": "/partition-labels/", "src": "https://leetcode.cn/problems/partition-labels/", "solution": null, "score": 1443.0697629277, "isPremium": false}, {"id": 3169, "title": "3169. 无需开会的工作日", "slug": "/count-days-without-meetings/", "src": "https://leetcode.cn/problems/count-days-without-meetings/", "solution": null, "score": 1483.48867803, "isPremium": false}, {"id": 2580, "title": "2580. 统计将重叠区间合并成组的方案数", "slug": "/count-ways-to-group-overlapping-ranges/", "src": "https://leetcode.cn/problems/count-ways-to-group-overlapping-ranges/", "solution": null, "score": 1631.5850830561, "isPremium": false}, {"id": 3394, "title": "3394. 判断网格图能否被切割成块", "slug": "/check-if-grid-can-be-cut-into-sections/", "src": "https://leetcode.cn/problems/check-if-grid-can-be-cut-into-sections/", "solution": null, "score": 1916.1432350156, "isPremium": false}, {"id": 2963, "title": "2963. 统计好分割方案的数目", "slug": "/count-the-number-of-good-partitions/", "src": "https://leetcode.cn/problems/count-the-number-of-good-partitions/", "solution": null, "score": 1984.9685663849, "isPremium": false}, {"id": 2584, "title": "2584. 分割数组使乘积互质", "slug": "/split-the-array-to-make-coprime-products/", "src": "https://leetcode.cn/problems/split-the-array-to-make-coprime-products/", "solution": null, "score": 2159.4844281244, "isPremium": false}, {"id": 616, "title": "616. 给字符串添加加粗标签", "slug": "/add-bold-tag-in-string/", "src": "https://leetcode.cn/problems/add-bold-tag-in-string/", "solution": null, "score": null, "isPremium": true}, {"id": 758, "title": "758. 字符串中的加粗单词", "slug": "/bold-words-in-string/", "src": "https://leetcode.cn/problems/bold-words-in-string/", "solution": null, "score": 1547.0385279086, "isPremium": true}, {"id": 3323, "title": "3323. 通过插入区间最小化连通组", "slug": "/minimize-connected-groups-by-inserting-interval/", "src": "https://leetcode.cn/problems/minimize-connected-groups-by-inserting-interval/", "solution": null, "score": null, "isPremium": true}, {"id": 759, "title": "759. 员工空闲时间", "slug": "/employee-free-time/", "src": "https://leetcode.cn/problems/employee-free-time/", "solution": null, "score": 1710.1120861153, "isPremium": true}, {"id": 2655, "title": "2655. 寻找最大长度的未覆盖区间", "slug": "/find-maximal-uncovered-ranges/", "src": "https://leetcode.cn/problems/find-maximal-uncovered-ranges/", "solution": null, "score": null, "isPremium": true}]}, {"title": "§2.6 其他区间贪心", "summary": "", "isLeaf": true, "children": [], "problems": [{"id": 1288, "title": "1288. 删除被覆盖区间", "slug": "/remove-covered-intervals/", "src": "https://leetcode.cn/problems/remove-covered-intervals/", "solution": null, "score": 1375.0234414965, "isPremium": false}, {"id": 2054, "title": "2054. 两个最好的不重叠活动", "slug": "/two-best-non-overlapping-events/", "src": "https://leetcode.cn/problems/two-best-non-overlapping-events/", "solution": null, "score": 1883.3541964032, "isPremium": false}, {"id": 1705, "title": "1705. 吃苹果的最大数目", "slug": "/maximum-number-of-eaten-apples/", "src": "https://leetcode.cn/problems/maximum-number-of-eaten-apples/", "solution": null, "score": 1929.9086934334, "isPremium": false}, {"id": 1353, "title": "1353. 最多可以参加的会议数目", "slug": "/maximum-number-of-events-that-can-be-attended/", "src": "https://leetcode.cn/problems/maximum-number-of-events-that-can-be-attended/", "solution": null, "score": 2015.7291888336, "isPremium": false}, {"id": 2589, "title": "2589. 完成所有任务的最少时间", "slug": "/minimum-time-to-complete-all-tasks/", "src": "https://leetcode.cn/problems/minimum-time-to-complete-all-tasks/", "solution": null, "score": 2380.5983169295, "isPremium": false}]}], "problems": []}, {"title": "三、字符串贪心", "summary": "", "isLeaf": false, "children": [{"title": "§3.1 字典序最小/最大", "summary": "**字典序**的定义如下：<br>- 对于两个字符串 $a$ 和 $b$，从左到右依次比较 $a[i]$ 和 $b[i]$ 的字符 ASCII 值的大小。<br>- $a[i]\\ne b[i]$ 时，如果 $a[i]<b[i]$，那么 $a$ 的字典序更小，否则 $b$ 的字典序更小。<br>- 如果没有出现 $a[i]\\ne b[i]$，则短的字符串字典序更小。<br>- 如果两个字符串的长度和内容均相同，那么两个字符串的字典序一样。<br>字典序的定义也可以推广到数组上，按照上述方法比较两个数组的字典序。<br>", "isLeaf": true, "children": [], "problems": [{"id": 1323, "title": "1323. 6 和 9 组成的最大数字", "slug": "/maximum-69-number/", "src": "https://leetcode.cn/problems/maximum-69-number/", "solution": null, "score": 1193.9819783429, "isPremium": false}, {"id": 3216, "title": "3216. 交换后字典序最小的字符串", "slug": "/lexicographically-smallest-string-after-a-swap/", "src": "https://leetcode.cn/problems/lexicographically-smallest-string-after-a-swap/", "solution": null, "score": 1242.8232032062, "isPremium": false}, {"id": 2697, "title": "2697. 字典序最小回文串", "slug": "/lexicographically-smallest-palindrome/", "src": "https://leetcode.cn/problems/lexicographically-smallest-palindrome/", "solution": null, "score": 1303.7347742929, "isPremium": false}, {"id": 1881, "title": "1881. 插入后的最大值", "slug": "/maximum-value-after-insertion/", "src": "https://leetcode.cn/problems/maximum-value-after-insertion/", "solution": null, "score": 1381.2168789318, "isPremium": false}, {"id": 2734, "title": "2734. 执行子串操作后的字典序最小字符串", "slug": "/lexicographically-smallest-string-after-substring-operation/", "src": "https://leetcode.cn/problems/lexicographically-smallest-string-after-substring-operation/", "solution": null, "score": 1405.123188264, "isPremium": false}, {"id": 1946, "title": "1946. 子字符串突变后可能得到的最大整数", "slug": "/largest-number-after-mutating-substring/", "src": "https://leetcode.cn/problems/largest-number-after-mutating-substring/", "solution": null, "score": 1445.3734269673, "isPremium": false}, {"id": 1663, "title": "1663. 具有给定数值的最小字符串", "slug": "/smallest-string-with-a-given-numeric-value/", "src": "https://leetcode.cn/problems/smallest-string-with-a-given-numeric-value/", "solution": null, "score": 1460.5903088359, "isPremium": false}, {"id": 1328, "title": "1328. 破坏回文串", "slug": "/break-a-palindrome/", "src": "https://leetcode.cn/problems/break-a-palindrome/", "solution": null, "score": 1473.864993045, "isPremium": false}, {"id": 2259, "title": "2259. 移除指定数字得到的最大结果", "slug": "/remove-digit-from-number-to-maximize-result/", "src": "https://leetcode.cn/problems/remove-digit-from-number-to-maximize-result/", "solution": null, "score": 1331.5287857686, "isPremium": false}, {"id": 2566, "title": "2566. 替换一个数字后的最大差值", "slug": "/maximum-difference-by-remapping-a-digit/", "src": "https://leetcode.cn/problems/maximum-difference-by-remapping-a-digit/", "solution": null, "score": 1396.1044458638, "isPremium": false}, {"id": 670, "title": "670. 最大交换", "slug": "/maximum-swap/", "src": "https://leetcode.cn/problems/maximum-swap/", "solution": null, "score": null, "isPremium": false}, {"id": 3106, "title": "3106. 满足距离约束且字典序最小的字符串", "slug": "/lexicographically-smallest-string-after-operations-with-constraint/", "src": "https://leetcode.cn/problems/lexicographically-smallest-string-after-operations-with-constraint/", "solution": null, "score": 1515.4316202561, "isPremium": false}, {"id": 1053, "title": "1053. 交换一次的先前排列", "slug": "/previous-permutation-with-one-swap/", "src": "https://leetcode.cn/problems/previous-permutation-with-one-swap/", "solution": null, "score": 1633.1789521619, "isPremium": false}, {"id": 2375, "title": "2375. 根据模式串构造最小数字", "slug": "/construct-smallest-number-from-di-string/", "src": "https://leetcode.cn/problems/construct-smallest-number-from-di-string/", "solution": null, "score": 1641.9424376927, "isPremium": false}, {"id": 2182, "title": "2182. 构造限制重复的字符串", "slug": "/construct-string-with-repeat-limit/", "src": "https://leetcode.cn/problems/construct-string-with-repeat-limit/", "solution": null, "score": 1680.1353258588, "isPremium": false}, {"id": 738, "title": "738. 单调递增的数字", "slug": "/monotone-increasing-digits/", "src": "https://leetcode.cn/problems/monotone-increasing-digits/", "solution": null, "score": null, "isPremium": false}, {"id": 3403, "title": "3403. 从盒子中找出字典序最大的字符串 I", "slug": "/find-the-lexicographically-largest-string-from-the-box-i/", "src": "https://leetcode.cn/problems/find-the-lexicographically-largest-string-from-the-box-i/", "solution": null, "score": 1761.8759092138, "isPremium": false}, {"id": 3170, "title": "3170. 删除星号以后字典序最小的字符串", "slug": "/lexicographically-minimum-string-after-removing-stars/", "src": "https://leetcode.cn/problems/lexicographically-minimum-string-after-removing-stars/", "solution": null, "score": 1772.4702293335, "isPremium": false}, {"id": 1363, "title": "1363. 形成三的最大倍数", "slug": "/largest-multiple-of-three/", "src": "https://leetcode.cn/problems/largest-multiple-of-three/", "solution": null, "score": 1822.9768689716, "isPremium": false}, {"id": 1754, "title": "1754. 构造字典序最大的合并字符串", "slug": "/largest-merge-of-two-strings/", "src": "https://leetcode.cn/problems/largest-merge-of-two-strings/", "solution": null, "score": 1828.6438563573, "isPremium": false}, {"id": 1202, "title": "1202. 交换字符串中的元素", "slug": "/smallest-string-with-swaps/", "src": "https://leetcode.cn/problems/smallest-string-with-swaps/", "solution": null, "score": 1855.4479039876, "isPremium": false}, {"id": 2434, "title": "2434. 使用机器人打印字典序最小的字符串", "slug": "/using-a-robot-to-print-the-lexicographically-smallest-string/", "src": "https://leetcode.cn/problems/using-a-robot-to-print-the-lexicographically-smallest-string/", "solution": null, "score": 1953.137726744, "isPremium": false}, {"id": 1625, "title": "1625. 执行操作后字典序最小的字符串", "slug": "/lexicographically-smallest-string-after-applying-operations/", "src": "https://leetcode.cn/problems/lexicographically-smallest-string-after-applying-operations/", "solution": null, "score": 1992.0032292739, "isPremium": false}, {"id": 2948, "title": "2948. 交换得到字典序最小的数组", "slug": "/make-lexicographically-smallest-array-by-swapping-elements/", "src": "https://leetcode.cn/problems/make-lexicographically-smallest-array-by-swapping-elements/", "solution": null, "score": 2047.3919190727, "isPremium": false}, {"id": 564, "title": "564. 寻找最近的回文数", "slug": "/find-the-closest-palindrome/", "src": "https://leetcode.cn/problems/find-the-closest-palindrome/", "solution": null, "score": null, "isPremium": false}, {"id": 1505, "title": "1505. 最多 K 次交换相邻数位后得到的最小整数", "slug": "/minimum-possible-integer-after-at-most-k-adjacent-swaps-on-digits/", "src": "https://leetcode.cn/problems/minimum-possible-integer-after-at-most-k-adjacent-swaps-on-digits/", "solution": null, "score": 2336.5210003185, "isPremium": false}, {"id": 2663, "title": "2663. 字典序最小的美丽字符串", "slug": "/lexicographically-smallest-beautiful-string/", "src": "https://leetcode.cn/problems/lexicographically-smallest-beautiful-string/", "solution": null, "score": 2415.7434855724, "isPremium": false}, {"id": 3302, "title": "3302. 字典序最小的合法序列", "slug": "/find-the-lexicographically-smallest-valid-sequence/", "src": "https://leetcode.cn/problems/find-the-lexicographically-smallest-valid-sequence/", "solution": null, "score": 2473.6778280303, "isPremium": false}, {"id": 3474, "title": "3474. 字典序最小的生成字符串", "slug": "/lexicographically-smallest-generated-string/", "src": "https://leetcode.cn/problems/lexicographically-smallest-generated-string/", "solution": null, "score": null, "isPremium": false}, {"id": 555, "title": "555. 分割连接字符串", "slug": "/split-concatenated-strings/", "src": "https://leetcode.cn/problems/split-concatenated-strings/", "solution": null, "score": null, "isPremium": true}, {"id": 3088, "title": "3088. 使字符串反回文", "slug": "/make-string-anti-palindrome/", "src": "https://leetcode.cn/problems/make-string-anti-palindrome/", "solution": null, "score": null, "isPremium": true}]}, {"title": "§3.2 回文串贪心", "summary": "> 部分题目也出现在其他贪心分类中，为了题单的完整性整理到一起。<br>", "isLeaf": true, "children": [], "problems": [{"id": 409, "title": "409. 最长回文串", "slug": "/longest-palindrome/", "src": "https://leetcode.cn/problems/longest-palindrome/", "solution": null, "score": null, "isPremium": false}, {"id": 2697, "title": "2697. 字典序最小回文串", "slug": "/lexicographically-smallest-palindrome/", "src": "https://leetcode.cn/problems/lexicographically-smallest-palindrome/", "solution": null, "score": 1303.7347742929, "isPremium": false}, {"id": 680, "title": "680. 验证回文串 II", "slug": "/valid-palindrome-ii/", "src": "https://leetcode.cn/problems/valid-palindrome-ii/", "solution": null, "score": null, "isPremium": false}, {"id": 1328, "title": "1328. 破坏回文串", "slug": "/break-a-palindrome/", "src": "https://leetcode.cn/problems/break-a-palindrome/", "solution": null, "score": 1473.864993045, "isPremium": false}, {"id": 1400, "title": "1400. 构造 K 个回文字符串", "slug": "/construct-k-palindrome-strings/", "src": "https://leetcode.cn/problems/construct-k-palindrome-strings/", "solution": null, "score": 1530.495439788, "isPremium": false}, {"id": 2131, "title": "2131. 连接两字母单词得到的最长回文串", "slug": "/longest-palindrome-by-concatenating-two-letter-words/", "src": "https://leetcode.cn/problems/longest-palindrome-by-concatenating-two-letter-words/", "solution": null, "score": 1556.8824239708, "isPremium": false}, {"id": 2384, "title": "2384. 最大回文数字", "slug": "/largest-palindromic-number/", "src": "https://leetcode.cn/problems/largest-palindromic-number/", "solution": null, "score": 1636.47322627, "isPremium": false}, {"id": 3035, "title": "3035. 回文字符串的最大数量", "slug": "/maximum-palindromes-after-operations/", "src": "https://leetcode.cn/problems/maximum-palindromes-after-operations/", "solution": null, "score": 1856.6336926997, "isPremium": false}, {"id": 1616, "title": "1616. 分割两个字符串得到回文串", "slug": "/split-two-strings-to-make-palindrome/", "src": "https://leetcode.cn/problems/split-two-strings-to-make-palindrome/", "solution": null, "score": 1868.1914861381, "isPremium": false}, {"id": 1147, "title": "1147. 段式回文", "slug": "/longest-chunked-palindrome-decomposition/", "src": "https://leetcode.cn/problems/longest-chunked-palindrome-decomposition/", "solution": null, "score": 1912.0829958001, "isPremium": false}, {"id": 2193, "title": "2193. 得到回文串的最少操作次数", "slug": "/minimum-number-of-moves-to-make-palindrome/", "src": "https://leetcode.cn/problems/minimum-number-of-moves-to-make-palindrome/", "solution": null, "score": 2090.6800569319, "isPremium": false}, {"id": 564, "title": "564. 寻找最近的回文数", "slug": "/find-the-closest-palindrome/", "src": "https://leetcode.cn/problems/find-the-closest-palindrome/", "solution": null, "score": null, "isPremium": false}, {"id": 266, "title": "266. 回文排列", "slug": "/palindrome-permutation/", "src": "https://leetcode.cn/problems/palindrome-permutation/", "solution": null, "score": null, "isPremium": true}, {"id": 2422, "title": "2422. 使用合并操作将数组转换为回文序列", "slug": "/merge-operations-to-turn-array-into-a-palindrome/", "src": "https://leetcode.cn/problems/merge-operations-to-turn-array-into-a-palindrome/", "solution": null, "score": null, "isPremium": true}, {"id": 1842, "title": "1842. 下个由相同数字构成的回文串", "slug": "/next-palindrome-using-same-digits/", "src": "https://leetcode.cn/problems/next-palindrome-using-same-digits/", "solution": null, "score": null, "isPremium": true}, {"id": 3088, "title": "3088. 使字符串反回文", "slug": "/make-string-anti-palindrome/", "src": "https://leetcode.cn/problems/make-string-anti-palindrome/", "solution": null, "score": null, "isPremium": true}]}, {"title": "§3.3 合法括号字符串", "summary": "见 <a href=\"/lc-rating/list/data_structure\">数据结构题单</a> 中的「**§3.4 合法括号字符串**」。<br>", "isLeaf": false, "children": [], "problems": []}], "problems": []}, {"title": "四、数学贪心", "summary": "", "isLeaf": false, "children": [{"title": "§4.1 基础", "summary": "", "isLeaf": true, "children": [], "problems": [{"id": 2160, "title": "2160. 拆分数位后四位数字的最小和", "slug": "/minimum-sum-of-four-digit-number-after-splitting-digits/", "src": "https://leetcode.cn/problems/minimum-sum-of-four-digit-number-after-splitting-digits/", "solution": null, "score": 1314.2912238536, "isPremium": false}, {"id": 2578, "title": "2578. 最小和分割", "slug": "/split-with-minimum-sum/", "src": "https://leetcode.cn/problems/split-with-minimum-sum/", "solution": null, "score": 1350.5883729249, "isPremium": false}, {"id": 2244, "title": "2244. 完成所有任务需要的最少轮数", "slug": "/minimum-rounds-to-complete-all-tasks/", "src": "https://leetcode.cn/problems/minimum-rounds-to-complete-all-tasks/", "solution": null, "score": 1371.8092952004, "isPremium": false}, {"id": 2870, "title": "2870. 使数组为空的最少操作次数", "slug": "/minimum-number-of-operations-to-make-array-empty/", "src": "https://leetcode.cn/problems/minimum-number-of-operations-to-make-array-empty/", "solution": null, "score": 1392.3629194433, "isPremium": false}, {"id": 1217, "title": "1217. 玩筹码", "slug": "/minimum-cost-to-move-chips-to-the-same-position/", "src": "https://leetcode.cn/problems/minimum-cost-to-move-chips-to-the-same-position/", "solution": null, "score": 1407.5442381391, "isPremium": false}, {"id": "LCS 01", "title": "LCS 01. 下载插件", "slug": "/Ju9Xwi/", "src": "https://leetcode.cn/problems/Ju9Xwi/", "solution": null, "score": null, "isPremium": false}, {"id": 3091, "title": "3091. 执行操作使数据元素之和大于等于 K", "slug": "/apply-operations-to-make-sum-of-array-greater-than-or-equal-to-k/", "src": "https://leetcode.cn/problems/apply-operations-to-make-sum-of-array-greater-than-or-equal-to-k/", "solution": null, "score": 1521.7402232638, "isPremium": false}, {"id": 397, "title": "397. 整数替换", "slug": "/integer-replacement/", "src": "https://leetcode.cn/problems/integer-replacement/", "solution": null, "score": null, "isPremium": false}]}, {"title": "§4.2 乘积贪心", "summary": "", "isLeaf": true, "children": [], "problems": [{"id": 628, "title": "628. 三个数的最大乘积", "slug": "/maximum-product-of-three-numbers/", "src": "https://leetcode.cn/problems/maximum-product-of-three-numbers/", "solution": null, "score": null, "isPremium": false}, {"id": 1567, "title": "1567. 乘积为正数的最长子数组长度", "slug": "/maximum-length-of-subarray-with-positive-product/", "src": "https://leetcode.cn/problems/maximum-length-of-subarray-with-positive-product/", "solution": null, "score": 1710.3243520032, "isPremium": false}]}, {"title": "§4.3 排序不等式", "summary": "给定两个长度均为 $n$ 的数组 $a$ 和 $b$，可以交换同一数组内的元素，最小化/最大化<br>$$<br>a[0]\\cdot b[0] + a[1]\\cdot b[1] +\\cdots+ a[n-1]\\cdot b[n-1]<br>$$<br>把 $a$ 和 $b$ 都从小到大排序，可以最大化上式。<br>把 $a$ 从小到大排序，$b$ 从大到小排序，可以最小化上式。<br>", "isLeaf": true, "children": [], "problems": [{"id": 2285, "title": "2285. 道路的最大总重要性", "slug": "/maximum-total-importance-of-roads/", "src": "https://leetcode.cn/problems/maximum-total-importance-of-roads/", "solution": null, "score": 1496.2502937005, "isPremium": false}, {"id": 3016, "title": "3016. 输入单词需要的最少按键次数 II", "slug": "/minimum-number-of-pushes-to-type-word-ii/", "src": "https://leetcode.cn/problems/minimum-number-of-pushes-to-type-word-ii/", "solution": null, "score": 1533.5722750742, "isPremium": false}, {"id": 1402, "title": "1402. 做菜顺序", "slug": "/reducing-dishes/", "src": "https://leetcode.cn/problems/reducing-dishes/", "solution": null, "score": 1679.2607152001, "isPremium": false}, {"id": 2931, "title": "2931. 购买物品的最大开销", "slug": "/maximum-spending-after-buying-items/", "src": "https://leetcode.cn/problems/maximum-spending-after-buying-items/", "solution": null, "score": 1822.3170524016, "isPremium": false}, {"id": 1589, "title": "1589. 所有排列中的最大和", "slug": "/maximum-sum-obtained-of-any-permutation/", "src": "https://leetcode.cn/problems/maximum-sum-obtained-of-any-permutation/", "solution": null, "score": 1871.3112059413, "isPremium": false}, {"id": 1874, "title": "1874. 两个数组的最小乘积和", "slug": "/minimize-product-sum-of-two-arrays/", "src": "https://leetcode.cn/problems/minimize-product-sum-of-two-arrays/", "solution": null, "score": null, "isPremium": true}, {"id": 2268, "title": "2268. 最少按键次数", "slug": "/minimum-number-of-keypresses/", "src": "https://leetcode.cn/problems/minimum-number-of-keypresses/", "solution": null, "score": null, "isPremium": true}]}, {"title": "§4.4 基本不等式", "summary": "**栅栏问题**：长为 $n$ 米的篱笆栅栏，围成一个矩形，矩形面积最大是多少？<br>**变形**：长为 $n$ 米的栅栏分成 $k$ 份，每份围成一个正方形，面积之和最小是多少？<br>", "isLeaf": true, "children": [], "problems": [{"id": 3081, "title": "3081. 替换字符串中的问号使分数最小", "slug": "/replace-question-marks-in-string-to-minimize-its-value/", "src": "https://leetcode.cn/problems/replace-question-marks-in-string-to-minimize-its-value/", "solution": null, "score": 1904.6714229335, "isPremium": false}, {"id": 1969, "title": "1969. 数组元素的最小非零乘积", "slug": "/minimum-non-zero-product-of-the-array-elements/", "src": "https://leetcode.cn/problems/minimum-non-zero-product-of-the-array-elements/", "solution": null, "score": 1966.7067914206, "isPremium": false}, {"id": 2939, "title": "2939. 最大异或乘积", "slug": "/maximum-xor-product/", "src": "https://leetcode.cn/problems/maximum-xor-product/", "solution": null, "score": 2127.5100545681, "isPremium": false}, {"id": 2897, "title": "2897. 对数组执行操作使平方和最大", "slug": "/apply-operations-on-array-to-maximize-sum-of-squares/", "src": "https://leetcode.cn/problems/apply-operations-on-array-to-maximize-sum-of-squares/", "solution": null, "score": 2301.4069974024, "isPremium": false}]}, {"title": "§4.5 中位数贪心", "summary": "给定数组，每次操作可以把其中一个数加一/减一，把所有数都变成一样的，最少要操作多少次？<br>把所有数都变成数组的**中位数**是最优的。<br><a href=\"https://leetcode.cn/problems/5TxKeK/solution/zhuan-huan-zhong-wei-shu-tan-xin-dui-din-7r9b/\">两种证明方法</a><br>", "isLeaf": true, "children": [], "problems": [{"id": 462, "title": "462. 最小操作次数使数组元素相等 II", "slug": "/minimum-moves-to-equal-array-elements-ii/", "src": "https://leetcode.cn/problems/minimum-moves-to-equal-array-elements-ii/", "solution": null, "score": null, "isPremium": false}, {"id": 2033, "title": "2033. 获取单值网格的最小操作数", "slug": "/minimum-operations-to-make-a-uni-value-grid/", "src": "https://leetcode.cn/problems/minimum-operations-to-make-a-uni-value-grid/", "solution": null, "score": 1671.9261598, "isPremium": false}, {"id": 2448, "title": "2448. 使数组相等的最小开销", "slug": "/minimum-cost-to-make-array-equal/", "src": "https://leetcode.cn/problems/minimum-cost-to-make-array-equal/", "solution": null, "score": 2005.3737929084, "isPremium": false}, {"id": 2607, "title": "2607. 使子数组元素和相等", "slug": "/make-k-subarray-sums-equal/", "src": "https://leetcode.cn/problems/make-k-subarray-sums-equal/", "solution": null, "score": 2071.3208991938, "isPremium": false}, {"id": 2967, "title": "2967. 使数组成为等数数组的最小代价", "slug": "/minimum-cost-to-make-array-equalindromic/", "src": "https://leetcode.cn/problems/minimum-cost-to-make-array-equalindromic/", "solution": null, "score": 2116.3244842355, "isPremium": false}, {"id": 1478, "title": "1478. 安排邮筒", "slug": "/allocate-mailboxes/", "src": "https://leetcode.cn/problems/allocate-mailboxes/", "solution": null, "score": 2190.1757477854, "isPremium": false}, {"id": 2968, "title": "2968. 执行操作使频率分数最大", "slug": "/apply-operations-to-maximize-frequency-score/", "src": "https://leetcode.cn/problems/apply-operations-to-maximize-frequency-score/", "solution": null, "score": 2444.2791027022, "isPremium": false}, {"id": 1703, "title": "1703. 得到连续 K 个 1 的最少相邻交换次数", "slug": "/minimum-adjacent-swaps-for-k-consecutive-ones/", "src": "https://leetcode.cn/problems/minimum-adjacent-swaps-for-k-consecutive-ones/", "solution": null, "score": 2466.8891773908, "isPremium": false}, {"id": 3086, "title": "3086. 拾起 K 个 1 需要的最少行动次数", "slug": "/minimum-moves-to-pick-k-ones/", "src": "https://leetcode.cn/problems/minimum-moves-to-pick-k-ones/", "solution": null, "score": 2672.7613091907, "isPremium": false}, {"id": "LCP 24", "title": "LCP 24. 数字游戏", "slug": "/5TxKeK/", "src": "https://leetcode.cn/problems/5TxKeK/", "solution": null, "score": null, "isPremium": false}, {"id": 3441, "title": "3441. 变成好标题的最少代价", "slug": "/minimum-cost-good-caption/", "src": "https://leetcode.cn/problems/minimum-cost-good-caption/", "solution": null, "score": null, "isPremium": false}, {"id": 296, "title": "296. 最佳的碰头地点", "slug": "/best-meeting-point/", "src": "https://leetcode.cn/problems/best-meeting-point/", "solution": null, "score": null, "isPremium": true}]}, {"title": "§4.6 归纳法", "summary": "", "isLeaf": true, "children": [], "problems": [{"id": 2952, "title": "2952. 需要添加的硬币的最小数量", "slug": "/minimum-number-of-coins-to-be-added/", "src": "https://leetcode.cn/problems/minimum-number-of-coins-to-be-added/", "solution": null, "score": 1784.3506628869, "isPremium": false}, {"id": 330, "title": "330. 按要求补齐数组", "slug": "/patching-array/", "src": "https://leetcode.cn/problems/patching-array/", "solution": null, "score": null, "isPremium": false}, {"id": 1798, "title": "1798. 你能构造出连续值的最大数目", "slug": "/maximum-number-of-consecutive-values-you-can-make/", "src": "https://leetcode.cn/problems/maximum-number-of-consecutive-values-you-can-make/", "solution": null, "score": 1931.0849921121, "isPremium": false}]}, {"title": "§4.7 其他数学贪心", "summary": "", "isLeaf": true, "children": [], "problems": [{"id": 1414, "title": "1414. 和为 K 的最少斐波那契数字数目", "slug": "/find-the-minimum-number-of-fibonacci-numbers-whose-sum-is-k/", "src": "https://leetcode.cn/problems/find-the-minimum-number-of-fibonacci-numbers-whose-sum-is-k/", "solution": null, "score": 1465.7023558248, "isPremium": false}, {"id": 3107, "title": "3107. 使数组中位数等于 K 的最少操作数", "slug": "/minimum-operations-to-make-median-of-array-equal-to-k/", "src": "https://leetcode.cn/problems/minimum-operations-to-make-median-of-array-equal-to-k/", "solution": null, "score": 1604.9805572557, "isPremium": false}, {"id": 754, "title": "754. 到达终点数字", "slug": "/reach-a-number/", "src": "https://leetcode.cn/problems/reach-a-number/", "solution": null, "score": 1880.3261182293, "isPremium": false}, {"id": 1058, "title": "1058. 最小化舍入误差以满足目标", "slug": "/minimize-rounding-error-to-meet-target/", "src": "https://leetcode.cn/problems/minimize-rounding-error-to-meet-target/", "solution": null, "score": null, "isPremium": true}]}], "problems": []}, {"title": "五、思维题", "summary": "回想一下高考数学的最后一题，三个小问，前两小问让你计算一些特殊情况，第三小问让你计算/证明一个一般的结论。这其实就是**从特殊到一般**的思考方式，我们在做算法题（尤其是思维题和构造题）时，也可以从最简单、最特殊的情况开始，去探索题目的性质，逐渐过渡到一般情况。<br>**思考清单**<br>- **小型数组**：$\\textit{nums}$ 只有 $1$ 个数？只有 $2$ 个数？只有 $3$ 个数？<br>- **万里挑一**：$\\textit{nums}$ 所有数都相同？只有一个数不一样？有两个数不一样？某个数特别大？<br>- **黑白世界**：只有两种数？例如 $[0,1,0,1,0,1]$ 或者 $\\texttt{ababab}$。<br>- **反向思考**：如果答案是 $1$，输入会是什么样的？如果答案是 $2$？是 $\\textit{nums}[0]$？是 $\\textit{nums}[1]$？<br>- **枚举归纳**：试试小范围打表，暴力枚举所有情况，找规律。<br>思考这些特殊情况，有时会产生求解原问题的**灵感**。<br>", "isLeaf": false, "children": [{"title": "§5.1 从特殊到一般", "summary": "", "isLeaf": true, "children": [], "problems": [{"id": 2745, "title": "2745. 构造最长的新字符串", "slug": "/construct-the-longest-new-string/", "src": "https://leetcode.cn/problems/construct-the-longest-new-string/", "solution": null, "score": 1607.4192947808, "isPremium": false}, {"id": 2611, "title": "2611. 老鼠和奶酪", "slug": "/mice-and-cheese/", "src": "https://leetcode.cn/problems/mice-and-cheese/", "solution": null, "score": 1663.456591933, "isPremium": false}, {"id": 1029, "title": "1029. 两地调度", "slug": "/two-city-scheduling/", "src": "https://leetcode.cn/problems/two-city-scheduling/", "solution": null, "score": 1348.0079390256, "isPremium": false}, {"id": 2645, "title": "2645. 构造有效字符串的最少插入数", "slug": "/minimum-additions-to-make-valid-string/", "src": "https://leetcode.cn/problems/minimum-additions-to-make-valid-string/", "solution": null, "score": 1477.7669322402, "isPremium": false}, {"id": 2202, "title": "2202. K 次操作后最大化顶端元素", "slug": "/maximize-the-topmost-element-after-k-moves/", "src": "https://leetcode.cn/problems/maximize-the-topmost-element-after-k-moves/", "solution": null, "score": 1716.9721777, "isPremium": false}, {"id": 2568, "title": "2568. 最小无法得到的或值", "slug": "/minimum-impossible-or/", "src": "https://leetcode.cn/problems/minimum-impossible-or/", "solution": null, "score": 1754.1710323358, "isPremium": false}, {"id": 1702, "title": "1702. 修改后的最大二进制字符串", "slug": "/maximum-binary-string-after-change/", "src": "https://leetcode.cn/problems/maximum-binary-string-after-change/", "solution": null, "score": 1825.4207082682, "isPremium": false}, {"id": 3012, "title": "3012. 通过操作使数组长度最小", "slug": "/minimize-length-of-array-using-operations/", "src": "https://leetcode.cn/problems/minimize-length-of-array-using-operations/", "solution": null, "score": 1832.7167755024, "isPremium": false}, {"id": 1526, "title": "1526. 形成目标数组的子数组最少增加次数", "slug": "/minimum-number-of-increments-on-subarrays-to-form-a-target-array/", "src": "https://leetcode.cn/problems/minimum-number-of-increments-on-subarrays-to-form-a-target-array/", "solution": null, "score": 1872.0350138774, "isPremium": false}, {"id": 2350, "title": "2350. 不可能得到的最短骰子序列", "slug": "/shortest-impossible-sequence-of-rolls/", "src": "https://leetcode.cn/problems/shortest-impossible-sequence-of-rolls/", "solution": null, "score": 1960.5763266754, "isPremium": false}, {"id": 517, "title": "517. 超级洗衣机", "slug": "/super-washing-machines/", "src": "https://leetcode.cn/problems/super-washing-machines/", "solution": null, "score": null, "isPremium": false}, {"id": 2499, "title": "2499. 让数组不相等的最小总代价", "slug": "/minimum-total-cost-to-make-arrays-unequal/", "src": "https://leetcode.cn/problems/minimum-total-cost-to-make-arrays-unequal/", "solution": null, "score": 2633.0144045478, "isPremium": false}, {"id": 3357, "title": "3357. 最小化相邻元素的最大差值", "slug": "/minimize-the-maximum-adjacent-element-difference/", "src": "https://leetcode.cn/problems/minimize-the-maximum-adjacent-element-difference/", "solution": null, "score": 3077.2342981036, "isPremium": false}, {"id": 3431, "title": "3431. 对数字排序的最小解锁下标", "slug": "/minimum-unlocked-indices-to-sort-nums/", "src": "https://leetcode.cn/problems/minimum-unlocked-indices-to-sort-nums/", "solution": null, "score": null, "isPremium": true}]}, {"title": "§5.2 脑筋急转弯", "summary": "从一般到特殊。<br>", "isLeaf": true, "children": [], "problems": [{"id": 2733, "title": "2733. 既不是最小值也不是最大值", "slug": "/neither-minimum-nor-maximum/", "src": "https://leetcode.cn/problems/neither-minimum-nor-maximum/", "solution": null, "score": 1147.8274860083, "isPremium": false}, {"id": 1903, "title": "1903. 字符串中的最大奇数", "slug": "/largest-odd-number-in-string/", "src": "https://leetcode.cn/problems/largest-odd-number-in-string/", "solution": null, "score": 1248.8547072235, "isPremium": false}, {"id": 2549, "title": "2549. 统计桌面上的不同数字", "slug": "/count-distinct-numbers-on-board/", "src": "https://leetcode.cn/problems/count-distinct-numbers-on-board/", "solution": null, "score": 1265.8320564115, "isPremium": false}, {"id": 3432, "title": "3432. 统计元素和差值为偶数的分区方案", "slug": "/count-partitions-with-even-sum-difference/", "src": "https://leetcode.cn/problems/count-partitions-with-even-sum-difference/", "solution": null, "score": null, "isPremium": false}, {"id": 2396, "title": "2396. 严格回文的数字", "slug": "/strictly-palindromic-number/", "src": "https://leetcode.cn/problems/strictly-palindromic-number/", "solution": null, "score": 1328.5499677186, "isPremium": false}, {"id": 1689, "title": "1689. 十-二进制数的最少数目", "slug": "/partitioning-into-minimum-number-of-deci-binary-numbers/", "src": "https://leetcode.cn/problems/partitioning-into-minimum-number-of-deci-binary-numbers/", "solution": null, "score": 1355.3825442341, "isPremium": false}, {"id": 598, "title": "598. 区间加法 II", "slug": "/range-addition-ii/", "src": "https://leetcode.cn/problems/range-addition-ii/", "solution": null, "score": null, "isPremium": false}, {"id": 521, "title": "521. 最长特殊序列 Ⅰ", "slug": "/longest-uncommon-subsequence-i/", "src": "https://leetcode.cn/problems/longest-uncommon-subsequence-i/", "solution": null, "score": null, "isPremium": false}, {"id": 3227, "title": "3227. 字符串元音游戏", "slug": "/vowels-game-in-a-string/", "src": "https://leetcode.cn/problems/vowels-game-in-a-string/", "solution": null, "score": 1451.8103068349, "isPremium": false}, {"id": 2419, "title": "2419. 按位与最大的最长子数组", "slug": "/longest-subarray-with-maximum-bitwise-and/", "src": "https://leetcode.cn/problems/longest-subarray-with-maximum-bitwise-and/", "solution": null, "score": 1495.5180147817, "isPremium": false}, {"id": 3424, "title": "3424. 将数组变相同的最小代价", "slug": "/minimum-cost-to-make-arrays-identical/", "src": "https://leetcode.cn/problems/minimum-cost-to-make-arrays-identical/", "solution": null, "score": 1502.9530838838, "isPremium": false}, {"id": 1992, "title": "1992. 找到所有的农场组", "slug": "/find-all-groups-of-farmland/", "src": "https://leetcode.cn/problems/find-all-groups-of-farmland/", "solution": null, "score": 1539.2250193318, "isPremium": false}, {"id": 1007, "title": "1007. 行相等的最少多米诺旋转", "slug": "/minimum-domino-rotations-for-equal-row/", "src": "https://leetcode.cn/problems/minimum-domino-rotations-for-equal-row/", "solution": null, "score": 1541.348438509, "isPremium": false}, {"id": 2811, "title": "2811. 判断是否能拆分数组", "slug": "/check-if-it-is-possible-to-split-array/", "src": "https://leetcode.cn/problems/check-if-it-is-possible-to-split-array/", "solution": null, "score": 1543.1204810684, "isPremium": false}, {"id": 2211, "title": "2211. 统计道路上的碰撞次数", "slug": "/count-collisions-on-a-road/", "src": "https://leetcode.cn/problems/count-collisions-on-a-road/", "solution": null, "score": 1581.4963716166, "isPremium": false}, {"id": 3207, "title": "3207. 与敌人战斗后的最大分数", "slug": "/maximum-points-after-enemy-battles/", "src": "https://leetcode.cn/problems/maximum-points-after-enemy-battles/", "solution": null, "score": 1591.3005653292, "isPremium": false}, {"id": 3471, "title": "3471. 找出最大的几近缺失整数", "slug": "/find-the-largest-almost-missing-integer/", "src": "https://leetcode.cn/problems/find-the-largest-almost-missing-integer/", "solution": null, "score": null, "isPremium": false}, {"id": 2546, "title": "2546. 执行逐位运算使字符串相等", "slug": "/apply-bitwise-operations-to-make-strings-equal/", "src": "https://leetcode.cn/problems/apply-bitwise-operations-to-make-strings-equal/", "solution": null, "score": 1604.6299874552, "isPremium": false}, {"id": 1503, "title": "1503. 所有蚂蚁掉下来前的最后一刻", "slug": "/last-moment-before-all-ants-fall-out-of-a-plank/", "src": "https://leetcode.cn/problems/last-moment-before-all-ants-fall-out-of-a-plank/", "solution": null, "score": 1618.6016480451, "isPremium": false}, {"id": 2860, "title": "2860. 让所有学生保持开心的分组方法数", "slug": "/happy-students/", "src": "https://leetcode.cn/problems/happy-students/", "solution": null, "score": 1625.7172632295, "isPremium": false}, {"id": 1332, "title": "1332. 删除回文子序列", "slug": "/remove-palindromic-subsequences/", "src": "https://leetcode.cn/problems/remove-palindromic-subsequences/", "solution": null, "score": 1628.5072578803, "isPremium": false}, {"id": 1975, "title": "1975. 最大方阵和", "slug": "/maximum-matrix-sum/", "src": "https://leetcode.cn/problems/maximum-matrix-sum/", "solution": null, "score": 1648.0880791614, "isPremium": false}, {"id": 1145, "title": "1145. 二叉树着色游戏", "slug": "/binary-tree-coloring-game/", "src": "https://leetcode.cn/problems/binary-tree-coloring-game/", "solution": null, "score": 1741.4527995252, "isPremium": false}, {"id": 1297, "title": "1297. 子串的最大出现次数", "slug": "/maximum-number-of-occurrences-of-a-substring/", "src": "https://leetcode.cn/problems/maximum-number-of-occurrences-of-a-substring/", "solution": null, "score": 1748.1523771585, "isPremium": false}, {"id": 3282, "title": "3282. 到达数组末尾的最大得分", "slug": "/reach-end-of-array-with-max-score/", "src": "https://leetcode.cn/problems/reach-end-of-array-with-max-score/", "solution": null, "score": 1771.7317932329, "isPremium": false}, {"id": 2332, "title": "2332. 坐上公交的最晚时间", "slug": "/the-latest-time-to-catch-a-bus/", "src": "https://leetcode.cn/problems/the-latest-time-to-catch-a-bus/", "solution": null, "score": 1840.9122452886, "isPremium": false}, {"id": 2680, "title": "2680. 最大或值", "slug": "/maximum-or/", "src": "https://leetcode.cn/problems/maximum-or/", "solution": null, "score": 1912.1926699881, "isPremium": false}, {"id": 2731, "title": "2731. 移动机器人", "slug": "/movement-of-robots/", "src": "https://leetcode.cn/problems/movement-of-robots/", "solution": null, "score": 1922.9521758079, "isPremium": false}, {"id": 2556, "title": "2556. 二进制矩阵中翻转最多一次使路径不连通", "slug": "/disconnect-path-in-a-binary-matrix-by-at-most-one-flip/", "src": "https://leetcode.cn/problems/disconnect-path-in-a-binary-matrix-by-at-most-one-flip/", "solution": null, "score": 2368.6674771307, "isPremium": false}, {"id": 3125, "title": "3125. 使得按位与结果为 0 的最大数字", "slug": "/maximum-number-that-makes-result-of-bitwise-and-zero/", "src": "https://leetcode.cn/problems/maximum-number-that-makes-result-of-bitwise-and-zero/", "solution": null, "score": null, "isPremium": true}, {"id": 1794, "title": "1794. 统计距离最小的子串对个数", "slug": "/count-pairs-of-equal-substrings-with-minimum-difference/", "src": "https://leetcode.cn/problems/count-pairs-of-equal-substrings-with-minimum-difference/", "solution": null, "score": null, "isPremium": true}]}, {"title": "§5.3 逆向思维", "summary": "", "isLeaf": true, "children": [], "problems": [{"id": 2139, "title": "2139. 得到目标值的最少行动次数", "slug": "/minimum-moves-to-reach-target-score/", "src": "https://leetcode.cn/problems/minimum-moves-to-reach-target-score/", "solution": null, "score": 1417.3934930077, "isPremium": false}, {"id": 1558, "title": "1558. 得到目标数组的最少函数调用次数", "slug": "/minimum-numbers-of-function-calls-to-make-target-array/", "src": "https://leetcode.cn/problems/minimum-numbers-of-function-calls-to-make-target-array/", "solution": null, "score": 1637.0082208814, "isPremium": false}, {"id": 554, "title": "554. 砖墙", "slug": "/brick-wall/", "src": "https://leetcode.cn/problems/brick-wall/", "solution": null, "score": null, "isPremium": false}, {"id": 2718, "title": "2718. 查询后矩阵的和", "slug": "/sum-of-matrix-after-queries/", "src": "https://leetcode.cn/problems/sum-of-matrix-after-queries/", "solution": null, "score": 1768.9138093037, "isPremium": false}, {"id": 417, "title": "417. 太平洋大西洋水流问题", "slug": "/pacific-atlantic-water-flow/", "src": "https://leetcode.cn/problems/pacific-atlantic-water-flow/", "solution": null, "score": null, "isPremium": false}, {"id": 991, "title": "991. 坏了的计算器", "slug": "/broken-calculator/", "src": "https://leetcode.cn/problems/broken-calculator/", "solution": null, "score": 1909.4189035523, "isPremium": false}, {"id": 2227, "title": "2227. 加密解密字符串", "slug": "/encrypt-and-decrypt-strings/", "src": "https://leetcode.cn/problems/encrypt-and-decrypt-strings/", "solution": null, "score": 1944.5673996888, "isPremium": false}, {"id": 3419, "title": "3419. 图的最大边权的最小值", "slug": "/minimize-the-maximum-edge-weight-of-graph/", "src": "https://leetcode.cn/problems/minimize-the-maximum-edge-weight-of-graph/", "solution": null, "score": 2243.2051062979, "isPremium": false}, {"id": 936, "title": "936. 戳印序列", "slug": "/stamping-the-sequence/", "src": "https://leetcode.cn/problems/stamping-the-sequence/", "solution": null, "score": 2583.406911951, "isPremium": false}]}, {"title": "§5.4 等价转换", "summary": "", "isLeaf": true, "children": [], "problems": [{"id": 3375, "title": "3375. 使数组的值全部为 K 的最少操作次数", "slug": "/minimum-operations-to-make-array-values-equal-to-k/", "src": "https://leetcode.cn/problems/minimum-operations-to-make-array-values-equal-to-k/", "solution": null, "score": 1382.8392346741, "isPremium": false}, {"id": 2914, "title": "2914. 使二进制字符串变美丽的最少修改次数", "slug": "/minimum-number-of-changes-to-make-binary-string-beautiful/", "src": "https://leetcode.cn/problems/minimum-number-of-changes-to-make-binary-string-beautiful/", "solution": null, "score": 1479.6908339113, "isPremium": false}, {"id": 3365, "title": "3365. 重排子字符串以形成目标字符串", "slug": "/rearrange-k-substrings-to-form-target-string/", "src": "https://leetcode.cn/problems/rearrange-k-substrings-to-form-target-string/", "solution": null, "score": 1513.5126466994, "isPremium": false}, {"id": 1657, "title": "1657. 确定两个字符串是否接近", "slug": "/determine-if-two-strings-are-close/", "src": "https://leetcode.cn/problems/determine-if-two-strings-are-close/", "solution": null, "score": 1530.4652027753, "isPremium": false}, {"id": 2551, "title": "2551. 将珠子放入背包中", "slug": "/put-marbles-in-bags/", "src": "https://leetcode.cn/problems/put-marbles-in-bags/", "solution": null, "score": 2042.4005521254, "isPremium": false}, {"id": 1585, "title": "1585. 检查字符串是否可以通过排序子字符串得到另一个字符串", "slug": "/check-if-string-is-transformable-with-substring-sort-operations/", "src": "https://leetcode.cn/problems/check-if-string-is-transformable-with-substring-sort-operations/", "solution": null, "score": 2333.0078041754, "isPremium": false}, {"id": 1040, "title": "1040. 移动石子直到连续 II", "slug": "/moving-stones-until-consecutive-ii/", "src": "https://leetcode.cn/problems/moving-stones-until-consecutive-ii/", "solution": null, "score": 2455.8244137907, "isPremium": false}, {"id": 249, "title": "249. 移位字符串分组", "slug": "/group-shifted-strings/", "src": "https://leetcode.cn/problems/group-shifted-strings/", "solution": null, "score": null, "isPremium": true}, {"id": 49, "title": "49. 字母异位词分组", "slug": "/group-anagrams/", "src": "https://leetcode.cn/problems/group-anagrams/", "solution": null, "score": null, "isPremium": false}, {"id": 1183, "title": "1183. 矩阵中 1 的最大数量", "slug": "/maximum-number-of-ones/", "src": "https://leetcode.cn/problems/maximum-number-of-ones/", "solution": null, "score": 2366.7099607655, "isPremium": true}]}], "problems": []}, {"title": "六、构造题", "summary": "**构造题**会给定一些约束，我们要构造一个**满足这些约束**的数组/字符串等。<br>思考方式和第五章的「思考清单」是一样的，在特殊情况中寻找灵感。<br>> 如果想做更多思维题和构造题，可以去 Codeforces 看看。<br>", "isLeaf": true, "children": [], "problems": [{"id": 942, "title": "942. 增减字符串匹配", "slug": "/di-string-match/", "src": "https://leetcode.cn/problems/di-string-match/", "solution": null, "score": 1444.2068009303, "isPremium": false}, {"id": 1968, "title": "1968. 构造元素不等于两相邻元素平均值的数组", "slug": "/array-with-elements-not-equal-to-average-of-neighbors/", "src": "https://leetcode.cn/problems/array-with-elements-not-equal-to-average-of-neighbors/", "solution": null, "score": 1499.3290269267, "isPremium": false}, {"id": 1253, "title": "1253. 重构 2 行二进制矩阵", "slug": "/reconstruct-a-2-row-binary-matrix/", "src": "https://leetcode.cn/problems/reconstruct-a-2-row-binary-matrix/", "solution": null, "score": 1505.8669082864, "isPremium": false}, {"id": 2182, "title": "2182. 构造限制重复的字符串", "slug": "/construct-string-with-repeat-limit/", "src": "https://leetcode.cn/problems/construct-string-with-repeat-limit/", "solution": null, "score": 1680.1353258588, "isPremium": false}, {"id": 969, "title": "969. 煎饼排序", "slug": "/pancake-sorting/", "src": "https://leetcode.cn/problems/pancake-sorting/", "solution": null, "score": 1590.5791055102, "isPremium": false}, {"id": 1605, "title": "1605. 给定行和列的和求可行矩阵", "slug": "/find-valid-matrix-given-row-and-column-sums/", "src": "https://leetcode.cn/problems/find-valid-matrix-given-row-and-column-sums/", "solution": null, "score": 1867.8619694847, "isPremium": false}, {"id": 2375, "title": "2375. 根据模式串构造最小数字", "slug": "/construct-smallest-number-from-di-string/", "src": "https://leetcode.cn/problems/construct-smallest-number-from-di-string/", "solution": null, "score": 1641.9424376927, "isPremium": false}, {"id": 324, "title": "324. 摆动排序 II", "slug": "/wiggle-sort-ii/", "src": "https://leetcode.cn/problems/wiggle-sort-ii/", "solution": null, "score": null, "isPremium": false}, {"id": 667, "title": "667. 优美的排列 II", "slug": "/beautiful-arrangement-ii/", "src": "https://leetcode.cn/problems/beautiful-arrangement-ii/", "solution": null, "score": null, "isPremium": false}, {"id": 2122, "title": "2122. 还原原数组", "slug": "/recover-the-original-array/", "src": "https://leetcode.cn/problems/recover-the-original-array/", "solution": null, "score": 2158.8988728254, "isPremium": false}, {"id": 932, "title": "932. 漂亮数组", "slug": "/beautiful-array/", "src": "https://leetcode.cn/problems/beautiful-array/", "solution": null, "score": 2294.0981174197, "isPremium": false}, {"id": 3311, "title": "3311. 构造符合图结构的二维矩阵", "slug": "/construct-2d-grid-matching-graph-layout/", "src": "https://leetcode.cn/problems/construct-2d-grid-matching-graph-layout/", "solution": null, "score": 2664.2117701776, "isPremium": false}, {"id": 2573, "title": "2573. 找出对应 LCP 矩阵的字符串", "slug": "/find-the-string-with-lcp/", "src": "https://leetcode.cn/problems/find-the-string-with-lcp/", "solution": null, "score": 2681.7054310332, "isPremium": false}, {"id": 1982, "title": "1982. 从子集的和还原数组", "slug": "/find-array-given-subset-sums/", "src": "https://leetcode.cn/problems/find-array-given-subset-sums/", "solution": null, "score": 2872.0290327119, "isPremium": false}, {"id": 280, "title": "280. 摆动排序", "slug": "/wiggle-sort/", "src": "https://leetcode.cn/problems/wiggle-sort/", "solution": null, "score": null, "isPremium": true}, {"id": 484, "title": "484. 寻找排列", "slug": "/find-permutation/", "src": "https://leetcode.cn/problems/find-permutation/", "solution": null, "score": null, "isPremium": true}, {"id": 1980, "title": "1980. 找出不同的二进制字符串", "slug": "/find-unique-binary-string/", "src": "https://leetcode.cn/problems/find-unique-binary-string/", "solution": null, "score": 1361.6459603518, "isPremium": false}]}, {"title": "七、其他", "summary": "", "isLeaf": true, "children": [], "problems": [{"id": 2740, "title": "2740. 找出分区值", "slug": "/find-the-value-of-the-partition/", "src": "https://leetcode.cn/problems/find-the-value-of-the-partition/", "solution": null, "score": 1301.9276849391, "isPremium": false}, {"id": 1033, "title": "1033. 移动石子直到连续", "slug": "/moving-stones-until-consecutive/", "src": "https://leetcode.cn/problems/moving-stones-until-consecutive/", "solution": null, "score": 1421.2624065513, "isPremium": false}, {"id": 1864, "title": "1864. 构成交替字符串需要的最小交换次数", "slug": "/minimum-number-of-swaps-to-make-the-binary-string-alternating/", "src": "https://leetcode.cn/problems/minimum-number-of-swaps-to-make-the-binary-string-alternating/", "solution": null, "score": 1600.5573262373, "isPremium": false}, {"id": 1899, "title": "1899. 合并若干三元组以形成目标三元组", "slug": "/merge-triplets-to-form-target-triplet/", "src": "https://leetcode.cn/problems/merge-triplets-to-form-target-triplet/", "solution": null, "score": 1635.6879273926, "isPremium": false}, {"id": 2498, "title": "2498. 青蛙过河 II", "slug": "/frog-jump-ii/", "src": "https://leetcode.cn/problems/frog-jump-ii/", "solution": null, "score": 1759.0470795449, "isPremium": false}, {"id": 134, "title": "134. 加油站", "slug": "/gas-station/", "src": "https://leetcode.cn/problems/gas-station/", "solution": null, "score": null, "isPremium": false}, {"id": 2311, "title": "2311. 小于等于 K 的最长二进制子序列", "slug": "/longest-binary-subsequence-less-than-or-equal-to-k/", "src": "https://leetcode.cn/problems/longest-binary-subsequence-less-than-or-equal-to-k/", "solution": null, "score": 1839.9203623221, "isPremium": false}, {"id": 3443, "title": "3443. K 次修改后的最大曼哈顿距离", "slug": "/maximum-manhattan-distance-after-k-changes/", "src": "https://leetcode.cn/problems/maximum-manhattan-distance-after-k-changes/", "solution": null, "score": null, "isPremium": false}, {"id": 3002, "title": "3002. 移除后集合的最多元素数", "slug": "/maximum-size-of-a-set-after-removals/", "src": "https://leetcode.cn/problems/maximum-size-of-a-set-after-removals/", "solution": null, "score": 1917.4314822412, "isPremium": false}, {"id": 2412, "title": "2412. 完成所有交易的初始最少钱数", "slug": "/minimum-money-required-before-transactions/", "src": "https://leetcode.cn/problems/minimum-money-required-before-transactions/", "solution": null, "score": 2092.0222850837, "isPremium": false}, {"id": 659, "title": "659. 分割数组为连续子序列", "slug": "/split-array-into-consecutive-subsequences/", "src": "https://leetcode.cn/problems/split-array-into-consecutive-subsequences/", "solution": null, "score": null, "isPremium": false}, {"id": 2732, "title": "2732. 找到矩阵中的好子集", "slug": "/find-a-good-subset-of-the-matrix/", "src": "https://leetcode.cn/problems/find-a-good-subset-of-the-matrix/", "solution": null, "score": 2239.7101856677, "isPremium": false}, {"id": 2790, "title": "2790. 长度递增组的最大数目", "slug": "/maximum-number-of-groups-with-increasing-length/", "src": "https://leetcode.cn/problems/maximum-number-of-groups-with-increasing-length/", "solution": null, "score": 2619.7016189999, "isPremium": false}, {"id": 782, "title": "782. 变为棋盘", "slug": "/transform-to-chessboard/", "src": "https://leetcode.cn/problems/transform-to-chessboard/", "solution": null, "score": 2429.6705422448, "isPremium": false}, {"id": 420, "title": "420. 强密码检验器", "slug": "/strong-password-checker/", "src": "https://leetcode.cn/problems/strong-password-checker/", "solution": null, "score": null, "isPremium": false}, {"id": "LCP 26", "title": "LCP 26. 导航装置", "slug": "/hSRGyL/", "src": "https://leetcode.cn/problems/hSRGyL/", "solution": null, "score": null, "isPremium": false}, {"id": "LCP 70", "title": "LCP 70. 沙地治理", "slug": "/XxZZjK/", "src": "https://leetcode.cn/problems/XxZZjK/", "solution": null, "score": null, "isPremium": false}, {"id": 3460, "title": "3460. 最多删除一次后的最长公共前缀", "slug": "/longest-common-prefix-after-at-most-one-removal/", "src": "https://leetcode.cn/problems/longest-common-prefix-after-at-most-one-removal/", "solution": null, "score": null, "isPremium": true}, {"id": 2753, "title": "2753. 计算一个环形街道上的房屋数量 II", "slug": "/count-houses-in-a-circular-street-ii/", "src": "https://leetcode.cn/problems/count-houses-in-a-circular-street-ii/", "solution": null, "score": null, "isPremium": true}, {"id": "LCS 02", "title": "LCS 02. 完成一半题目", "slug": "/WqXACV/", "src": "https://leetcode.cn/problems/WqXACV/", "solution": null, "score": null, "isPremium": false}]}, {"title": "答疑", "summary": "**问**：贪心和 DP 的区别是什么？<br>**答**：DP 可以视为带记忆化的暴力搜索，只要不遗漏任何分支，答案一定是对的。贪心可以视为带剪枝的搜索，如果贪心策略不对，就容易贪过头，把正确的分支给剪掉。<br>**问**：有没有万能方法，判断一道题是贪心还是 DP？<br>**答**：很难。如果不知道题目类型，把 DP 想成贪心的大有人在。我的建议是**先思考 DP 能不能做，再思考贪心**。如果 DP 的时间复杂度足以通过题目，就不用思考贪心策略了。<br>此外，这也说明按照题单刷题的缺点：提前知道题目类型，跳过了一些思考步骤。如何弥补这个缺点？请看 <a href=\"https://leetcode.cn/circle/discuss/RvFUtj/\">如何科学刷题</a>。<br>", "isLeaf": false, "children": [], "problems": []}], "problems": []}]}